# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).

# Disable audit
ActivityAssess.auditing_enabled = false
ActivityGta.auditing_enabled = false
ActivityObjective.auditing_enabled = false
ActivityProgramme.auditing_enabled = false
ActivityTeaching.auditing_enabled = false
ActivityTech.auditing_enabled = false
ActivityTimetable.auditing_enabled = false
Activity.auditing_enabled = false
Dropdown.auditing_enabled = false
GtaInvite.auditing_enabled = false
Objective.auditing_enabled = false
Programme.auditing_enabled = false
RoomBooking.auditing_enabled = false
Room.auditing_enabled = false
Theme.auditing_enabled = false
UniModule.auditing_enabled = false
User.auditing_enabled = false

# Users
u = User.where(email: 'dperry1@sheffield.ac.uk').first_or_create!(display_name: 'Dan Perry', role: 0, analyst: false, super_user: false)
u.get_info_from_ldap
u.save!

u = User.where(email: 'djwhiteman1@sheffield.ac.uk').first_or_create!(display_name: 'Dan Whiteman', role: 0, analyst: false, super_user: false)
u.get_info_from_ldap
u.save!

u = User.where(email: 'kgnwosu1@sheffield.ac.uk').first_or_create!(display_name: 'Gabriel Nwosu', role: 0, analyst: false, super_user: false)
u.get_info_from_ldap
u.save!

u = User.where(email: 'pdeshmukh-reeves1@sheffield.ac.uk').first_or_create!(display_name: 'Paul Deshmukh-Reeves', role: 0, analyst: false, super_user: false)
u.get_info_from_ldap
u.save!

u = User.where(email: 'njridsdale1@sheffield.ac.uk').first_or_create!(display_name: 'Nicola Ridsdale', role: 0, analyst: false, super_user: false)
u.get_info_from_ldap
u.save!

u = User.where(email: 'a.garrard@sheffield.ac.uk').first_or_create!(display_name: 'Andrew Garrard', role: 1, analyst: true, super_user: true)
u.get_info_from_ldap
u.save!

u = User.where(email: 's.archibald@sheffield.ac.uk').first_or_create!(display_name: 'Sarah Archibald', role: 0, analyst: false, super_user: false)
u.get_info_from_ldap
u.save!

u = User.where(email: 'g.e.gibson@sheffield.ac.uk').first_or_create!(display_name: 'Gemma Gibson', role: 0, analyst: false, super_user: false)
u.get_info_from_ldap
u.save!

u = User.where(email: 'm.moakes@sheffield.ac.uk').first_or_create!(display_name: 'Meg Moakes', role: 0, analyst: false, super_user: false)
u.get_info_from_ldap
u.save!

u = User.where(email: 'h.c.sharpe@sheffield.ac.uk').first_or_create!(display_name: 'Hannah Sharpe', role: 0, analyst: false, super_user: false)
u.get_info_from_ldap
u.save!

u = User.where(email: 'c.hammonds@sheffield.ac.uk').first_or_create!(display_name: 'Claire Hammonds', role: 0, analyst: false, super_user: false)
u.get_info_from_ldap
u.save!

# Database columns
Column.where(table: 'activities', db_name: 'id').first_or_create!(display_name: 'Activity ID')
Column.where(table: 'activities', db_name: 'archived').first_or_create!(display_name: 'Archived?')
Column.where(table: 'activities', db_name: 'code').first_or_create!(display_name: 'Activity Code')
Column.where(table: 'activities', db_name: 'in_drive').first_or_create!(display_name: 'In Drive?')
Column.where(table: 'activities', db_name: 'name').first_or_create!(display_name: 'Name')
Column.where(table: 'activities', db_name: 'name_abrv').first_or_create!(display_name: 'Abrieviated Name')
Column.where(table: 'activities', db_name: 'notes').first_or_create!(display_name: 'General Notes')
Column.where(table: 'activities', db_name: 'theme_id').first_or_create!(display_name: 'Theme')
Column.where(table: 'activities', db_name: 'uni_module_id').first_or_create!(display_name: 'Module')
Column.where(table: 'activities', db_name: 'user_id').first_or_create!(display_name: 'MEE Lead')

Column.where(table: 'activity_assesses', db_name: 'id').first_or_create!(display_name: 'Assessment ID')
Column.where(table: 'activity_assesses', db_name: 'assess_weight').first_or_create!(display_name: 'Assessment Weight')
Column.where(table: 'activity_assesses', db_name: 'pre_assess_type_id').first_or_create!(display_name: 'Pre Assessment Type')
Column.where(table: 'activity_assesses', db_name: 'during_assess_type_id').first_or_create!(display_name: 'During Assessment Type')
Column.where(table: 'activity_assesses', db_name: 'post_assess_type_id').first_or_create!(display_name: 'Post Assessment Type')
Column.where(table: 'activity_assesses', db_name: 'num_assess').first_or_create!(display_name: 'Number of Assessments')
Column.where(table: 'activity_assesses', db_name: 'post_lab_type_id').first_or_create!(display_name: 'Post Lab Type')
Column.where(table: 'activity_assesses', db_name: 'activity_id').first_or_create!(display_name: 'Activity ID')
Column.where(table: 'activity_assesses', db_name: 'notes').first_or_create!(display_name: 'Assessment Notes')

Column.where(table: 'activity_gta', db_name: 'id').first_or_create!(display_name: 'Activity GTA ID')
Column.where(table: 'activity_gta', db_name: 'activity_id').first_or_create!(display_name: 'Activity ID')
Column.where(table: 'activity_gta', db_name: 'criteria').first_or_create!(display_name: 'GTA Skills Required')
Column.where(table: 'activity_gta', db_name: 'job_desc').first_or_create!(display_name: 'Job Description')
Column.where(table: 'activity_gta', db_name: 'jobshop_desc').first_or_create!(display_name: 'Jobshop Description')
Column.where(table: 'activity_gta', db_name: 'marking_time').first_or_create!(display_name: 'Marking Time (minutes per student)')
Column.where(table: 'activity_gta', db_name: 'staff_ratio').first_or_create!(display_name: 'GTA to Student Ratio')

Column.where(table: 'gta_invites', db_name: 'activity_gta_id').first_or_create!(display_name: 'Activity GTA ID')
Column.where(table: 'gta_invites', db_name: 'user_id').first_or_create!(display_name: 'GTA Invites')

Column.where(table: 'activity_objective', db_name: 'id').first_or_create!(display_name: 'Activity Objective ID')
Column.where(table: 'activity_objective', db_name: 'objective_id').first_or_create!(display_name: 'Learning Outcomes')
Column.where(table: 'activity_objective', db_name: 'activity_id').first_or_create!(display_name: 'Activity')
Column.where(table: 'activity_objective', db_name: 'short_desc').first_or_create!(display_name: 'Short Description')
Column.where(table: 'activity_objective', db_name: 'long_desc').first_or_create!(display_name: 'Long Description')

Column.where(table: 'objectives', db_name: 'code').first_or_create!(display_name: 'Objective Code')
Column.where(table: 'objectives', db_name: 'name').first_or_create!(display_name: 'Name')

Column.where(table: 'activity_teachings', db_name: 'id').first_or_create!(display_name: 'Activity Teachings ID')
Column.where(table: 'activity_teachings', db_name: 'g_drive_link').first_or_create!(display_name: 'G Drive Link')
Column.where(table: 'activity_teachings', db_name: 'mole_pub_link').first_or_create!(display_name: 'MOLE Public Link')
Column.where(table: 'activity_teachings', db_name: 'resit_priority_d').first_or_create!(display_name: 'Resit Priority')
Column.where(table: 'activity_teachings', db_name: 'activity_id').first_or_create!(display_name: 'Activity')
Column.where(table: 'activity_teachings', db_name: 'user_id').first_or_create!(display_name: 'Academic Understudy')

Column.where(table: 'activity_teches', db_name: 'id').first_or_create!(display_name: 'Activity Tech ID')
Column.where(table: 'activity_teches', db_name: 'cost_per_student').first_or_create!(display_name: 'Cost Per Student (Â£)')
Column.where(table: 'activity_teches', db_name: 'equip_needed').first_or_create!(display_name: 'Equipment Needed')
Column.where(table: 'activity_teches', db_name: 'last_risk_assess').first_or_create!(display_name: 'Last Risk Assessment')
Column.where(table: 'activity_teches', db_name: 'next_risk_assess').first_or_create!(display_name: 'Next Risk Assessment')
Column.where(table: 'activity_teches', db_name: 'activity_id').first_or_create!(display_name: 'Activity ID')
Column.where(table: 'activity_teches', db_name: 'tech_lead_id').first_or_create!(display_name: 'Technical Lead')
Column.where(table: 'activity_teches', db_name: 'tech_ustudy_id').first_or_create!(display_name: 'Technical Understudy')

Column.where(table: 'activity_timetables', db_name: 'id').first_or_create!(display_name: 'Activity Timetable ID?')
Column.where(table: 'activity_timetables', db_name: 'checked_on_timetable').first_or_create!(display_name: 'Checked on Timetable?')
Column.where(table: 'activity_timetables', db_name: 'duration').first_or_create!(display_name: 'Duration (minutes)')
Column.where(table: 'activity_timetables', db_name: 'kit_prep_time').first_or_create!(display_name: 'Kit Preparation Time (minutes)')
Column.where(table: 'activity_timetables', db_name: 'max_week_num').first_or_create!(display_name: 'Maximum Week Number')
Column.where(table: 'activity_timetables', db_name: 'min_week_num').first_or_create!(display_name: 'Minimum Week Number')
Column.where(table: 'activity_timetables', db_name: 'notes').first_or_create!(display_name: 'Timetabling Notes')
Column.where(table: 'activity_timetables', db_name: 'capacity').first_or_create!(display_name: 'Active Capacity (Number of Students)')
Column.where(table: 'activity_timetables', db_name: 'same_as_prev_year').first_or_create!(display_name: 'Same as Previous Year?')
Column.where(table: 'activity_timetables', db_name: 'series_setup_time').first_or_create!(display_name: 'Series Setup Time (minutes)')
Column.where(table: 'activity_timetables', db_name: 'setup_time').first_or_create!(display_name: 'Setup Time (minutes)')
Column.where(table: 'activity_timetables', db_name: 'takedown_time').first_or_create!(display_name: 'Takedown Time (minutes)')
Column.where(table: 'activity_timetables', db_name: 'activity_id').first_or_create!(display_name: 'Activity ID')
Column.where(table: 'activity_timetables', db_name: 'pref_room_id').first_or_create!(display_name: 'Preferred Room')

Column.where(table: 'room_bookings', db_name: 'activity_timetable_id').first_or_create!(display_name: 'Activity Timetable ID')
Column.where(table: 'room_bookings', db_name: 'room_id').first_or_create!(display_name: 'Other Rooms')

Column.where(table: 'room', db_name: 'id').first_or_create!(display_name: 'ID')
Column.where(table: 'room', db_name: 'code').first_or_create!(display_name: 'Room Code')
Column.where(table: 'room', db_name: 'name').first_or_create!(display_name: 'Name')

Column.where(table: 'programmes', db_name: 'id').first_or_create!(display_name: 'Programmes')
Column.where(table: 'programmes', db_name: 'code').first_or_create!(display_name: 'Programme Code')
Column.where(table: 'programmes', db_name: 'name').first_or_create!(display_name: 'Name')

Column.where(table: 'edit_requests', db_name: 'message').first_or_create!(display_name: 'Message')
Column.where(table: 'edit_requests', db_name: 'title').first_or_create!(display_name: 'Title')
Column.where(table: 'edit_requests', db_name: 'status').first_or_create!(display_name: 'Status')
Column.where(table: 'edit_requests', db_name: 'initiator_id').first_or_create!(display_name: 'Initiator User')
Column.where(table: 'edit_requests', db_name: 'target_id').first_or_create!(display_name: 'Target User')
Column.where(table: 'edit_requests', db_name: 'bulk_id').first_or_create!(display_name: 'Bulk ID')
Column.where(table: 'edit_requests', db_name: 'activity_id').first_or_create!(display_name: 'Activity')
Column.where(table: 'edit_requests', db_name: 'column_id').first_or_create!(display_name: 'Column')

Column.where(table: 'themes', db_name: 'id').first_or_create!(display_name: 'ID')
Column.where(table: 'themes', db_name: 'code').first_or_create!(display_name: 'Theme Code')

Column.where(table: 'uni_modules', db_name: 'id').first_or_create!(display_name: 'ID')
Column.where(table: 'uni_modules', db_name: 'code').first_or_create!(display_name: 'Module Code')
Column.where(table: 'uni_modules', db_name: 'credits').first_or_create!(display_name: 'Credits')
Column.where(table: 'uni_modules', db_name: 'user_id').first_or_create!(display_name: 'Module Lead')
Column.where(table: 'uni_modules', db_name: 'name').first_or_create!(display_name: 'Module Name')
Column.where(table: 'uni_modules', db_name: 'level').first_or_create!(display_name: 'Level')
Column.where(table: 'uni_modules', db_name: 'semester_id').first_or_create!(display_name: 'Semester ID')

Column.where(table: 'users', db_name: 'id').first_or_create!(display_name: 'ID')
Column.where(table: 'users', db_name: 'email').first_or_create!(display_name: 'Email Address')
Column.where(table: 'users', db_name: 'display_name').first_or_create!(display_name: 'Display Name')
Column.where(table: 'users', db_name: 'role').first_or_create!(display_name: 'Role')
Column.where(table: 'users', db_name: 'super_user').first_or_create!(display_name: 'Super User?')
Column.where(table: 'users', db_name: 'analyst').first_or_create!(display_name: 'Analyst?')

# Semester drop down options
$sem_aut = Dropdown.where(drop_down: "semester", value: "Autumn", display_name: "Semester").first_or_create!
$sem_spr = Dropdown.where(drop_down: "semester", value: "Spring", display_name: "Semester").first_or_create!
$sem_both = Dropdown.where(drop_down: "semester", value: "Both", display_name: "Semester").first_or_create!
$sem_ns = Dropdown.where(drop_down: "semester", value: "Not standard", display_name: "Semester").first_or_create!

# Assessment type drop down options
$ass_p2p = Dropdown.where(drop_down: "assessment", value: "Pass to progress", display_name: "Assessment type").first_or_create!
$ass_sum = Dropdown.where(drop_down: "assessment", value: "Summative", display_name: "Assessment type").first_or_create!
$ass_form = Dropdown.where(drop_down: "assessment", value: "Formative", display_name: "Assessment type").first_or_create!
$ass_none = Dropdown.where(drop_down: "assessment", value: "None", display_name: "Assessment type").first_or_create!

# Post lab assessment drop down options
$post_mole = Dropdown.where(drop_down: "post_lab", value: "MOLE MCQ", display_name: "Post lab assessment type").first_or_create!
$post_short = Dropdown.where(drop_down: "post_lab", value: "Short report", display_name: "Post lab assessment type").first_or_create!
$post_full = Dropdown.where(drop_down: "post_lab", value: "Full lab report", display_name: "Post lab assessment type").first_or_create!
$post_other = Dropdown.where(drop_down: "post_lab", value: "Other", display_name: "Post lab assessment type").first_or_create!
$post_none = Dropdown.where(drop_down: "post_lab", value: "None", display_name: "Post lab assessment type").first_or_create!

# Resit priority drop down options
$resit_low = Dropdown.where(drop_down: "resit", value: "Low", display_name: "Resit priority").first_or_create!
$resit_med = Dropdown.where(drop_down: "resit", value: "Medium", display_name: "Resit priority").first_or_create!
$resit_high = Dropdown.where(drop_down: "resit", value: "High", display_name: "Resit priority").first_or_create!

# Activity themes
$acme = Theme.where(code: 'ACME').first_or_create!()
$ccee = Theme.where(code: 'CCEE').first_or_create!()
$mbce = Theme.where(code: 'MBCE').first_or_create!()
$amt = Theme.where(code: 'AMT').first_or_create!()
$fndy = Theme.where(code: 'FNDY').first_or_create!()

# Learning Objectives
obj_lo1 = Objective.where(code: 'LO1').first_or_create!(name: 'Concept')
obj_lo2 = Objective.where(code: 'LO2').first_or_create!(name: 'Integrate')
obj_lo3 = Objective.where(code: 'LO3').first_or_create!(name: 'Solve')
obj_c1 = Objective.where(code: 'C1').first_or_create!(name: 'Design')
obj_c2 = Objective.where(code: 'C2').first_or_create!(name: 'Produce')
obj_c3 = Objective.where(code: 'C3').first_or_create!(name: 'Risk')
obj_c4 = Objective.where(code: 'C4').first_or_create!(name: 'Error')
obj_c5 = Objective.where(code: 'C5').first_or_create!(name: 'Record')
obj_c6 = Objective.where(code: 'C6').first_or_create!(name: 'Practical')
obj_c7 = Objective.where(code: 'C7').first_or_create!(name: 'Communicate')
obj_p1 = Objective.where(code: 'P1').first_or_create!(name: 'TBD')
obj_p2 = Objective.where(code: 'P2').first_or_create!(name: 'TBD')

# Rooms
$room_ea = Room.where(code: '1.01').first_or_create!(name: 'EA Workshop')
$room_sd = Room.where(code: '1.02').first_or_create!(name: 'Structures and Dynamics')
$room_ms = Room.where(code: '1.99').first_or_create!(name: 'Machine Shop')
$room_al = Room.where(code: '1.07').first_or_create!(name: 'Analytics Lab')
$room_pp = Room.where(code: '1.08').first_or_create!(name: 'Pilot Plant')
$room_ec = Room.where(code: '2.02').first_or_create!(name: 'Electronics and Control')
$room_ml = Room.where(code: '2.03').first_or_create!(name: 'Materials Lab')
$room_tl = Room.where(code: '3.06').first_or_create!(name: 'Thermo Lab')
$room_apl = Room.where(code: '1.05').first_or_create!(name: 'Aero and Propulsion Lab')
$room_fl = Room.where(code: '3.02').first_or_create!(name: 'Fluids Lab')
$room_vr = Room.where(code: '3.08').first_or_create!(name: 'VR Lab')
$room_blt = Room.where(code: '3.11').first_or_create!(name: 'Bio Lab - Tissue')
$room_blb = Room.where(code: '3.18').first_or_create!(name: 'Bio Lab - Bacterial')
$room_cr = Room.where(code: '1.06').first_or_create!(name: 'Clean Room')
$room_cr4 = Room.where(code: '2.01').first_or_create!(name: 'Computer Room 1')
$room_cr4 = Room.where(code: '2.04').first_or_create!(name: 'Computer Room 2')
$room_cr4 = Room.where(code: '2.05').first_or_create!(name: 'Computer Room 3')
$room_cr4 = Room.where(code: '2.06').first_or_create!(name: 'Computer Room 4')

# Degree Programmes
$prog_aero = Programme.where(code: 'AERO').first_or_create!(name: 'Aerospace Engineering')
$prog_eee = Programme.where(code: 'EEE').first_or_create!(name: 'Electrical and Electronic Engineering')
$prog_ae = Programme.where(code: 'AE').first_or_create!(name: 'Architectural Engineering')
$prog_gee = Programme.where(code: 'GEE').first_or_create!(name: 'General Engineering')
$prog_mec = Programme.where(code: 'MEC').first_or_create!(name: 'Mechanical Engineering')
$prog_civ = Programme.where(code: 'CIV').first_or_create!(name: 'Civil Engineering')
$prog_bio = Programme.where(code: 'BIO').first_or_create!(name: 'Bio-engineering')
$prog_fy = Programme.where(code: 'FY').first_or_create!(name: 'Foundation Year')
$prog_com = Programme.where(code: 'COM').first_or_create!(name: 'Computer Science')
$prog_cbe = Programme.where(code: 'CBE').first_or_create!(name: 'Chemical and Biological Engineering')
$prog_mat = Programme.where(code: 'MAT').first_or_create!(name: 'Materials Engineering')
$prog_phy = Programme.where(code: 'PHY').first_or_create!(name: 'Physics')
$prog_amrc = Programme.where(code: 'AMRC').first_or_create!(name: 'Advanced Manufacturing Research Centre')
$prog_acs = Programme.where(code: 'ACS').first_or_create!(name: 'Automatic Control and Systems Engineering')

# Modules
UniModule.where(code: "AER120").first_or_create!(name: "Introduction to Aerospace Design", level: 1, credits: 10, semester_id: $sem_both.id, user_id: 4)
UniModule.where(code: "AER192").first_or_create!(name: "Engineering Solids, Liquids and Gases", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 4)
UniModule.where(code: "ACS231").first_or_create!(name: "Mechatronics", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 1)
UniModule.where(code: "AMR197").first_or_create!(name: "Fluid Mechanics", level: 1, credits: 15, semester_id: $sem_both.id, user_id: 5)
UniModule.where(code: "GEE204").first_or_create!(name: "Thermal & Fluid Engineering", level: 2, credits: 15, semester_id: $sem_aut.id, user_id: 4)
UniModule.where(code: "GEE207").first_or_create!(name: "Mechanics of Structures", level: 2, credits: 15, semester_id: $sem_both.id, user_id: 5)
UniModule.where(code: "MAT1410").first_or_create!(name: "Biomaterials I", level: 1, credits: 10, semester_id: $sem_aut.id, user_id: 3)
UniModule.where(code: "MAT1520").first_or_create!(name: "Biology and Chemistry of Living Systems", level: 1, credits: 10, semester_id: $sem_spr.id, user_id: 2)
UniModule.where(code: "MAT1600").first_or_create!(name: "Introduction to Structural Materials Engineering", level: 1, credits: 10, semester_id: $sem_aut.id, user_id: 5)
UniModule.where(code: "MAT209").first_or_create!(name: "Cell and Molecular Biology", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 5)

# Make all modules
def make_all_modules
    UniModule.where(code: "AMR124").first_or_create!(name: "Introduction to Design and CADCAM", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "AMR131").first_or_create!(name: "Electrical Engineering and Instrumentation", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "AMR132").first_or_create!(name: "Manufacturing Processes and Materials Engineering", level: 1, credits: 20, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "AMR134").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "AMR136").first_or_create!(name: "Fundamentals of Science for Engineers", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "AMR195").first_or_create!(name: "Fundamentals of Thermodynamics and Heat Engines", level: 1, credits: 15, semester_id: $sem_aut.id, user_id: 2)

    UniModule.where(code: "AMR199").first_or_create!(name: "Electro, Pneumatic and Hydraulic Systems", level: 1, credits: 15, semester_id: $sem_both.id, user_id: 3)

    UniModule.where(code: "AMR219").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "AMR222").first_or_create!(name: "Further Engineering Science", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "AMR223").first_or_create!(name: "Engineering Mechanics for Manufacture", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "AMR227").first_or_create!(name: "Thermofluidic processes", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "AMR231").first_or_create!(name: "Engineering Systems and Control", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "AMR236").first_or_create!(name: "Non-Metallic Component Manufacturing: Composite Materials", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 2)

    UniModule.where(code: "AMR301").first_or_create!(name: "Lubrication and Wear", level: 3, credits: 20, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "AMR302").first_or_create!(name: "Manufacture and mechanics of modern materials", level: 3, credits: 20, semester_id: $sem_both.id, user_id: 3)

    UniModule.where(code: "AMR303").first_or_create!(name: "Machine element design and analysis of failure", level: 3, credits: 20, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "AMR305").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "AMR331").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "AMR332").first_or_create!(name: "Further Manufacturing Processes and Simulation of Production", level: 3, credits: 20, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "AMR333").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "AMR334").first_or_create!(name: "Mould and Tooling Design", level: 3, credits: 20, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "AMR336").first_or_create!(name: "Further Non-Metallic Component Manufacturing: polymers, ceramics and glass", level: 3, credits: 10, semester_id: $sem_spr.id, user_id: 3)

    UniModule.where(code: "AER104").first_or_create!(name: "Engineering Statics and Dynamics", level: 1, credits: 15, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "AER107").first_or_create!(name: "Avionic Systems", level: 1, credits: 10, semester_id: $sem_spr.id, user_id: 2)

    UniModule.where(code: "AER284").first_or_create!(name: "Aerostructures", level: 2, credits: 10, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "AER291").first_or_create!(name: "Dyamics of Aerospace Structures and Machines", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 1)

    UniModule.where(code: "AER293").first_or_create!(name: "Applied Aerospace Thermodynamics", level: 2, credits: 10, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "AER298").first_or_create!(name: "Aerospace Fluids Engineering", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 3)

    UniModule.where(code: "AER302").first_or_create!(name: "Aerospace Group Design Project: Build and Test", level: 3, credits: 10, semester_id: $sem_spr.id, user_id: 1)

    UniModule.where(code: "AER325").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "AER380").first_or_create!(name: "Aircraft Design", level: 3, credits: 10, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "AER385").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "ACS130").first_or_create!(name: "Introduction to Systems Engineering & Software", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "ACS132").first_or_create!(name: "Modelling, Analysis and Control", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "ACS1321").first_or_create!(name: "Introduction to Systems Analysis and Control", level: 1, credits: 15, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "ACS133").first_or_create!(name: "Physical Systems", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "ACS134").first_or_create!(name: "Digital and Embedded Systems", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "ACS219").first_or_create!(name: "Process Control", level: 2, credits: 15, semester_id: $sem_aut.id, user_id: 2)

    UniModule.where(code: "ACS230").first_or_create!(name: "Control Systems Design and Analysis", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "ACS232").first_or_create!(name: "Signals, Systems, and Communications", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 3)

    UniModule.where(code: "ACS329").first_or_create!(name: "Robotics", level: 3, credits: 10, semester_id: $sem_aut.id, user_id: 5)

    UniModule.where(code: "ACS334").first_or_create!(name: "Process Dynamics and Control", level: 3, credits: 10, semester_id: $sem_aut.id, user_id: 3)

    UniModule.where(code: "ACS337").first_or_create!(name: "Robotic Systems", level: 3, credits: 10, semester_id: $sem_spr.id, user_id: 1)

    UniModule.where(code: "ACS6101").first_or_create!(name: "Foundations of Control Systems", level: 6, credits: 30, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "ACS6329").first_or_create!(name: "Robotics", level: 6, credits: 10, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "ACS6501").first_or_create!(name: "Foundations of Robotics", level: 6, credits: 15, semester_id: $sem_aut.id, user_id: 3)

    UniModule.where(code: "ACS6502").first_or_create!(name: "Mechatronics for Robotics", level: 6, credits: 15, semester_id: $sem_aut.id, user_id: 3)

    UniModule.where(code: "ACS6503").first_or_create!(name: "Manipulator Robotics", level: 6, credits: 15, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "BIE103").first_or_create!(name: "Introduction to Bioengineering", level: 1, credits: 10, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "BIE201").first_or_create!(name: "Advanced Bioengineering Topics", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 1)

    UniModule.where(code: "BIE291").first_or_create!(name: "Biomedical Instrumentation", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 3)

    UniModule.where(code: "BIE372").first_or_create!(name: "Group Project in Bioengineering", level: 3, credits: 20, semester_id: $sem_both.id, user_id: 3)

    UniModule.where(code: "BIE6410").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "BIE6413").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "CPE007").first_or_create!(name: "Advanced Level Chemistry", level: 1, credits: 20, semester_id: $sem_aut.id, user_id: 3)

    UniModule.where(code: "CPE130").first_or_create!(name: "Principles of Chemical Engineering 1", level: 1, credits: 15, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "CPE140").first_or_create!(name: "Principles of Chemical Engineering 2", level: 1, credits: 15, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "CPE150").first_or_create!(name: "Chemical Principles", level: 1, credits: 15, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "CPE160").first_or_create!(name: "Chemical Engineering Thermodynamics", level: 1, credits: 15, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "CPE170").first_or_create!(name: "Fluid and Particle Mechanics", level: 1, credits: 15, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "CPE180").first_or_create!(name: "Heat Transfer", level: 1, credits: 15, semester_id: $sem_spr.id, user_id: 3)

    UniModule.where(code: "CPE190").first_or_create!(name: "Engineering with Living Systems 1", level: 1, credits: 10, semester_id: $sem_spr.id, user_id: 1)

    UniModule.where(code: "CPE230").first_or_create!(name: "Mass Transfer and Separation Processes", level: 2, credits: 20, semester_id: $sem_aut.id, user_id: 5)

    UniModule.where(code: "CPE240").first_or_create!(name: "Engineering with Living Systems 2", level: 2, credits: 15, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "CPE260").first_or_create!(name: "Experimental Investigation", level: 2, credits: 15, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "CPE280").first_or_create!(name: "Introduction to Biopharmaceutical Engineering", level: 2, credits: 15, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "CPE340").first_or_create!(name: "Science of Formulated Products", level: 3, credits: 15, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "CPE360").first_or_create!(name: "Reaction Engineering 2", level: 3, credits: 15, semester_id: $sem_spr.id, user_id: 1)

    UniModule.where(code: "CPE6116").first_or_create!(name: "Applied Biological and Bioprocess Engineering", level: 6, credits: 15, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "CPE6311").first_or_create!(name: "Applied Energy Engineering", level: 6, credits: 15, semester_id: $sem_aut.id, user_id: 3)

    UniModule.where(code: "GEE103").first_or_create!(name: "Introduction to Process Engineering", level: 1, credits: 15, semester_id: $sem_both.id, user_id: 3)

    UniModule.where(code: "CIV1000").first_or_create!(name: "Civil and Structural Engineering Mechanics 1", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "CIV104").first_or_create!(name: "Principles of Hydraulics", level: 1, credits: 10, semester_id: $sem_spr.id, user_id: 3)

    UniModule.where(code: "CIV1200").first_or_create!(name: "Introduction to Civil and Structural Engineering Design", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "CIV150").first_or_create!(name: "Geotechnical Engineering 1", level: 1, credits: 10, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "CIV1901").first_or_create!(name: "Civil Engineering Skills with Manufacturing", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "CIV2100").first_or_create!(name: "Structural Analysis I", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 3)

    UniModule.where(code: "CIV2300").first_or_create!(name: "Pipes and Open Channel Hydraulics", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "CIV2500").first_or_create!(name: "Geotechnical Engineering 2", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "CIV3204").first_or_create!(name: "Integrated Design Project III", level: 3, credits: 10, semester_id: $sem_spr.id, user_id: 3)

    UniModule.where(code: "CIV3207").first_or_create!(name: "Integrated Design Project: Part 2 for Architectural Engineering", level: 3, credits: 30, semester_id: $sem_spr.id, user_id: 5)

    UniModule.where(code: "CIV351").first_or_create!(name: "Geotechnical Engineering", level: 3, credits: 10, semester_id: $sem_aut.id, user_id: 3)

    UniModule.where(code: "CIV4136").first_or_create!(name: "Computational Structural Analysis", level: 4, credits: 10, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "CIV4181").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "CIV4254").first_or_create!(name: "Structural Analysis and Design for Fire", level: 4, credits: 15, semester_id: $sem_spr.id, user_id: 2)

    UniModule.where(code: "CIV4505").first_or_create!(name: "Constitutive Modelling of Geotechnical Materials", level: 4, credits: 15, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "CIV4750").first_or_create!(name: "Coastal Engineering", level: 4, credits: 15, semester_id: $sem_spr.id, user_id: 5)

    UniModule.where(code: "CIV6136").first_or_create!(name: "Computational Structural Analysis", level: 6, credits: 10, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "CIV6181").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "CIV6254").first_or_create!(name: "Structural Analysis and Design for Fire", level: 6, credits: 15, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "CIV6276").first_or_create!(name: "Multistorey Steel Building Design", level: 6, credits: 15, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "CIV6505").first_or_create!(name: "Constitutive Modelling of Geotechnical Materials", level: 6, credits: 15, semester_id: $sem_spr.id, user_id: 3)

    UniModule.where(code: "CIV6733").first_or_create!(name: "Engineering Hydraulics", level: 6, credits: 15, semester_id: $sem_aut.id, user_id: 2)

    UniModule.where(code: "COM1001").first_or_create!(name: "Introduction to Software Engineering", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "COM1005").first_or_create!(name: "Machines and Intelligence", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "COM1006").first_or_create!(name: "Devices and Networks", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "COM3505").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "COM6910").first_or_create!(name: "Dissertation Project", level: 6, credits: 60, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "AER123").first_or_create!(name: "Introduction to Electric Circuits", level: 1, credits: 10, semester_id: $sem_aut.id, user_id: 2)

    UniModule.where(code: "AER223").first_or_create!(name: "Introduction to Electronic Circuits", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 5)

    UniModule.where(code: "EEE117").first_or_create!(name: "Electrical Circuits and Networks", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 3)

    UniModule.where(code: "EEE118").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "EEE119").first_or_create!(name: "Digital System Engineering", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "EEE123").first_or_create!(name: "Introduction to Electric and Electronic Circuits", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 3)

    UniModule.where(code: "EEE126").first_or_create!(name: "General Skills", level: 1, credits: 10, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "EEE163").first_or_create!(name: "System Design Analysis", level: 1, credits: 10, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "EEE218").first_or_create!(name: "Electric Circuits", level: 2, credits: 10, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "EEE221").first_or_create!(name: "Industrial Project", level: 2, credits: 10, semester_id: $sem_aut.id, user_id: 2)

    UniModule.where(code: "EEE225").first_or_create!(name: "Analogue and Digital Electronics", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "EEE227").first_or_create!(name: "Communication Electronics", level: 2, credits: 20, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "EEE228").first_or_create!(name: "Design Project", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 1)

    UniModule.where(code: "EEE229").first_or_create!(name: "Electrical Energy and Conversion", level: 2, credits: 30, semester_id: $sem_both.id, user_id: 3)

    UniModule.where(code: "EEE380").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "EEE6213").first_or_create!(name: "Principles of Semiconductor Device Technology", level: 6, credits: 15, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "EEE6222").first_or_create!(name: "Principles of Communications", level: 6, credits: 15, semester_id: $sem_aut.id, user_id: 2)

    UniModule.where(code: "EEE6225").first_or_create!(name: "System Design", level: 6, credits: 15, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "EEE6395").first_or_create!(name: "Compound Semiconductor Device Manufacture", level: 6, credits: 30, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "EEE6600").first_or_create!(name: "Industrial Research Project", level: 6, credits: 60, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "EEE6602").first_or_create!(name: "MSc Investigative Research Project", level: 6, credits: 60, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "FYE001").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "GEE202").first_or_create!(name: "Electromechanical Energy Transformation", level: 2, credits: 15, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "FCE001").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "FCE6100").first_or_create!(name: "Professional Behaviour and Ethical Conduct", level: 6, credits: 0, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "GEE101").first_or_create!(name: "Interdisciplinary Design I", level: 1, credits: 15, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "GEE102").first_or_create!(name: "Introduction to Electrical Engineering", level: 1, credits: 15, semester_id: $sem_both.id, user_id: 3)

    UniModule.where(code: "GEE104").first_or_create!(name: "Thermofluids", level: 1, credits: 15, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "GEE105").first_or_create!(name: "Introduction to Materials Science and Engineering", level: 1, credits: 15, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "GEE205").first_or_create!(name: "Systems and Control", level: 2, credits: 15, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "GEE206").first_or_create!(name: "Mechanical and Functional Behaviour of Materials", level: 2, credits: 15, semester_id: $sem_spr.id, user_id: 3)

    UniModule.where(code: "MAT1510").first_or_create!(name: "Tissue Structure and Function", level: 1, credits: 10, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "MAT1610").first_or_create!(name: "Introduction to Materials Chemistry", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "MAT1643").first_or_create!(name: "Introduction to Mechanical Properties and Structural Materials", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "MAT1730").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "MAT1820").first_or_create!(name: "Digital Skills for Materials", level: 1, credits: 10, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "MAT2220").first_or_create!(name: "Functional Materials", level: 2, credits: 10, semester_id: $sem_aut.id, user_id: 5)

    UniModule.where(code: "MAT2310").first_or_create!(name: "Industrial Materials Processing", level: 2, credits: 20, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "MAT2320").first_or_create!(name: "Microstructure and Thermodynamics of Materials", level: 2, credits: 20, semester_id: $sem_spr.id, user_id: 5)

    UniModule.where(code: "MAT2350").first_or_create!(name: "Materials Selection and Fracture Mechanics", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 2)

    UniModule.where(code: "MAT2410").first_or_create!(name: "Biomaterials II", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 5)

    UniModule.where(code: "MAT2530").first_or_create!(name: "Biology and Chemistry of Living Systems II", level: 2, credits: 10, semester_id: $sem_aut.id, user_id: 3)

    UniModule.where(code: "MAT2600").first_or_create!(name: "Materials for Structural Engineering", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 3)

    UniModule.where(code: "MAT377").first_or_create!(name: "Functional Materials", level: 3, credits: 10, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "MAT408").first_or_create!(name: "Bioimaging", level: 4, credits: 10, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "MAT6311").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "MAT6670").first_or_create!(name: "Practical, Modelling and Digital Skills", level: 6, credits: 15, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "MEC207").first_or_create!(name: "Materials Processing", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "MEC1000").first_or_create!(name: "Engineering Applications", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 2)

    UniModule.where(code: "MEC133").first_or_create!(name: "Laboratory Skills for Mechanical Engineers", level: 1, credits: 10, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "MEC162").first_or_create!(name: "Engineering Solids, Liquids and Gases", level: 1, credits: 20, semester_id: $sem_both.id, user_id: 5)

    UniModule.where(code: "MEC201").first_or_create!(name: "Dynamics of Structures and Machines", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 5)

    UniModule.where(code: "MEC202").first_or_create!(name: "Mechanics of Deformable Solids", level: 2, credits: 10, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "MEC203").first_or_create!(name: "Heat Transfer", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 4)

    UniModule.where(code: "MEC205").first_or_create!(name: "Design of Engineering Components", level: 2, credits: 10, semester_id: $sem_aut.id, user_id: 5)

    UniModule.where(code: "MEC208").first_or_create!(name: "Fluids Engineering", level: 2, credits: 10, semester_id: $sem_aut.id, user_id: 5)

    UniModule.where(code: "MEC209").first_or_create!(name: "Design of Structures, Machines and Systems", level: 2, credits: 10, semester_id: $sem_spr.id, user_id: 1)

    UniModule.where(code: "MEC302").first_or_create!(name: "Integrity of Materials and Components", level: 3, credits: 10, semester_id: $sem_aut.id, user_id: 5)

    UniModule.where(code: "MEC321").first_or_create!(name: "Control Engineering for Mechanical Engineers", level: 3, credits: 10, semester_id: $sem_aut.id, user_id: 3)

    UniModule.where(code: "MEC326").first_or_create!(name: "Structural Vibration", level: 3, credits: 10, semester_id: $sem_aut.id, user_id: 1)

    UniModule.where(code: "MEC327").first_or_create!(name: "Structural Vibration", level: 3, credits: 10, semester_id: $sem_spr.id, user_id: 2)

    UniModule.where(code: "MEC330").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "MEC424").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "MEC444").first_or_create!(name: "Industrial Experimental Methods for Engineering Problems", level: 4, credits: 15, semester_id: $sem_aut.id, user_id: 4)

    UniModule.where(code: "MEC453").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "MEC455").first_or_create!(name: "Mechanics and Applications of Advanced Manufacturing Technologies", level: 4, credits: 15, semester_id: $sem_aut.id, user_id: 3)

    UniModule.where(code: "MEC604").first_or_create!(name: "Experiments and Valid Computer Models", level: 6, credits: 15, semester_id: $sem_both.id, user_id: 4)

    UniModule.where(code: "MEC6424").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "MEC6430").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "MEC6448").first_or_create!(name: "Could not be found", level: 1, credits: 0, semester_id: $sem_both.id, user_id: 1)

    UniModule.where(code: "PHY392").first_or_create!(name: "Physical Computing", level: 3, credits: 20, semester_id: $sem_both.id, user_id: 2)
end

# ActivityObjectives
ao1 = ActivityObjective.where(objective_id: obj_c1.id, programme_id: $prog_gee.id, short_desc: 'Example GEE task 1', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao2 = ActivityObjective.where(objective_id: obj_c2.id, programme_id: $prog_gee.id, short_desc: 'Example GEE task 2', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao3 = ActivityObjective.where(objective_id: obj_lo1.id, programme_id: $prog_gee.id, short_desc: 'Example GEE task 3', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!

ao4 = ActivityObjective.where(objective_id: obj_c4.id, programme_id: $prog_mec.id, short_desc: 'Example MEC task 1', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao5 = ActivityObjective.where(objective_id: obj_c6.id, programme_id: $prog_mec.id, short_desc: 'Example MEC task 2', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao6 = ActivityObjective.where(objective_id: obj_lo2.id, programme_id: $prog_mec.id, short_desc: 'Example MEC task 3', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!

ao7 = ActivityObjective.where(objective_id: obj_c7.id, programme_id: $prog_civ.id, short_desc: 'Example CIV task 1', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao8 = ActivityObjective.where(objective_id: obj_p1.id, programme_id: $prog_civ.id, short_desc: 'Example CIV task 2', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao9 = ActivityObjective.where(objective_id: obj_lo2.id, programme_id: $prog_civ.id, short_desc: 'Example CIV task 3', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!

ao10 = ActivityObjective.where(objective_id: obj_c4.id, programme_id: $prog_ae.id, short_desc: 'Example AE task 1', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao11 = ActivityObjective.where(objective_id: obj_c1.id, programme_id: $prog_ae.id, short_desc: 'Example AE task 2', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao12 = ActivityObjective.where(objective_id: obj_lo3.id, programme_id: $prog_ae.id, short_desc: 'Example AE task 3', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!

ao13 = ActivityObjective.where(objective_id: obj_c2.id, programme_id: $prog_bio.id, short_desc: 'Example BIO task 1', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao14 = ActivityObjective.where(objective_id: obj_c5.id, programme_id: $prog_bio.id, short_desc: 'Example BIO task 2', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao15 = ActivityObjective.where(objective_id: obj_lo1.id, programme_id: $prog_bio.id, short_desc: 'Example BIO task 3', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!

ao16 = ActivityObjective.where(objective_id: obj_p2.id, programme_id: $prog_mat.id, short_desc: 'Example MAT task 1', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao17 = ActivityObjective.where(objective_id: obj_c7.id, programme_id: $prog_mat.id, short_desc: 'Example MAT task 2', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!
ao18 = ActivityObjective.where(objective_id: obj_lo1.id, programme_id: $prog_mat.id, short_desc: 'Example MAT task 3', long_desc: "A longer, more detailed description of what a student needs to do in order to meet the objective").first_or_create!

a1 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER120").first.id, code: "100a").first_or_create!(name: "Engineering Applications Workshop 1",
    name_abrv: "EA GYRO", archived: false, in_drive: false, user_id: 1)
at1 = ActivityTimetable.where(activity_id: a1.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
    same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
    capacity: 24, checked_on_timetable: false)

ActivityTeaching.where(activity_id: a1.id).first_or_create!(user_id: 2, g_drive_link: "",
    mole_pub_link: "", resit_priority_id: $resit_med.id)
ActivityGta.where(activity_id: a1.id).first_or_create!(criteria: "",
    job_desc:"Your role will include supervising and assisting students to manufacture a gyroscopic car in the workshop, using mills, laser cutters, 3D printers, hand tools, metrology, metalworking, vacuum forming etc.", jobshop_desc: "GTA in MEE, the Diamond: Advanced Manufacturing Technology (AMT)", marking_time: nil, staff_ratio: nil)
ActivityAssess.where(activity_id: a1.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
    pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
ActivityTech.where(activity_id: a1.id).first_or_create!(cost_per_student: nil, equip_needed: "",
    last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
ActivityProgramme.where(activity_id: a1.id, programme_id: $prog_aero.id).first_or_create!


a54 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE207").first.id, code: "213").first_or_create!(name: "Hole in Plate",
    name_abrv: "HOLEPLATE", archived: false, in_drive: true, user_id: 3)
at54 = ActivityTimetable.where(activity_id: a54.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 9, max_week_num: nil, pref_room_id: $room_sd.id,
    same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs Shimadzu",
    capacity: 40, checked_on_timetable: true)
RoomBooking.where(activity_timetable_id: at54.id, room_id: $room_tl.id).first_or_create!

ActivityTeaching.where(activity_id: a54.id).first_or_create!(user_id: 5, g_drive_link: "",
    mole_pub_link: "https://goo.gl/szABLo", resit_priority_id: $resit_med.id)
ActivityGta.where(activity_id: a54.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of Mechanics of materials. The ideal candidate should be familiar with stress concentration, principal stresses and strains and Mohr Circles.",
    job_desc:"In this lab, students study the strain-distribution in a plate with a hole in it, using strain-gauges. The data is obtained using Shimadzu tensometers and Vishay strain gauge monitoring equipment. Once the data is obtained, the students analyse their data using Mohr's circle. A knowledge of Mohr's circle and two dimensional stress distributions is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
ActivityAssess.where(activity_id: a54.id).first_or_create!(assess_weight: nil, notes: "",
    pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
ActivityTech.where(activity_id: a54.id).first_or_create!(cost_per_student: nil, equip_needed: "",
    last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
ActivityProgramme.where(activity_id: a54.id, programme_id: $prog_gee.id).first_or_create!


a89 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MAT1600").first.id, code: "235").first_or_create!(name: "Hole in Plate: Mohr's Circles",
    name_abrv: "", archived: false, in_drive: true, user_id: 3)
at89 = ActivityTimetable.where(activity_id: a89.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 4, max_week_num: 5, pref_room_id: $room_sd.id,
    same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Needs Shimadzu",
    capacity: 40, checked_on_timetable: true)
RoomBooking.where(activity_timetable_id: at89.id, room_id: $room_tl.id).first_or_create!

ActivityTeaching.where(activity_id: a89.id).first_or_create!(user_id: 4, g_drive_link: "",
    mole_pub_link: "", resit_priority_id: $resit_med.id)
ActivityGta.where(activity_id: a89.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of Mechanics of materials. The ideal candidate should be familiar with stress concentration, principal stresses and strains and Mohr Circles.",
    job_desc:"In this lab, students study the strain-distribution in a plate with a hole in it, using strain-gauges. The data is obtained using Shimadzu tensometers and Vishay strain gauge monitoring equipment. Once the data is obtained, the students analyse their data using Mohr's circle. A knowledge of Mohr's circle and two dimensional stress distributions is therefore required.", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
ActivityAssess.where(activity_id: a89.id).first_or_create!(assess_weight: nil, notes: "",
    pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
ActivityTech.where(activity_id: a89.id).first_or_create!(cost_per_student: nil, equip_needed: "",
    last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
ActivityProgramme.where(activity_id: a89.id, programme_id: $prog_civ.id).first_or_create!


a155 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "419").first_or_create!(name: "Pressure Loss in Pipes",
    name_abrv: "PIPELOSS", archived: false, in_drive: false, user_id: 4)
at155 = ActivityTimetable.where(activity_id: a155.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 5, max_week_num: 5, pref_room_id: $room_fl.id,
    same_as_prev_year: true, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
    capacity: 80, checked_on_timetable: true)

ActivityTeaching.where(activity_id: a155.id).first_or_create!(user_id: 1, g_drive_link: "",
    mole_pub_link: "https://tinyurl.com/y8ql72fc", resit_priority_id: $resit_med.id)
ActivityGta.where(activity_id: a155.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and Moody diagram theory.",
    job_desc:"The speed of water is varied though a variety of pipe diameters and roughness. The pressure loss is also measured, allowing the moody diagram to be recreated and compared to one previously produced.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
ActivityAssess.where(activity_id: a155.id).first_or_create!(assess_weight: nil, notes: "Post lab is handeled by the department - integrated into lecture series",
    pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
ActivityTech.where(activity_id: a155.id).first_or_create!(cost_per_student: nil, equip_needed: "",
    last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
ActivityProgramme.where(activity_id: a155.id, programme_id: $prog_aero.id).first_or_create!


a166 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR197").first.id, code: "423").first_or_create!(name: "The Osborne Reynolds Experiment",
    name_abrv: "REYNOLDS", archived: false, in_drive: true, user_id: 5)
at166 = ActivityTimetable.where(activity_id: a166.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
    same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
    capacity: nil, checked_on_timetable: false)

ActivityTeaching.where(activity_id: a166.id).first_or_create!(user_id: 5, g_drive_link: "",
    mole_pub_link: "", resit_priority_id: $resit_med.id)
ActivityGta.where(activity_id: a166.id).first_or_create!(criteria: "",
    job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
ActivityAssess.where(activity_id: a166.id).first_or_create!(assess_weight: nil, notes: "",
    pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
ActivityTech.where(activity_id: a166.id).first_or_create!(cost_per_student: nil, equip_needed: "",
    last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
ActivityProgramme.where(activity_id: a166.id, programme_id: $prog_amrc.id).first_or_create!


a189 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE204").first.id, code: "505").first_or_create!(name: "Boiling and Condensing",
    name_abrv: "BOILING", archived: true, in_drive: true, user_id: 1)
at189 = ActivityTimetable.where(activity_id: a189.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
    same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
    capacity: 80, checked_on_timetable: true)

ActivityTeaching.where(activity_id: a189.id).first_or_create!(user_id: 1, g_drive_link: "",
    mole_pub_link: "", resit_priority_id: $resit_low.id)
ActivityGta.where(activity_id: a189.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
    job_desc:"Lab demonstration, training provided, no marking. Demonstrate labs on both boiling and condesing. Both are complex but the lab is mainly about observing the process taking place.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
ActivityAssess.where(activity_id: a189.id).first_or_create!(assess_weight: nil, notes: "Not run in 18/19",
    pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
ActivityTech.where(activity_id: a189.id).first_or_create!(cost_per_student: nil, equip_needed: "",
    last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
ActivityProgramme.where(activity_id: a189.id, programme_id: $prog_gee.id).first_or_create!


a364 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "228").first_or_create!(name: "Using an Arduino to Read Analogue Sensors",
    name_abrv: "Ard Anal", archived: false, in_drive: false, user_id: 2)
at364 = ActivityTimetable.where(activity_id: a364.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 4, max_week_num: 4, pref_room_id: $room_ec.id,
    same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit will need to be moved",
    capacity: 144, checked_on_timetable: true)

ActivityTeaching.where(activity_id: a364.id).first_or_create!(user_id: 5, g_drive_link: "",
    mole_pub_link: "", resit_priority_id: $resit_low.id)
ActivityGta.where(activity_id: a364.id).first_or_create!(criteria: "Must have experience of programming Arduino devices with C, and a  working knowledge of electronic circuit design and construction, and be able to debug problems.",
    job_desc:"This laboratory involves interfacing reading analogue sensor values, with an Arduino, and converting the sensor voltages into meaningful measurements.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: 15, staff_ratio: nil)
ActivityAssess.where(activity_id: a364.id).first_or_create!(assess_weight: nil, notes: "",
    pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
ActivityTech.where(activity_id: a364.id).first_or_create!(cost_per_student: nil, equip_needed: "",
    last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)


a527 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1410").first.id, code: "337").first_or_create!(name: "Volumetric pipetting",
    name_abrv: "VOLPIPETTING", archived: false, in_drive: false, user_id: 4)
at527 = ActivityTimetable.where(activity_id: a527.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 6, pref_room_id: $room_blt.id,
    same_as_prev_year: true, series_setup_time: 30, setup_time: 120, takedown_time: 90, notes: "",
    capacity: 30, checked_on_timetable: true)
RoomBooking.where(activity_timetable_id: at527.id, room_id: $room_blb.id).first_or_create!

ActivityTeaching.where(activity_id: a527.id).first_or_create!(user_id: 1, g_drive_link: "",
    mole_pub_link: "", resit_priority_id: $resit_high.id)
ActivityGta.where(activity_id: a527.id).first_or_create!(criteria: "Competent user of micropipettes and motorised pipettors",
    job_desc:"Using micropipettes and motorized pipette aids", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
ActivityAssess.where(activity_id: a527.id).first_or_create!(assess_weight: nil, notes: "Post is MOLE test",
    pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
ActivityTech.where(activity_id: a527.id).first_or_create!(cost_per_student: nil, equip_needed: "Micropiettes, auto pipettors, balances",
    last_risk_assess: nil, next_risk_assess: Date.new(19, 10, 1), tech_lead_id: 4, tech_ustudy_id: 4)
ActivityProgramme.where(activity_id: a527.id, programme_id: $prog_bio.id).first_or_create!


a528 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT209").first.id, code: "338").first_or_create!(name: "Western blotting",
    name_abrv: "WESTBLOT", archived: false, in_drive: false, user_id: 1)
at528 = ActivityTimetable.where(activity_id: a528.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 8, pref_room_id: $room_blt.id,
    same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Western blotting follows gel electrophoresis",
    capacity: nil, checked_on_timetable: true)

ActivityTeaching.where(activity_id: a528.id).first_or_create!(user_id: 5, g_drive_link: "",
    mole_pub_link: "", resit_priority_id: $resit_med.id)
ActivityGta.where(activity_id: a528.id).first_or_create!(criteria: "",
    job_desc:"Western Blotting", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
ActivityAssess.where(activity_id: a528.id).first_or_create!(assess_weight: nil, notes: "Report incudes gel electrophoresis and submitted after western blotting part of experiment",
    pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
ActivityTech.where(activity_id: a528.id).first_or_create!(cost_per_student: nil, equip_needed: "Biorad gel doc x2",
    last_risk_assess: nil, next_risk_assess: Date.new(20, 1, 28), tech_lead_id: 3, tech_ustudy_id: 4)
ActivityProgramme.where(activity_id: a528.id, programme_id: $prog_mat.id).first_or_create!


a501 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1520").first.id, code: "314").first_or_create!(name: "Histology staining",
    name_abrv: "HISTSTAINING", archived: false, in_drive: false, user_id: 2)
at501 = ActivityTimetable.where(activity_id: a501.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 1, max_week_num: 4, pref_room_id: $room_blt.id,
    same_as_prev_year: true, series_setup_time: 120, setup_time: nil, takedown_time: 120, notes: "",
    capacity: 25, checked_on_timetable: true)

ActivityTeaching.where(activity_id: a501.id).first_or_create!(user_id: 2, g_drive_link: "",
    mole_pub_link: "", resit_priority_id: $resit_med.id)
ActivityGta.where(activity_id: a501.id).first_or_create!(criteria: "",
    job_desc:"Staining animal tissue sections using H&E - paraffin embedded and frozen sections", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: 30, staff_ratio: nil)
ActivityAssess.where(activity_id: a501.id).first_or_create!(assess_weight: nil, notes: "Includes microscopy",
    pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
ActivityTech.where(activity_id: a501.id).first_or_create!(cost_per_student: nil, equip_needed: "Glass troughs, staining dishes, cryostat, LEV",
    last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
ActivityProgramme.where(activity_id: a501.id, programme_id: $prog_mat.id).first_or_create!


# This method will create all activities and will take 10+ minutes to run
def make_all_activities

    a2 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1901").first.id, code: "100a").first_or_create!(name: "Engineering Applications Workshop 1",
        name_abrv: "EAWORK1", archived: false, in_drive: false, user_id: 5)
    at2 = ActivityTimetable.where(activity_id: a2.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a2.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a2.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a2.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a2.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a2.id, programme_id: $prog_ae.id).first_or_create!


    a3 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "100a").first_or_create!(name: "Engineering Applications Workshop 1",
        name_abrv: "EA GYRO", archived: false, in_drive: false, user_id: 4)
    at3 = ActivityTimetable.where(activity_id: a3.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a3.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a3.id).first_or_create!(criteria: "",
        job_desc:"Your role will include supervising and assisting students to manufacture a gyroscopic car in the workshop, using mills, laser cutters, 3D printers, hand tools, metrology, metalworking, vacuum forming etc.", jobshop_desc: "GTA in MEE, the Diamond: Advanced Manufacturing Technology (AMT)", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a3.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a3.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a3.id, programme_id: $prog_eee.id).first_or_create!


    a4 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE101").first.id, code: "100a").first_or_create!(name: "Engineering Applications Workshop 1",
        name_abrv: "EA GYRO", archived: false, in_drive: false, user_id: 2)
    at4 = ActivityTimetable.where(activity_id: a4.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a4.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a4.id).first_or_create!(criteria: "",
        job_desc:"Your role will include supervising and assisting students to manufacture a gyroscopic car in the workshop, using mills, laser cutters, 3D printers, hand tools, metrology, metalworking, vacuum forming etc.", jobshop_desc: "GTA in MEE, the Diamond: Advanced Manufacturing Technology (AMT)", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a4.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a4.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a4.id, programme_id: $prog_gee.id).first_or_create!


    a5 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC1000").first.id, code: "100a").first_or_create!(name: "Engineering Applications Workshop 1",
        name_abrv: "EA GYRO", archived: false, in_drive: false, user_id: 2)
    at5 = ActivityTimetable.where(activity_id: a5.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a5.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a5.id).first_or_create!(criteria: "",
        job_desc:"Your role will include supervising and assisting students to manufacture a gyroscopic car in the workshop, using mills, laser cutters, 3D printers, hand tools, metrology, metalworking, vacuum forming etc.", jobshop_desc: "GTA in MEE, the Diamond: Advanced Manufacturing Technology (AMT)", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a5.id).first_or_create!(assess_weight: nil, notes: "Assessed in MEC130",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a5.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a5.id, programme_id: $prog_mec.id).first_or_create!


    a6 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER120").first.id, code: "100b").first_or_create!(name: "Engineering Applications Workshop 2",
        name_abrv: "EAWORK2", archived: false, in_drive: false, user_id: 5)
    at6 = ActivityTimetable.where(activity_id: a6.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a6.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a6.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a6.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a6.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a6.id, programme_id: $prog_aero.id).first_or_create!


    a7 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1901").first.id, code: "100b").first_or_create!(name: "Engineering Applications Workshop 2",
        name_abrv: "EAWORK2", archived: false, in_drive: false, user_id: 3)
    at7 = ActivityTimetable.where(activity_id: a7.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a7.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a7.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a7.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a7.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a7.id, programme_id: $prog_ae.id).first_or_create!


    a8 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "100b").first_or_create!(name: "Engineering Applications Workshop 2",
        name_abrv: "EAWORK2", archived: false, in_drive: false, user_id: 1)
    at8 = ActivityTimetable.where(activity_id: a8.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a8.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a8.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a8.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a8.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a8.id, programme_id: $prog_eee.id).first_or_create!


    a9 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE101").first.id, code: "100b").first_or_create!(name: "Engineering Applications Workshop 2",
        name_abrv: "EAWORK2", archived: false, in_drive: false, user_id: 3)
    at9 = ActivityTimetable.where(activity_id: a9.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a9.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a9.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a9.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a9.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a9.id, programme_id: $prog_gee.id).first_or_create!


    a10 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC1000").first.id, code: "100b").first_or_create!(name: "Engineering Applications Workshop 2",
        name_abrv: "EAWORK2", archived: false, in_drive: false, user_id: 5)
    at10 = ActivityTimetable.where(activity_id: a10.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a10.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a10.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a10.id).first_or_create!(assess_weight: 10.0, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a10.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a10.id, programme_id: $prog_mec.id).first_or_create!


    a11 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER120").first.id, code: "100c").first_or_create!(name: "Engineering Applications Workshop 3",
        name_abrv: "EAWORK3", archived: false, in_drive: false, user_id: 1)
    at11 = ActivityTimetable.where(activity_id: a11.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a11.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a11.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a11.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a11.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a11.id, programme_id: $prog_aero.id).first_or_create!


    a12 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1901").first.id, code: "100c").first_or_create!(name: "Engineering Applications Workshop 3",
        name_abrv: "EAWORK3", archived: false, in_drive: false, user_id: 1)
    at12 = ActivityTimetable.where(activity_id: a12.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a12.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a12.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a12.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a12.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a12.id, programme_id: $prog_ae.id).first_or_create!


    a13 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "100c").first_or_create!(name: "Engineering Applications Workshop 3",
        name_abrv: "EAWORK3", archived: false, in_drive: false, user_id: 4)
    at13 = ActivityTimetable.where(activity_id: a13.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a13.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a13.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a13.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a13.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a13.id, programme_id: $prog_eee.id).first_or_create!


    a14 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE101").first.id, code: "100c").first_or_create!(name: "Engineering Applications Workshop 3",
        name_abrv: "EAWORK3", archived: false, in_drive: false, user_id: 4)
    at14 = ActivityTimetable.where(activity_id: a14.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a14.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a14.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a14.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a14.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a14.id, programme_id: $prog_gee.id).first_or_create!


    a15 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1901").first.id, code: "100").first_or_create!(name: "Engineering Applications",
        name_abrv: "EA GYRO", archived: true, in_drive: false, user_id: 5)
    at15 = ActivityTimetable.where(activity_id: a15.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a15.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a15.id).first_or_create!(criteria: "",
        job_desc:"Your role will include supervising and assisting students to manufacture a gyroscopic car in the workshop, using mills, laser cutters, 3D printers, hand tools, metrology, metalworking, vacuum forming etc.", jobshop_desc: "GTA in MEE, the Diamond: Advanced Manufacturing Technology (AMT)", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a15.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a15.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a15.id, programme_id: $prog_ae.id).first_or_create!


    a16 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC1000").first.id, code: "100c").first_or_create!(name: "Engineering Applications Workshop 3",
        name_abrv: "EAWORK3", archived: false, in_drive: false, user_id: 4)
    at16 = ActivityTimetable.where(activity_id: a16.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a16.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a16.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a16.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a16.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a16.id, programme_id: $prog_mec.id).first_or_create!


    a17 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER120").first.id, code: "100d").first_or_create!(name: "Engineering Applications Workshop 4",
        name_abrv: "EAWORK4", archived: false, in_drive: false, user_id: 5)
    at17 = ActivityTimetable.where(activity_id: a17.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a17.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a17.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a17.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a17.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a17.id, programme_id: $prog_aero.id).first_or_create!


    a18 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1901").first.id, code: "100d").first_or_create!(name: "Engineering Applications Workshop 4",
        name_abrv: "EAWORK4", archived: false, in_drive: true, user_id: 3)
    at18 = ActivityTimetable.where(activity_id: a18.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a18.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a18.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a18.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a18.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a18.id, programme_id: $prog_ae.id).first_or_create!


    a19 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "100d").first_or_create!(name: "Engineering Applications Workshop 4",
        name_abrv: "EAWORK4", archived: false, in_drive: true, user_id: 4)
    at19 = ActivityTimetable.where(activity_id: a19.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a19.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a19.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a19.id).first_or_create!(assess_weight: 12.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a19.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a19.id, programme_id: $prog_eee.id).first_or_create!


    a20 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE101").first.id, code: "100d").first_or_create!(name: "Engineering Applications Workshop 4",
        name_abrv: "EAWORK4", archived: false, in_drive: true, user_id: 4)
    at20 = ActivityTimetable.where(activity_id: a20.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a20.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a20.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a20.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a20.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a20.id, programme_id: $prog_gee.id).first_or_create!


    a21 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC1000").first.id, code: "100d").first_or_create!(name: "Engineering Applications Workshop 4",
        name_abrv: "EAWORK4", archived: false, in_drive: true, user_id: 2)
    at21 = ActivityTimetable.where(activity_id: a21.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a21.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a21.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a21.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a21.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a21.id, programme_id: $prog_mec.id).first_or_create!


    a22 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER120").first.id, code: "100e").first_or_create!(name: "Engineering Applications Machine Shop 1",
        name_abrv: "EAMACH1", archived: false, in_drive: true, user_id: 1)
    at22 = ActivityTimetable.where(activity_id: a22.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a22.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a22.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a22.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a22.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a22.id, programme_id: $prog_aero.id).first_or_create!


    a23 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1901").first.id, code: "100e").first_or_create!(name: "Engineering Applications Machine Shop 1",
        name_abrv: "EAMACH1", archived: false, in_drive: true, user_id: 3)
    at23 = ActivityTimetable.where(activity_id: a23.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a23.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a23.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a23.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a23.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a23.id, programme_id: $prog_ae.id).first_or_create!


    a24 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE101").first.id, code: "100e").first_or_create!(name: "Engineering Applications Machine Shop 1",
        name_abrv: "EAMACH1", archived: false, in_drive: true, user_id: 4)
    at24 = ActivityTimetable.where(activity_id: a24.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a24.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a24.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a24.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a24.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a24.id, programme_id: $prog_gee.id).first_or_create!


    a25 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC1000").first.id, code: "100e").first_or_create!(name: "Engineering Applications Machine Shop 1",
        name_abrv: "EAMACH1", archived: false, in_drive: true, user_id: 4)
    at25 = ActivityTimetable.where(activity_id: a25.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a25.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a25.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a25.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a25.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a25.id, programme_id: $prog_mec.id).first_or_create!


    a26 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER120").first.id, code: "100f").first_or_create!(name: "Engineering Applications Machine Shop 2",
        name_abrv: "EAMACH2", archived: false, in_drive: true, user_id: 1)
    at26 = ActivityTimetable.where(activity_id: a26.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a26.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a26.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a26.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a26.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a26.id, programme_id: $prog_aero.id).first_or_create!


    a27 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1901").first.id, code: "100f").first_or_create!(name: "Engineering Applications Machine Shop 2",
        name_abrv: "EAMACH2", archived: false, in_drive: true, user_id: 5)
    at27 = ActivityTimetable.where(activity_id: a27.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a27.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a27.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a27.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a27.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a27.id, programme_id: $prog_ae.id).first_or_create!


    a28 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE101").first.id, code: "100f").first_or_create!(name: "Engineering Applications Machine Shop 2",
        name_abrv: "EAMACH2", archived: false, in_drive: true, user_id: 3)
    at28 = ActivityTimetable.where(activity_id: a28.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a28.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a28.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a28.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a28.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a28.id, programme_id: $prog_gee.id).first_or_create!


    a29 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC1000").first.id, code: "100f").first_or_create!(name: "Engineering Applications Machine Shop 2",
        name_abrv: "EAMACH2", archived: false, in_drive: true, user_id: 5)
    at29 = ActivityTimetable.where(activity_id: a29.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a29.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a29.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a29.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a29.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a29.id, programme_id: $prog_mec.id).first_or_create!


    a30 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER120").first.id, code: "100g").first_or_create!(name: "Engineering Applications Machine Shop 3",
        name_abrv: "EAMACH3", archived: false, in_drive: true, user_id: 5)
    at30 = ActivityTimetable.where(activity_id: a30.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a30.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a30.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a30.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a30.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a30.id, programme_id: $prog_aero.id).first_or_create!


    a31 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1901").first.id, code: "100g").first_or_create!(name: "Engineering Applications Machine Shop 3",
        name_abrv: "EAMACH3", archived: false, in_drive: true, user_id: 5)
    at31 = ActivityTimetable.where(activity_id: a31.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a31.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a31.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a31.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a31.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a31.id, programme_id: $prog_ae.id).first_or_create!


    a32 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE101").first.id, code: "100g").first_or_create!(name: "Engineering Applications Machine Shop 3",
        name_abrv: "EAMACH3", archived: false, in_drive: true, user_id: 1)
    at32 = ActivityTimetable.where(activity_id: a32.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a32.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a32.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a32.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a32.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a32.id, programme_id: $prog_gee.id).first_or_create!


    a33 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC1000").first.id, code: "100g").first_or_create!(name: "Engineering Applications Machine Shop 3",
        name_abrv: "EAMACH3", archived: false, in_drive: true, user_id: 1)
    at33 = ActivityTimetable.where(activity_id: a33.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 2, max_week_num: 37, pref_room_id: $room_ms.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a33.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a33.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a33.id).first_or_create!(assess_weight: nil, notes: "See Workshop 4",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a33.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a33.id, programme_id: $prog_mec.id).first_or_create!


    a34 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1200").first.id, code: "201").first_or_create!(name: "Bridge Building",
        name_abrv: "BRIDGE BLD", archived: false, in_drive: true, user_id: 2)
    at34 = ActivityTimetable.where(activity_id: a34.id).first_or_create!(duration: 180, kit_prep_time: 210, min_week_num: 8, max_week_num: 9, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 210, takedown_time: 210, notes: "After Bridge Design, Need PUPS",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a34.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a34.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a34.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a34.id).first_or_create!(cost_per_student: nil, equip_needed: "PUPs, band saws, hot wire cutters, dremels, laser cutters",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a34.id, programme_id: $prog_civ.id).first_or_create!


    a35 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2500").first.id, code: "202").first_or_create!(name: "Triaxial Lab",
        name_abrv: "TRIAXIAL", archived: false, in_drive: true, user_id: 3)
    at35 = ActivityTimetable.where(activity_id: a35.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 5, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 120, setup_time: 480, takedown_time: 480, notes: "Given the complexity of the set-up, and the fact that it leaves the lab dirty, GEO labs should be condensed in the same week/weeks as consecutive sessions without interruptions (other sessions or open days)",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a35.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a35.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a35.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a35.id).first_or_create!(cost_per_student: nil, equip_needed: "shimadzu, triaxial cells & trolleys, measuring kits, compressed air, weighing scales, large oven in materials lab",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a35.id, programme_id: $prog_civ.id).first_or_create!


    a36 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV351").first.id, code: "202").first_or_create!(name: "Triaxial Lab",
        name_abrv: "TRIAXIAL", archived: false, in_drive: true, user_id: 3)
    at36 = ActivityTimetable.where(activity_id: a36.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 5, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 120, setup_time: 480, takedown_time: 480, notes: "Given the complexity of the set-up, and the fact that it leaves the lab dirty, GEO labs should be condensed in the same week/weeks as consecutive sessions without interruptions (other sessions or open days)",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a36.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a36.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a36.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a36.id).first_or_create!(cost_per_student: nil, equip_needed: "shimadzu, triaxial cells & trolleys, measuring kits, compressed air, weighing scales, large oven in materials lab",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a36.id, programme_id: $prog_civ.id).first_or_create!


    a37 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV351").first.id, code: "203").first_or_create!(name: "Oedometer",
        name_abrv: "OEDOMETER", archived: false, in_drive: true, user_id: 2)
    at37 = ActivityTimetable.where(activity_id: a37.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 5, max_week_num: 7, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 120, setup_time: 480, takedown_time: 480, notes: "Need PUPS (for setup)",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a37.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a37.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a37.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a37.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a37.id, programme_id: $prog_gee.id).first_or_create!


    a38 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2500").first.id, code: "203").first_or_create!(name: "Oedometer",
        name_abrv: "OEDOMETER", archived: false, in_drive: true, user_id: 5)
    at38 = ActivityTimetable.where(activity_id: a38.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 5, max_week_num: 7, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 120, setup_time: 480, takedown_time: 480, notes: "Need PUPS (for setup)",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a38.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a38.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a38.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a38.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a38.id, programme_id: $prog_civ.id).first_or_create!


    a39 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "204").first_or_create!(name: "Bending",
        name_abrv: "BEND", archived: false, in_drive: true, user_id: 4)
    at39 = ActivityTimetable.where(activity_id: a39.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "Needs Shimadzu",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at39.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a39.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a39.id).first_or_create!(criteria: "",
        job_desc:"In this lab, students perform 3-point bending tests on a series of beams with different cross-sections. Shimadzu tensometers are used to perform the tests, and the results are compared to predictions from classical beam theory. A knowledge of mechanical performance of materials is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a39.id).first_or_create!(assess_weight: 10.0, notes: "Lab report assessed by MEE",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a39.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a39.id, programme_id: $prog_mec.id).first_or_create!


    a40 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2100").first.id, code: "205").first_or_create!(name: "Plastic Collapse: Frames",
        name_abrv: "PC Frames", archived: false, in_drive: true, user_id: 1)
    at40 = ActivityTimetable.where(activity_id: a40.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at40.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a40.id).first_or_create!(user_id: 4, g_drive_link: "https://goo.gl/8xku3D",
        mole_pub_link: "https://goo.gl/hWmGBG", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a40.id).first_or_create!(criteria: "Understanding of Mechanics of materials",
        job_desc:"In this lab, students will study the deformation and collapse of portal frames. This will build on their knowledge of the deformation and buckling of struts that they studies earlier in the course, showing them a practical application of the theory.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a40.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a40.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a40.id, programme_id: $prog_civ.id).first_or_create!


    a41 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC202").first.id, code: "205").first_or_create!(name: "Plastic Collapse: Frames",
        name_abrv: "FRAMES", archived: false, in_drive: true, user_id: 1)
    at41 = ActivityTimetable.where(activity_id: a41.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at41.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a41.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a41.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of Mechanics of materials. The ideal candidate should be familiar with plastic theory and proficient with Excel.",
        job_desc:"In this lab, students will study the deformation and collapse of portal frames. This will build on their knowledge of the deformation and buckling of struts that they studies earlier in the course, showing them a practical application of the theory.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a41.id).first_or_create!(assess_weight: nil, notes: "MOLE Test",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a41.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a41.id, programme_id: $prog_mec.id).first_or_create!


    a42 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER104").first.id, code: "206").first_or_create!(name: "Cantilever Truss",
        name_abrv: "Cantilever Truss", archived: false, in_drive: true, user_id: 3)
    at42 = ActivityTimetable.where(activity_id: a42.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at42.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a42.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a42.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of statics. The ideal candidate should be familiar with the method of sections to solve a truss system.",
        job_desc:"In this lab, students study the behaviour of a truss element. Forces in each memebr are obtained using strain gauges. Students investigate the force redistrtibution for different loading configuration and use combintations of the latter to validate the principle of superposotion.", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a42.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a42.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a42.id, programme_id: $prog_aero.id).first_or_create!


    a43 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR136").first.id, code: "206").first_or_create!(name: "Cantilever Truss",
        name_abrv: "Trusses", archived: false, in_drive: true, user_id: 3)
    at43 = ActivityTimetable.where(activity_id: a43.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at43.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a43.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://goo.gl/j7KZhd", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a43.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of statics. The ideal candidate should be familiar with the method of sections to solve a truss system.",
        job_desc:"In this lab, students study the behaviour of a truss element. Forces in each memebr are obtained using strain gauges. Students investigate the force redistrtibution for different loading configuration and use combintations of the latter to validate the principle of superposotion.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a43.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a43.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a43.id, programme_id: $prog_amrc.id).first_or_create!


    a44 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1000").first.id, code: "206").first_or_create!(name: "Cantilever Truss",
        name_abrv: "Trusses", archived: false, in_drive: true, user_id: 4)
    at44 = ActivityTimetable.where(activity_id: a44.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 7, max_week_num: 9, pref_room_id: $room_sd.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at44.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a44.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://goo.gl/SXd4jp", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a44.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of statics. The ideal candidate should be familiar with the method of sections to solve a truss system.",
        job_desc:"In this lab, students study the behaviour of a truss element. Forces in each memebr are obtained using strain gauges. Students investigate the force redistrtibution for different loading configuration and use combintations of the latter to validate the principle of superposotion.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a44.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 3)
    ActivityTech.where(activity_id: a44.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a44.id, programme_id: $prog_civ.id).first_or_create!


    a45 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1000").first.id, code: "207").first_or_create!(name: "Two-pinned Arch",
        name_abrv: "Arches", archived: false, in_drive: true, user_id: 1)
    at45 = ActivityTimetable.where(activity_id: a45.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 12, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at45.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a45.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://goo.gl/SALrcj", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a45.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of statics. The ideal candidate should be familiar with arches.",
        job_desc:"In this lab, students investigate the behaviour of an elastic parabolic arch under uniformely distributed loading. Mid-span deflection is recorded using an analog transducer. Students will find the relationshipe between UDL and reaction force for which no bending moment is applied to the arch. The principle of superposition is applied to the mid-span deflection.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a45.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 3)
    ActivityTech.where(activity_id: a45.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a45.id, programme_id: $prog_civ.id).first_or_create!


    a46 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1000").first.id, code: "208").first_or_create!(name: "Suspension Cable",
        name_abrv: "Cables", archived: false, in_drive: true, user_id: 1)
    at46 = ActivityTimetable.where(activity_id: a46.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 11, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at46.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a46.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://goo.gl/Ggzi6e", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a46.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of statics. The ideal candidate should be familiar with suspension cables brideges and the  cable-arch analogy.",
        job_desc:"In this lab, students test the ways in which a suspension cable responds to vertical loadings. They will determine the relationship between uniform load, reaction force and cable sag and they will investigate the cable-arch analogy.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a46.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 3)
    ActivityTech.where(activity_id: a46.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a46.id, programme_id: $prog_civ.id).first_or_create!


    a47 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1000").first.id, code: "209").first_or_create!(name: "Deflection of a Beam",
        name_abrv: "Bending", archived: false, in_drive: true, user_id: 3)
    at47 = ActivityTimetable.where(activity_id: a47.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "Needs GUNT equipment",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at47.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a47.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://goo.gl/rPsrdF", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a47.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a47.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a47.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a47.id, programme_id: $prog_civ.id).first_or_create!


    a48 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2100").first.id, code: "210").first_or_create!(name: "Qualitative Analysis of Frames",
        name_abrv: "QA", archived: false, in_drive: true, user_id: 2)
    at48 = ActivityTimetable.where(activity_id: a48.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 11, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a48.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://goo.gl/mibPtH", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a48.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of structural analysis. The ideal candidate should be familiar with the analysis of statically indeterminate portal frames.",
        job_desc:"In this lab, students will qualitative determine deflected shapes and bending moment diagrams of 2-dimensional elastic beams and portal frames structures as a result of external loading.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a48.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a48.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a48.id, programme_id: $prog_civ.id).first_or_create!


    a49 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE207").first.id, code: "210").first_or_create!(name: "Qualitative Analysis",
        name_abrv: "QA", archived: false, in_drive: true, user_id: 2)
    at49 = ActivityTimetable.where(activity_id: a49.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 50, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a49.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://goo.gl/F1sv5m", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a49.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a49.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a49.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a49.id, programme_id: $prog_gee.id).first_or_create!


    a50 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2100").first.id, code: "211").first_or_create!(name: "Elastic Instability: Buckling",
        name_abrv: "EI - Buckling", archived: false, in_drive: true, user_id: 4)
    at50 = ActivityTimetable.where(activity_id: a50.id).first_or_create!(duration: 120, kit_prep_time: 480, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 210, takedown_time: 210, notes: "Needs Shimadzu",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at50.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a50.id).first_or_create!(user_id: 4, g_drive_link: "https://goo.gl/zpPBgp",
        mole_pub_link: "https://goo.gl/mP6s53", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a50.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a50.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a50.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a50.id, programme_id: $prog_civ.id).first_or_create!


    a51 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2100").first.id, code: "212").first_or_create!(name: "Plastic Collapse: Beams",
        name_abrv: "PC Beams", archived: false, in_drive: true, user_id: 1)
    at51 = ActivityTimetable.where(activity_id: a51.id).first_or_create!(duration: 60, kit_prep_time: 210, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at51.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a51.id).first_or_create!(user_id: 5, g_drive_link: "https://goo.gl/eaYC7o",
        mole_pub_link: "https://goo.gl/GT7qFG", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a51.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a51.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a51.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a51.id, programme_id: $prog_civ.id).first_or_create!


    a52 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR222").first.id, code: "213").first_or_create!(name: "Hole in Plate",
        name_abrv: "HOLEPLATE", archived: true, in_drive: true, user_id: 2)
    at52 = ActivityTimetable.where(activity_id: a52.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a52.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a52.id).first_or_create!(criteria: "Understanding of Mechanics of materials",
        job_desc:"In this lab, students study the strain-distribution in a plate with a hole in it, using strain-gauges. The data is obtained using Shimadzu tensometers and Vishay strain gauge monitoring equipment. Once the data is obtained, the students analyse their data using Mohr's circle. A knowledge of Mohr's circle and two dimensional stress distributions is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a52.id).first_or_create!(assess_weight: nil, notes: "post-lab MOLE quiz",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a52.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a52.id, programme_id: $prog_amrc.id).first_or_create!


    a53 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR223").first.id, code: "213").first_or_create!(name: "Hole in Plate",
        name_abrv: "HOLEPLATE", archived: false, in_drive: true, user_id: 5)
    at53 = ActivityTimetable.where(activity_id: a53.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs Shimadzu",
        capacity: nil, checked_on_timetable: false)
    RoomBooking.where(activity_timetable_id: at53.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a53.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a53.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of Mechanics of materials. The ideal candidate should be familiar with stress concentration, principal stresses and strains and Mohr Circles.",
        job_desc:"In this lab, students study the strain-distribution in a plate with a hole in it, using strain-gauges. The data is obtained using Shimadzu tensometers and Vishay strain gauge monitoring equipment. Once the data is obtained, the students analyse their data using Mohr's circle. A knowledge of Mohr's circle and two dimensional stress distributions is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a53.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a53.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a53.id, programme_id: $prog_amrc.id).first_or_create!


    a55 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MAT1600").first.id, code: "213").first_or_create!(name: "Hole in Plate",
        name_abrv: "HOLEPLATE", archived: true, in_drive: true, user_id: 3)
    at55 = ActivityTimetable.where(activity_id: a55.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 4, max_week_num: 5, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a55.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://goo.gl/6xWwbb", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a55.id).first_or_create!(criteria: "Understanding of Mechanics of materials",
        job_desc:"In this lab, students study the strain-distribution in a plate with a hole in it, using strain-gauges. The data is obtained using Shimadzu tensometers and Vishay strain gauge monitoring equipment. Once the data is obtained, the students analyse their data using Mohr's circle. A knowledge of Mohr's circle and two dimensional stress distributions is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a55.id).first_or_create!(assess_weight: nil, notes: "In-lab marking + post-lab MOLE quiz",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a55.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a55.id, programme_id: $prog_civ.id).first_or_create!


    a56 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC202").first.id, code: "213").first_or_create!(name: "Hole in Plate",
        name_abrv: "HOLEPLATE", archived: true, in_drive: true, user_id: 3)
    at56 = ActivityTimetable.where(activity_id: a56.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a56.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a56.id).first_or_create!(criteria: "Understanding of Mechanics of materials",
        job_desc:"In this lab, students study the strain-distribution in a plate with a hole in it, using strain-gauges. The data is obtained using Shimadzu tensometers and Vishay strain gauge monitoring equipment. Once the data is obtained, the students analyse their data using Mohr's circle. A knowledge of Mohr's circle and two dimensional stress distributions is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a56.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a56.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a56.id, programme_id: $prog_mec.id).first_or_create!


    a57 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE207").first.id, code: "214").first_or_create!(name: "Elastic Instability: Buckling",
        name_abrv: "EI - GEE", archived: false, in_drive: true, user_id: 1)
    at57 = ActivityTimetable.where(activity_id: a57.id).first_or_create!(duration: 240, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a57.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://goo.gl/TEpnz3", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a57.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a57.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a57.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a57.id, programme_id: $prog_gee.id).first_or_create!


    a58 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE207").first.id, code: "209").first_or_create!(name: "Deflection of a Beam",
        name_abrv: "", archived: false, in_drive: true, user_id: 4)
    at58 = ActivityTimetable.where(activity_id: a58.id).first_or_create!(duration: 240, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at58.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a58.id).first_or_create!(user_id: 2, g_drive_link: "https://goo.gl/NX44Rw",
        mole_pub_link: "https://goo.gl/qSTPbK", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a58.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a58.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a58.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a58.id, programme_id: $prog_gee.id).first_or_create!


    a59 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE207").first.id, code: "218").first_or_create!(name: "Normal and Shear Stress in a Beam",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at59 = ActivityTimetable.where(activity_id: a59.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a59.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a59.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a59.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a59.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a59.id, programme_id: $prog_gee.id).first_or_create!


    a60 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2100").first.id, code: "216").first_or_create!(name: "Elastic Instability: Frames",
        name_abrv: "EI - Frames", archived: false, in_drive: true, user_id: 2)
    at60 = ActivityTimetable.where(activity_id: a60.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a60.id).first_or_create!(user_id: 4, g_drive_link: "https://goo.gl/jckoDt",
        mole_pub_link: "https://goo.gl/mKk8xz", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a60.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a60.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a60.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a60.id, programme_id: $prog_civ.id).first_or_create!


    a61 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE207").first.id, code: "237").first_or_create!(name: "Elastic Instability: Frames",
        name_abrv: "EI - Frames", archived: false, in_drive: true, user_id: 3)
    at61 = ActivityTimetable.where(activity_id: a61.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a61.id).first_or_create!(user_id: 3, g_drive_link: "https://goo.gl/jckoDt",
        mole_pub_link: "https://goo.gl/mKk8xz", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a61.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a61.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a61.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a61.id, programme_id: $prog_gee.id).first_or_create!


    a62 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE207").first.id, code: "238").first_or_create!(name: "Elastic Instability: Torsional Buckling and Tin Plates",
        name_abrv: "EI - Torsion", archived: false, in_drive: true, user_id: 5)
    at62 = ActivityTimetable.where(activity_id: a62.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "Needs GUNT equipment & Shimadzu",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a62.id).first_or_create!(user_id: 2, g_drive_link: "https://goo.gl/JSCoLz",
        mole_pub_link: "https://goo.gl/gTFMau", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a62.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a62.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a62.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a62.id, programme_id: $prog_gee.id).first_or_create!


    a63 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2100").first.id, code: "217").first_or_create!(name: "Elastic Instability: Torsional Buckling and Tin Plates",
        name_abrv: "EI - Torsion", archived: false, in_drive: true, user_id: 3)
    at63 = ActivityTimetable.where(activity_id: a63.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "Needs GUNT equipment & Shimadzu",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a63.id).first_or_create!(user_id: 4, g_drive_link: "https://goo.gl/JSCoLz",
        mole_pub_link: "https://goo.gl/gTFMau", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a63.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a63.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a63.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a63.id, programme_id: $prog_civ.id).first_or_create!


    a64 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR222").first.id, code: "218").first_or_create!(name: "Buckling",
        name_abrv: "BUCKLING", archived: false, in_drive: true, user_id: 3)
    at64 = ActivityTimetable.where(activity_id: a64.id).first_or_create!(duration: nil, kit_prep_time: 960, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "Needs Shimadzu",
        capacity: nil, checked_on_timetable: false)
    RoomBooking.where(activity_timetable_id: at64.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a64.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a64.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of elastic instability of struts.",
        job_desc:"In this lab, students perform buckling tests on a series of struts of different lengths. Shimadzu tensometers are used to perform the tests, and the results are compared to predictions using Euler buckling and modified empirical formulae.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a64.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
 ActivityProgramme.where(activity_id: a64.id, programme_id: $prog_amrc.id).first_or_create!


    a65 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1000").first.id, code: "218").first_or_create!(name: "Normal and Shear Stress in a Beam",
        name_abrv: "Shear", archived: false, in_drive: true, user_id: 1)
    at65 = ActivityTimetable.where(activity_id: a65.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "Needs GUNT equipment",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at65.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a65.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://goo.gl/Lo6Fyd", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a65.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a65.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 3)
    ActivityTech.where(activity_id: a65.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a65.id, programme_id: $prog_civ.id).first_or_create!


    a66 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6276").first.id, code: "219").first_or_create!(name: "Joint testing",
        name_abrv: "JOINTS", archived: false, in_drive: false, user_id: 1)
    at66 = ActivityTimetable.where(activity_id: a66.id).first_or_create!(duration: 120, kit_prep_time: 480, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a66.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://goo.gl/V7kcA5", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a66.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a66.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a66.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a66.id, programme_id: $prog_civ.id).first_or_create!


    a67 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV150").first.id, code: "220").first_or_create!(name: "Direct Shear Test",
        name_abrv: "SHEREBOX", archived: false, in_drive: false, user_id: 2)
    at67 = ActivityTimetable.where(activity_id: a67.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at67.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a67.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://goo.gl/iRpLZu", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a67.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a67.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a67.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a67.id, programme_id: $prog_civ.id).first_or_create!


    a68 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6276").first.id, code: "221").first_or_create!(name: "Stability",
        name_abrv: "STABILITY", archived: false, in_drive: false, user_id: 1)
    at68 = ActivityTimetable.where(activity_id: a68.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a68.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://goo.gl/XN4C9z", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a68.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a68.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a68.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a68.id, programme_id: $prog_civ.id).first_or_create!


    a69 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR222").first.id, code: "222").first_or_create!(name: "Vibrating Beams",
        name_abrv: "VIBBEAM", archived: false, in_drive: false, user_id: 3)
    at69 = ActivityTimetable.where(activity_id: a69.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)
    RoomBooking.where(activity_timetable_id: at69.id, room_id: $room_sd.id).first_or_create!

    ActivityTeaching.where(activity_id: a69.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a69.id).first_or_create!(criteria: "The ideal candidate should have a strong background in basic dynamics.",
        job_desc:"Dynamics Lab investiagating SDOF system under free and forced oscillation. The effect of an external damper is also studied.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a69.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a69.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a69.id, programme_id: $prog_amrc.id).first_or_create!


    a70 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR223").first.id, code: "222").first_or_create!(name: "Vibrating Beams",
        name_abrv: "VIBBEAM", archived: false, in_drive: false, user_id: 5)
    at70 = ActivityTimetable.where(activity_id: a70.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)
    RoomBooking.where(activity_timetable_id: at70.id, room_id: $room_sd.id).first_or_create!

    ActivityTeaching.where(activity_id: a70.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a70.id).first_or_create!(criteria: "The ideal candidate should have a strong background in basic dynamics.",
        job_desc:"Dynamics Lab investiagating SDOF system under free and forced oscillation. The effect of an external damper is also studied.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a70.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a70.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a70.id, programme_id: $prog_amrc.id).first_or_create!


    a71 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR305").first.id, code: "222").first_or_create!(name: "Vibrating Beam",
        name_abrv: "VIBBEAM", archived: true, in_drive: false, user_id: 5)
    at71 = ActivityTimetable.where(activity_id: a71.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)
    RoomBooking.where(activity_timetable_id: at71.id, room_id: $room_sd.id).first_or_create!

    ActivityTeaching.where(activity_id: a71.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://goo.gl/nTh2oR", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a71.id).first_or_create!(criteria: "The ideal candidate should have a strong background in basic dynamics.",
        job_desc:"Dynamics Lab investiagating SDOF system under free and forced oscillation. The effect of an external damper is also studied.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a71.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a71.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a71.id, programme_id: $prog_amrc.id).first_or_create!


    a72 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV4181").first.id, code: "222").first_or_create!(name: "Vibrating Beams",
        name_abrv: "VIBBEAMS", archived: false, in_drive: true, user_id: 2)
    at72 = ActivityTimetable.where(activity_id: a72.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at72.id, room_id: $room_sd.id).first_or_create!

    ActivityTeaching.where(activity_id: a72.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a72.id).first_or_create!(criteria: "The ideal candidate should have a strong background in basic dynamics.",
        job_desc:"Dynamics Lab investiagating SDOF system under free and forced oscillation. The effect of an external damper is also studied.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a72.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a72.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a72.id, programme_id: $prog_civ.id).first_or_create!


    a73 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6181").first.id, code: "222").first_or_create!(name: "Vibrating Beams",
        name_abrv: "VIBBEAMS", archived: false, in_drive: true, user_id: 4)
    at73 = ActivityTimetable.where(activity_id: a73.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at73.id, room_id: $room_sd.id).first_or_create!

    ActivityTeaching.where(activity_id: a73.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a73.id).first_or_create!(criteria: "The ideal candidate should have a strong background in basic dynamics.",
        job_desc:"Dynamics Lab investiagating SDOF system under free and forced oscillation. The effect of an external damper is also studied.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a73.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a73.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a73.id, programme_id: $prog_civ.id).first_or_create!


    a74 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1200").first.id, code: "223").first_or_create!(name: "Paper Column",
        name_abrv: "PAPER", archived: false, in_drive: true, user_id: 3)
    at74 = ActivityTimetable.where(activity_id: a74.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 3, max_week_num: 4, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "Needs Shimadzu",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at74.id, room_id: $room_ml.id).first_or_create!

    ActivityTeaching.where(activity_id: a74.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a74.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a74.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a74.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a74.id, programme_id: $prog_civ.id).first_or_create!


    a75 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1200").first.id, code: "224").first_or_create!(name: "PASCO Bridge",
        name_abrv: "PASCO", archived: false, in_drive: true, user_id: 2)
    at75 = ActivityTimetable.where(activity_id: a75.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 4, max_week_num: 5, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "After Paper Column",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a75.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a75.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a75.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a75.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a75.id, programme_id: $prog_civ.id).first_or_create!


    a76 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1200").first.id, code: "225").first_or_create!(name: "Bridge Design",
        name_abrv: "BRIDGE DSG", archived: false, in_drive: false, user_id: 3)
    at76 = ActivityTimetable.where(activity_id: a76.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "After PASCO bridge",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a76.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a76.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a76.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a76.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a76.id, programme_id: $prog_civ.id).first_or_create!


    a77 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV1200").first.id, code: "226").first_or_create!(name: "Bridge Test",
        name_abrv: "BRIDGE TST", archived: false, in_drive: false, user_id: 3)
    at77 = ActivityTimetable.where(activity_id: a77.id).first_or_create!(duration: 45, kit_prep_time: nil, min_week_num: 9, max_week_num: 10, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 480, takedown_time: 480, notes: "After Bridge Building",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a77.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a77.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a77.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a77.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a77.id, programme_id: $prog_civ.id).first_or_create!


    a78 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV4254").first.id, code: "227").first_or_create!(name: "Fire Test",
        name_abrv: "FIRE", archived: false, in_drive: false, user_id: 1)
    at78 = ActivityTimetable.where(activity_id: a78.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Experiment taking place outside (stores courtyard)",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a78.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a78.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a78.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a78.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a78.id, programme_id: $prog_civ.id).first_or_create!


    a79 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6254").first.id, code: "227").first_or_create!(name: "Fire Test",
        name_abrv: "FIRE", archived: false, in_drive: true, user_id: 1)
    at79 = ActivityTimetable.where(activity_id: a79.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Experiment taking place outside (stores courtyard)",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a79.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a79.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a79.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a79.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a79.id, programme_id: $prog_civ.id).first_or_create!


    a80 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR303").first.id, code: "228").first_or_create!(name: "Welded Coupons",
        name_abrv: "COUP", archived: false, in_drive: false, user_id: 3)
    at80 = ActivityTimetable.where(activity_id: a80.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a80.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a80.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a80.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a80.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a80.id, programme_id: $prog_amrc.id).first_or_create!


    a81 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER104").first.id, code: "229").first_or_create!(name: "Moving Hinge",
        name_abrv: "Moving Hinge", archived: false, in_drive: true, user_id: 5)
    at81 = ActivityTimetable.where(activity_id: a81.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a81.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a81.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a81.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a81.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a81.id, programme_id: $prog_aero.id).first_or_create!


    a82 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR303").first.id, code: "230").first_or_create!(name: "Welded Components",
        name_abrv: "COMP", archived: false, in_drive: true, user_id: 5)
    at82 = ActivityTimetable.where(activity_id: a82.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a82.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a82.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a82.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a82.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a82.id, programme_id: $prog_amrc.id).first_or_create!


    a83 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2100").first.id, code: "231").first_or_create!(name: "Cantilever Truss - Modelling",
        name_abrv: "", archived: false, in_drive: true, user_id: 4)
    at83 = ActivityTimetable.where(activity_id: a83.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 8, max_week_num: 9, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at83.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a83.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a83.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a83.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a83.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a83.id, programme_id: $prog_civ.id).first_or_create!


    a84 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2100").first.id, code: "232").first_or_create!(name: "Continuous Beam - Modelling",
        name_abrv: "", archived: false, in_drive: true, user_id: 3)
    at84 = ActivityTimetable.where(activity_id: a84.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 9, max_week_num: 10, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "Needs GUNT equipment",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at84.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a84.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a84.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a84.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a84.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a84.id, programme_id: $prog_civ.id).first_or_create!


    a85 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV4136").first.id, code: "233").first_or_create!(name: "Hole in Plate - Modelling",
        name_abrv: "", archived: false, in_drive: true, user_id: 3)
    at85 = ActivityTimetable.where(activity_id: a85.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: 11, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Needs Shimadzu",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at85.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a85.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a85.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a85.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a85.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a85.id, programme_id: $prog_civ.id).first_or_create!


    a86 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6136").first.id, code: "233").first_or_create!(name: "Hole in Plate - Modelling",
        name_abrv: "", archived: false, in_drive: true, user_id: 4)
    at86 = ActivityTimetable.where(activity_id: a86.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: 11, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Needs Shimadzu",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at86.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a86.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a86.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a86.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a86.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a86.id, programme_id: $prog_civ.id).first_or_create!


    a87 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MAT1600").first.id, code: "234").first_or_create!(name: "Hole in Plate: Photoelasticity",
        name_abrv: "", archived: false, in_drive: true, user_id: 3)
    at87 = ActivityTimetable.where(activity_id: a87.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 3, max_week_num: 4, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at87.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a87.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a87.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of Mechanics of materials. The ideal candidate should be familiar with stress concentration, principal stresses. Knowledge of photelasticity is desirable.",
        job_desc:"In this lab, students will use photoelasticity to qualitative inviestigate the stress distribution in a plate with a hole in it.", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a87.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a87.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a87.id, programme_id: $prog_civ.id).first_or_create!


    a88 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC202").first.id, code: "234").first_or_create!(name: "Hole in Plate: Photoelasticity",
        name_abrv: "HOLEPLATE", archived: false, in_drive: true, user_id: 5)
    at88 = ActivityTimetable.where(activity_id: a88.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 4, max_week_num: 8, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "Needs GUNT equipment",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at88.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a88.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a88.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of Mechanics of materials. The ideal candidate should be familiar with stress concentration, principal stresses. Knowledge of photelasticity is desirable.",
        job_desc:"In this lab, students will use photoelasticity to qualitative inviestigate the stress distribution in a plate with a hole in it.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a88.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a88.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a88.id, programme_id: $prog_mec.id).first_or_create!


    a90 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC202").first.id, code: "239").first_or_create!(name: "Hole in Plate: Mohr's Circles",
        name_abrv: "HOLEPLATE", archived: false, in_drive: true, user_id: 4)
    at90 = ActivityTimetable.where(activity_id: a90.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 5, max_week_num: 8, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Needs Shimadzu",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at90.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a90.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a90.id).first_or_create!(criteria: "It is essential for a GTA to have a strong understanding of Mechanics of materials. The ideal candidate should be familiar with stress concentration, principal stresses and strains and Mohr Circles.",
        job_desc:"In this lab, students study the strain-distribution in a plate with a hole in it, using strain-gauges. The data is obtained using Shimadzu tensometers and Vishay strain gauge monitoring equipment. Once the data is obtained, the students analyse their data using Mohr's circle. A knowledge of Mohr's circle and two dimensional stress distributions is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a90.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a90.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a90.id, programme_id: $prog_mec.id).first_or_create!


    a91 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV3204").first.id, code: "236").first_or_create!(name: "Integrated Design Project",
        name_abrv: "IDP", archived: false, in_drive: true, user_id: 3)
    at91 = ActivityTimetable.where(activity_id: a91.id).first_or_create!(duration: 480, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Needs PUPS",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a91.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a91.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a91.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a91.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a91.id, programme_id: $prog_civ.id).first_or_create!


    a92 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV3207").first.id, code: "236").first_or_create!(name: "Integrated Design Project",
        name_abrv: "IDP", archived: false, in_drive: true, user_id: 3)
    at92 = ActivityTimetable.where(activity_id: a92.id).first_or_create!(duration: 2100, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Needs PUPS",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a92.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a92.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a92.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a92.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a92.id, programme_id: $prog_civ.id).first_or_create!


    a93 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR223").first.id, code: "301").first_or_create!(name: "Thick Walled Cylinders",
        name_abrv: "THICKWALL", archived: false, in_drive: true, user_id: 3)
    at93 = ActivityTimetable.where(activity_id: a93.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a93.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a93.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a93.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a93.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a93.id, programme_id: $prog_amrc.id).first_or_create!


    a94 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC302").first.id, code: "301").first_or_create!(name: "Thick Walled Cylinder",
        name_abrv: "THICKWALL", archived: true, in_drive: true, user_id: 4)
    at94 = ActivityTimetable.where(activity_id: a94.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 30, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a94.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a94.id).first_or_create!(criteria: "Understanding of Mechanics of materials",
        job_desc:"In this lab, students monitor the strain through the wall of a thick cylinder, recording their data at a series of different pressures. They then derive formulae for the theoretical strains and compare their data to the theoretical calculations. A knowledge of mechanical of materials, and three-dimensional strains is required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a94.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a94.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a94.id, programme_id: $prog_mec.id).first_or_create!


    a95 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER284").first.id, code: "302").first_or_create!(name: "Bending",
        name_abrv: "BEND", archived: false, in_drive: true, user_id: 5)
    at95 = ActivityTimetable.where(activity_id: a95.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a95.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a95.id).first_or_create!(criteria: "Understanding of Mechanics of materials",
        job_desc:"In this lab, students perform 3-point bending tests on a series of beams with different cross-sections. Shimadzu tensometers are used to perform the tests, and the results are compared to predictions from classical beam theory. A knowledge of mechanical performance of materials is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a95.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a95.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a95.id, programme_id: $prog_aero.id).first_or_create!


    a96 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER284").first.id, code: "303").first_or_create!(name: "Buckling",
        name_abrv: "BUCKLING", archived: false, in_drive: false, user_id: 1)
    at96 = ActivityTimetable.where(activity_id: a96.id).first_or_create!(duration: 120, kit_prep_time: 960, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a96.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a96.id).first_or_create!(criteria: "Understanding of Mechanics of materials",
        job_desc:"In this lab, students perform buckling tests on a series of struts of different lengths. Shimadzu tensometers are used to perform the tests, and the results are compared to predictions using Euler buckling and modified empirical formulae. A knowledge of mechanical performance of materials is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a96.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a96.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a96.id, programme_id: $prog_aero.id).first_or_create!


    a97 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC202").first.id, code: "303").first_or_create!(name: "Buckling",
        name_abrv: "BUCKLING", archived: false, in_drive: true, user_id: 5)
    at97 = ActivityTimetable.where(activity_id: a97.id).first_or_create!(duration: 120, kit_prep_time: 960, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a97.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a97.id).first_or_create!(criteria: "Understanding of Mechanics of materials",
        job_desc:"In this lab, students perform buckling tests on a series of struts of different lengths. Shimadzu tensometers are used to perform the tests, and the results are compared to predictions using Euler buckling and modified empirical formulae. A knowledge of mechanical performance of materials is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a97.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a97.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a97.id, programme_id: $prog_mec.id).first_or_create!


    a98 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC302").first.id, code: "304").first_or_create!(name: "Crack propagation",
        name_abrv: "CRACKPROP", archived: true, in_drive: true, user_id: 2)
    at98 = ActivityTimetable.where(activity_id: a98.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 30, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a98.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a98.id).first_or_create!(criteria: "Understanding of Mechanics of materials",
        job_desc:"In this lab, students use direct-current potential-difference equipment to monitor the growth of a crack in a notched aluminium specimen. This data is then used to calculate the J-resistance of the material during fracture. A knowledge of fracture mechanics is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a98.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a98.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a98.id, programme_id: $prog_mec.id).first_or_create!


    a99 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC6430").first.id, code: "305").first_or_create!(name: "Mechanical Testing of Chicken Skin",
        name_abrv: "CHICKEN", archived: false, in_drive: true, user_id: 3)
    at99 = ActivityTimetable.where(activity_id: a99.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a99.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a99.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a99.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a99.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a99.id, programme_id: $prog_mec.id).first_or_create!


    a100 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER298").first.id, code: "306").first_or_create!(name: "Performance of Jet Engines",
        name_abrv: "JETLAB", archived: false, in_drive: true, user_id: 2)
    at100 = ActivityTimetable.where(activity_id: a100.id).first_or_create!(duration: 45, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_apl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 6, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a100.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a100.id).first_or_create!(criteria: "A knowledge of jet engine operation would be desirable, although a background in mechanical or aerospace engineering would be suitable as well.",
        job_desc:"In this lab, students operate a small Jet-Cat engine and take thermodynamic measurements so that they can perform calculations of engine efficeincy. Students also operate an engine simulator in order to perform similar calculations in a range of different conditions.", jobshop_desc: "GTA in MEE, the Diamond: Flight/Propulsion Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a100.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a100.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a100.id, programme_id: $prog_aero.id).first_or_create!


    a101 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER325").first.id, code: "307").first_or_create!(name: "Performance of wings",
        name_abrv: "Wing", archived: false, in_drive: true, user_id: 1)
    at101 = ActivityTimetable.where(activity_id: a101.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_apl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 15, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a101.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a101.id).first_or_create!(criteria: "An understanding of lift and drag calculations and the theory of wing sections would be helpful, but full training will be given on the use of the flight simulators.",
        job_desc:"This laboratory class uses the Merlin flight simulators to model the performance of an aircraft with different wing sections. Students perform a study of the effect of different wing profiles and aspect ratios on the performance of the given aircraft. A standard aircraft is provided for the students work, they then use equations given in their lecture course to select a different wing profile and a different aspect ratio, and model the lift and drag performance of each wing. Once they have the data for their wing sections, they will attend the lab and modify the provided aircraft model to test the performance of the wings. As GTA you will assist the students in the use of the Merlin flight simulators, enabling them to change the wings and also perform a limited test flight (straight and level at 1000ft and 100knots). Once the flight test is performed for each wing combination the students will take their data and analyse the results to determine if their predictions were correct. You may be required to assist students in the interpretation of their data, but there will be no marking associated with the laboratory class.", jobshop_desc: "GTA in MEE, the Diamond: Propulsion/Flight Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a101.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a101.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a101.id, programme_id: $prog_mec.id).first_or_create!


    a102 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC424").first.id, code: "307").first_or_create!(name: "Performance of wings",
        name_abrv: "Wing", archived: false, in_drive: true, user_id: 2)
    at102 = ActivityTimetable.where(activity_id: a102.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_apl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 15, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a102.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a102.id).first_or_create!(criteria: "An understanding of lift and drag calculations and the theory of wing sections would be helpful, but full training will be given on the use of the flight simulators.",
        job_desc:"This laboratory class uses the Merlin flight simulators to model the performance of an aircraft with different wing sections. Students perform a study of the effect of different wing profiles and aspect ratios on the performance of the given aircraft. A standard aircraft is provided for the students work, they then use equations given in their lecture course to select a different wing profile and a different aspect ratio, and model the lift and drag performance of each wing. Once they have the data for their wing sections, they will attend the lab and modify the provided aircraft model to test the performance of the wings. As GTA you will assist the students in the use of the Merlin flight simulators, enabling them to change the wings and also perform a limited test flight (straight and level at 1000ft and 100knots). Once the flight test is performed for each wing combination the students will take their data and analyse the results to determine if their predictions were correct. You may be required to assist students in the interpretation of their data, but there will be no marking associated with the laboratory class.", jobshop_desc: "GTA in MEE, the Diamond: Propulsion/Flight Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a102.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a102.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a102.id, programme_id: $prog_mec.id).first_or_create!


    a103 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC6424").first.id, code: "307").first_or_create!(name: "Performance of wings",
        name_abrv: "Wing", archived: false, in_drive: true, user_id: 1)
    at103 = ActivityTimetable.where(activity_id: a103.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_apl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 15, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a103.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a103.id).first_or_create!(criteria: "An understanding of lift and drag calculations and the theory of wing sections would be helpful, but full training will be given on the use of the flight simulators.",
        job_desc:"This laboratory class uses the Merlin flight simulators to model the performance of an aircraft with different wing sections. Students perform a study of the effect of different wing profiles and aspect ratios on the performance of the given aircraft. A standard aircraft is provided for the students work, they then use equations given in their lecture course to select a different wing profile and a different aspect ratio, and model the lift and drag performance of each wing. Once they have the data for their wing sections, they will attend the lab and modify the provided aircraft model to test the performance of the wings. As GTA you will assist the students in the use of the Merlin flight simulators, enabling them to change the wings and also perform a limited test flight (straight and level at 1000ft and 100knots). Once the flight test is performed for each wing combination the students will take their data and analyse the results to determine if their predictions were correct. You may be required to assist students in the interpretation of their data, but there will be no marking associated with the laboratory class.", jobshop_desc: "GTA in MEE, the Diamond: Propulsion/Flight Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a103.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a103.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a103.id, programme_id: $prog_mec.id).first_or_create!


    a104 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR136").first.id, code: "308").first_or_create!(name: "Torsion of Rods",
        name_abrv: "TORSION", archived: false, in_drive: true, user_id: 5)
    at104 = ActivityTimetable.where(activity_id: a104.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a104.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a104.id).first_or_create!(criteria: "A knowledge of mechanical performance of materials is therefore required.",
        job_desc:"In this lab students perform torsion tests on a series of rods made from different materials and having a range of lengths.From the data, students plot stress-strain curves and determine the mechanical properties of the rods, comparing the effect of rod length and material on the obtained data.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a104.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a104.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a104.id, programme_id: $prog_amrc.id).first_or_create!


    a105 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE207").first.id, code: "308").first_or_create!(name: "Torsion of Rods",
        name_abrv: "TORSION", archived: false, in_drive: true, user_id: 4)
    at105 = ActivityTimetable.where(activity_id: a105.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 210, takedown_time: 210, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a105.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a105.id).first_or_create!(criteria: "A knowledge of mechanical performance of materials is therefore required.",
        job_desc:"In this lab students perform torsion tests on a series of rods made from different materials and having a range of lengths.From the data, students plot stress-strain curves and determine the mechanical properties of the rods, comparing the effect of rod length and material on the obtained data.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a105.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a105.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a105.id, programme_id: $prog_gee.id).first_or_create!


    a106 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER302").first.id, code: "unknowncode1").first_or_create!(name: "UAV project",
        name_abrv: "AERBUILD", archived: false, in_drive: true, user_id: 5)
    at106 = ActivityTimetable.where(activity_id: a106.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "PUPS",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a106.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a106.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a106.id).first_or_create!(assess_weight: nil, notes: "During - 3 build reviews, post - 1 flight review, operations manual & financial report, poster presentation & self assessment",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_other.id, num_assess: 8)
    ActivityTech.where(activity_id: a106.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a106.id, programme_id: $prog_aero.id).first_or_create!


    a107 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER385").first.id, code: "309").first_or_create!(name: "UAV project",
        name_abrv: "AERBUILD", archived: true, in_drive: true, user_id: 4)
    at107 = ActivityTimetable.where(activity_id: a107.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a107.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a107.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a107.id).first_or_create!(assess_weight: nil, notes: "During, 2 reports and 1 presentation
    This is a semester long module with 3 assessment points in the course of the semester.",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 3)
    ActivityTech.where(activity_id: a107.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a107.id, programme_id: $prog_aero.id).first_or_create!


    a108 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC205").first.id, code: "310").first_or_create!(name: "Jet engine strip down",
        name_abrv: "JETSTRIP", archived: false, in_drive: true, user_id: 3)
    at108 = ActivityTimetable.where(activity_id: a108.id).first_or_create!(duration: 240, kit_prep_time: nil, min_week_num: 4, max_week_num: 6, pref_room_id: $room_sd.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a108.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a108.id).first_or_create!(criteria: "You should have: knowledge of materials, manufacturing methods, or thermodynamics of jet engines in order to help the students understand the operation of the engine.",
        job_desc:"In this lab, students dismantle a jet engine and analyse the parts, considering their operation and manufacturing methods. Mechanical skills are desirable, in order to help the students to deconstruct and reconstruct the engine. You should have: knowledge of materials, manufacturing methods, or thermodynamics of jet engines in order to help the students understand the operation of the engine.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a108.id).first_or_create!(assess_weight: nil, notes: "Not assessed by by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a108.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a108.id, programme_id: $prog_mec.id).first_or_create!


    a109 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER298").first.id, code: "311").first_or_create!(name: "Jet Engine Dismantling",
        name_abrv: "DISMANTLING", archived: false, in_drive: true, user_id: 1)
    at109 = ActivityTimetable.where(activity_id: a109.id).first_or_create!(duration: 240, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a109.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a109.id).first_or_create!(criteria: "A knowledge of materials, manufacturing methods, or thermodynamics of jet engines would also be desirable in order to help the students understand the operation of the engine.",
        job_desc:"In this lab, students dismantle a jet engine and analyse the parts, considering their operation and manufacturing methods. Mechanical skills are desirable, in order to help the students to deconstruct and reconstruct the engine.", jobshop_desc: "GTA in MEE, the Diamond: Flight/Propulsion Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a109.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a109.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a109.id, programme_id: $prog_aero.id).first_or_create!


    a110 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "312").first_or_create!(name: "JETLAB",
        name_abrv: "JETLAB", archived: false, in_drive: true, user_id: 3)
    at110 = ActivityTimetable.where(activity_id: a110.id).first_or_create!(duration: 30, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_apl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 6, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a110.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a110.id).first_or_create!(criteria: "#N/A",
        job_desc:"In this lab, students operate a small jet engine and take thermodynamic measurements so that they can perform calculations of engine efficiency.", jobshop_desc: "GTA in MEE, the Diamond: Flight/Propulsion Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a110.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a110.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a110.id, programme_id: $prog_aero.id).first_or_create!


    a111 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR136").first.id, code: "401").first_or_create!(name: "Bernoulli Principle",
        name_abrv: "BERNOULLI", archived: false, in_drive: true, user_id: 2)
    at111 = ActivityTimetable.where(activity_id: a111.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 11, max_week_num: 11, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a111.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a111.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a111.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a111.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a111.id, programme_id: $prog_amrc.id).first_or_create!


    a112 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR197").first.id, code: "401").first_or_create!(name: "Bernoulli Principle",
        name_abrv: "BERNOULLI", archived: false, in_drive: false, user_id: 5)
    at112 = ActivityTimetable.where(activity_id: a112.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 8, max_week_num: 8, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a112.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ybncc97l", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a112.id).first_or_create!(criteria: "Basic understanding of the Bernoulli equation applied to civil engineering",
        job_desc:"Use a Venturi meter to see how pressure head drops by dynamic head increases. The Cd of the Venturi meter can be found.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a112.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a112.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a112.id, programme_id: $prog_amrc.id).first_or_create!


    a113 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV104").first.id, code: "401").first_or_create!(name: "Bernoulli Principle",
        name_abrv: "BERNOULLI", archived: false, in_drive: true, user_id: 1)
    at113 = ActivityTimetable.where(activity_id: a113.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 8, max_week_num: 9, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "For all of civ104: 
    The plan next year is complete hydrostatic forces by the end of week 5, buoyance and metacenters by the end of week 6, any Bernoulli related lectures by end of week 8, we will start the momentum lectures in week 9, but will not have completed these by week 10, but the students have a field trip in week 11, so I think doing the impact of jets lab in week 10 shoul;d be fine.",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a113.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ybmcc5xt", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a113.id).first_or_create!(criteria: "Basic understanding of the Bernoulli equation applied to civil engineering",
        job_desc:"Use a Venturi meter to see how pressure head drops by dynamic head increases. The Cd of the Venturi meter can be found.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a113.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a113.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a113.id, programme_id: $prog_civ.id).first_or_create!


    a114 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "401").first_or_create!(name: "Bernoulli Principle",
        name_abrv: "BERNOULLI", archived: false, in_drive: true, user_id: 4)
    at114 = ActivityTimetable.where(activity_id: a114.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 5, max_week_num: 5, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a114.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a114.id).first_or_create!(criteria: "Basic understanding of the Bernoulli equation applied to civil engineering",
        job_desc:"Use a Venturi meter to see how pressure head drops by dynamic head increases. The Cd of the Venturi meter can be found.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a114.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a114.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a114.id, programme_id: $prog_gee.id).first_or_create!


    a115 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "402").first_or_create!(name: "Calibration of a Wind Tunnel",
        name_abrv: "WINDTUNNEL", archived: false, in_drive: true, user_id: 4)
    at115 = ActivityTimetable.where(activity_id: a115.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 3, max_week_num: 3, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a115.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/yasyk22s", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a115.id).first_or_create!(criteria: "Understanding of Bernoulli principle and boundary layer theory.",
        job_desc:"Students traverses a pitot tube across the working section of a wind tunnel and, with t digital pressure gauge, determine the boundary layer thickness.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a115.id).first_or_create!(assess_weight: nil, notes: "Post lab is handeled by the department - integrated into lecture series",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a115.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a115.id, programme_id: $prog_aero.id).first_or_create!


    a116 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR197").first.id, code: "402").first_or_create!(name: "Calibration of a Wind Tunnel",
        name_abrv: "WINDTUNNEL", archived: false, in_drive: false, user_id: 2)
    at116 = ActivityTimetable.where(activity_id: a116.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a116.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a116.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a116.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a116.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a116.id, programme_id: $prog_amrc.id).first_or_create!


    a117 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "402").first_or_create!(name: "Calibration of a Wind Tunnel",
        name_abrv: "WINDTUNNEL", archived: false, in_drive: true, user_id: 3)
    at117 = ActivityTimetable.where(activity_id: a117.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 3, max_week_num: 3, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a117.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ycwo32oq", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a117.id).first_or_create!(criteria: "Understanding of Bernoulli principle and boundary layer theory.",
        job_desc:"Students traverses a pitot tube across the working section of a wind tunnel and, with t digital pressure gauge, determine the boundary layer thickness.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a117.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a117.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a117.id, programme_id: $prog_mec.id).first_or_create!


    a118 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV4750").first.id, code: "403").first_or_create!(name: "Coastal Engineering",
        name_abrv: "COASTAL", archived: false, in_drive: true, user_id: 5)
    at118 = ActivityTimetable.where(activity_id: a118.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 90, takedown_time: 90, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a118.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/zrtczgr", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a118.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a118.id).first_or_create!(assess_weight: nil, notes: "Not our teaching - belongs to department",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a118.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a118.id, programme_id: $prog_civ.id).first_or_create!


    a119 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE204").first.id, code: "404").first_or_create!(name: "Custard Run",
        name_abrv: "CUSTARD", archived: true, in_drive: true, user_id: 4)
    at119 = ActivityTimetable.where(activity_id: a119.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 12, max_week_num: 12, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 240, takedown_time: 360, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a119.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ydy8uc9z", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a119.id).first_or_create!(criteria: "Manual handling training.",
        job_desc:"Helping with the setup and running of the session. Students will be walking quickly over a Non-newtonian cornflour mixture in the lab. Students will need guiding across the pool. A lot of mixing and cleanup help will also be required.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a119.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a119.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a119.id, programme_id: $prog_gee.id).first_or_create!


    a120 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC208").first.id, code: "unknowncode2").first_or_create!(name: "External flow",
        name_abrv: "EXTFLOW", archived: true, in_drive: true, user_id: 1)
    at120 = ActivityTimetable.where(activity_id: a120.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a120.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a120.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a120.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a120.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a120.id, programme_id: $prog_ae.id).first_or_create!


    a121 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6733").first.id, code: "405").first_or_create!(name: "Darcy's Law",
        name_abrv: "DARCYSLAW", archived: true, in_drive: true, user_id: 1)
    at121 = ActivityTimetable.where(activity_id: a121.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a121.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ycl44ful", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a121.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and Darcy's law in porous media flow",
        job_desc:"A home built rig to determine the pressure loss in flow through porous media.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a121.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a121.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a121.id, programme_id: $prog_civ.id).first_or_create!


    a122 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "405").first_or_create!(name: "Darcy's Law",
        name_abrv: "DARCYSLAW", archived: false, in_drive: true, user_id: 1)
    at122 = ActivityTimetable.where(activity_id: a122.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: 5, max_week_num: 5, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a122.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/hm7noqs", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a122.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and Darcy's law in porous media flow",
        job_desc:"A home built rig to determine the pressure loss in flow through porous media.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a122.id).first_or_create!(assess_weight: nil, notes: "Results are taken from the lab into a tutorial",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_other.id, num_assess: 2)
    ActivityTech.where(activity_id: a122.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a122.id, programme_id: $prog_gee.id).first_or_create!


    a123 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR197").first.id, code: "413").first_or_create!(name: "First Law Pumps and Turbines",
        name_abrv: "1STLAWPUMP", archived: false, in_drive: true, user_id: 2)
    at123 = ActivityTimetable.where(activity_id: a123.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: 9, max_week_num: 9, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a123.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y9hkvnrx", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a123.id).first_or_create!(criteria: "An understanding of first principles, energy usage and efficiency. Knowledge of characteristic curves would be beneficial.",
        job_desc:"Computer controlled pump and turbine units are experimented with to determine the ratio of energy conversation between hydraulic and mechanical/electrical.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a123.id).first_or_create!(assess_weight: 5.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a123.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a123.id, programme_id: $prog_amrc.id).first_or_create!


    a124 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE204").first.id, code: "406").first_or_create!(name: "External flow",
        name_abrv: "EXTFLOW", archived: false, in_drive: true, user_id: 2)
    at124 = ActivityTimetable.where(activity_id: a124.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 4, max_week_num: 4, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Can be a self book, no need to timetablable",
        capacity: 16, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a124.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/go6v2fl", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a124.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a124.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a124.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a124.id, programme_id: $prog_gee.id).first_or_create!


    a125 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC208").first.id, code: "406").first_or_create!(name: "External flow",
        name_abrv: "EXTFLOW", archived: false, in_drive: true, user_id: 2)
    at125 = ActivityTimetable.where(activity_id: a125.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a125.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/yda4d9oa", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a125.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a125.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a125.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a125.id, programme_id: $prog_mec.id).first_or_create!


    a126 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV104").first.id, code: "407").first_or_create!(name: "Floating Stability",
        name_abrv: "FLOATSTAB", archived: false, in_drive: true, user_id: 3)
    at126 = ActivityTimetable.where(activity_id: a126.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 6, max_week_num: 8, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Last year this was run as 3 hours with Forces on Submerged surface. Next run do as a separate event, each at 1.5 hours.",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a126.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y7aue72l", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a126.id).first_or_create!(criteria: "Understanding of metacenter from a civil engineering perspective.",
        job_desc:"The variables that dictate the metacentre of a floating pontoon are determined.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a126.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a126.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a126.id, programme_id: $prog_civ.id).first_or_create!


    a127 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CPE170").first.id, code: "408").first_or_create!(name: "Flow Measurement",
        name_abrv: "FLOWMEAS", archived: false, in_drive: true, user_id: 5)
    at127 = ActivityTimetable.where(activity_id: a127.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 3, max_week_num: 4, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a127.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/yab4zwks", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a127.id).first_or_create!(criteria: "Understanding of uncertantity and error calculation would be useful.",
        job_desc:"A variety of flow measurement devices (ventrui meter, orifice plate, rotameterâ¦etc) are compared for their ability to work as accurate instrumentation in fluid flow systems.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a127.id).first_or_create!(assess_weight: nil, notes: "Formative",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a127.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a127.id, programme_id: $prog_cbe.id).first_or_create!


    a128 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "409").first_or_create!(name: "Flow through Valves",
        name_abrv: "VALVES", archived: false, in_drive: false, user_id: 1)
    at128 = ActivityTimetable.where(activity_id: a128.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a128.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/yd9boque", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a128.id).first_or_create!(criteria: "A comparison of different flow measurement techniques using hydrodynamic theory",
        job_desc:"Students do a quick lab to determine the relationship between flow rate and loss coefficient for gate or angle seat valves. This is done by altering the opening of the valve, and measuring the flow rate and pressure drop.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a128.id).first_or_create!(assess_weight: nil, notes: "Post lab is handeled by the department - integrated into lecture series",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a128.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a128.id, programme_id: $prog_aero.id).first_or_create!


    a129 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR222").first.id, code: "409").first_or_create!(name: "Flow through Valves",
        name_abrv: "VALVES", archived: false, in_drive: true, user_id: 2)
    at129 = ActivityTimetable.where(activity_id: a129.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 8, max_week_num: 12, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Find a time when the students are in for another lab, as it is a long way to come for just an hour",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a129.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a129.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a129.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a129.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a129.id, programme_id: $prog_amrc.id).first_or_create!


    a130 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "409").first_or_create!(name: "Flow through Valves",
        name_abrv: "VALVES", archived: false, in_drive: true, user_id: 3)
    at130 = ActivityTimetable.where(activity_id: a130.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: 10, max_week_num: 10, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 90, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a130.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/hdn3gkn", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a130.id).first_or_create!(criteria: "Understanding of uncertantity and error calculation would be useful.",
        job_desc:"A variety of flow measurement devices (ventrui meter, orifice plate, rotameterâ¦etc) are compared for their ability to work as accurate instrumentation in fluid flow systems.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a130.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a130.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a130.id, programme_id: $prog_gee.id).first_or_create!


    a131 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR197").first.id, code: "410").first_or_create!(name: "Forces on a Submerged Surface",
        name_abrv: "SUBSURFACE", archived: false, in_drive: true, user_id: 2)
    at131 = ActivityTimetable.where(activity_id: a131.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Anywhere with a water supply",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a131.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a131.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a131.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a131.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a131.id, programme_id: $prog_amrc.id).first_or_create!


    a132 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV104").first.id, code: "410").first_or_create!(name: "Forces on a Submerged Surface",
        name_abrv: "SUBSURFACE", archived: false, in_drive: true, user_id: 5)
    at132 = ActivityTimetable.where(activity_id: a132.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 6, max_week_num: 8, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Last year this was run as 3 hours with Floating stabiltity. Next run do as a separate event, each at 1.5 hours.",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a132.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y75qz6ys", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a132.id).first_or_create!(criteria: "Understanding of hydrostatics and forces on submerged surfaces. Understanding of bending moments.",
        job_desc:"Students use a Â¼ torroid to determine the pressure and hence force acting on a submerged surface.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a132.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a132.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a132.id, programme_id: $prog_civ.id).first_or_create!


    a133 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6733").first.id, code: "410").first_or_create!(name: "Forces on a Submerged Surface",
        name_abrv: "SUBSURFACE", archived: true, in_drive: true, user_id: 3)
    at133 = ActivityTimetable.where(activity_id: a133.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: 1, max_week_num: 1, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 90, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a133.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ybr6ggo7", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a133.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a133.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a133.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a133.id, programme_id: $prog_civ.id).first_or_create!


    a134 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "410").first_or_create!(name: "Forces on a Submerged Surface",
        name_abrv: "SUBSURFACE", archived: false, in_drive: true, user_id: 3)
    at134 = ActivityTimetable.where(activity_id: a134.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 3, max_week_num: 4, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 90, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a134.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ya6qpnzf", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a134.id).first_or_create!(criteria: "Understanding of hydrostatics and forces on submerged surfaces. Understanding of bending moments.",
        job_desc:"Students use a Â¼ torroid to determine the pressure and hence force acting on a submerged surface.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a134.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a134.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a134.id, programme_id: $prog_gee.id).first_or_create!


    a135 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC208").first.id, code: "410").first_or_create!(name: "Forces on a Submerged Surface",
        name_abrv: "SUBSURFACE", archived: false, in_drive: false, user_id: 5)
    at135 = ActivityTimetable.where(activity_id: a135.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a135.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y6xyg4dt", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a135.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a135.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a135.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a135.id, programme_id: $prog_mec.id).first_or_create!


    a136 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV104").first.id, code: "411").first_or_create!(name: "Hydrostatics carousel",
        name_abrv: "HYDROSTAT", archived: false, in_drive: true, user_id: 4)
    at136 = ActivityTimetable.where(activity_id: a136.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 4, max_week_num: 5, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 240, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a136.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/j43azdg", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a136.id).first_or_create!(criteria: "Basic understanding of hydrostatics principles",
        job_desc:"A range of quick experiments to test hydrostatic principles. These are Pascalâs vase, Hareâs tube, calibration of a pressure gauge and using hydrometers.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a136.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a136.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a136.id, programme_id: $prog_civ.id).first_or_create!


    a137 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6733").first.id, code: "411").first_or_create!(name: "Hydrostatics carousel",
        name_abrv: "HYDROSTAT", archived: false, in_drive: false, user_id: 4)
    at137 = ActivityTimetable.where(activity_id: a137.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 1, max_week_num: 1, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a137.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y6c5bbz6", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a137.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a137.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a137.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a137.id, programme_id: $prog_civ.id).first_or_create!


    a138 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "411").first_or_create!(name: "Hydrostatics carousel",
        name_abrv: "HYDROSTAT", archived: false, in_drive: true, user_id: 5)
    at138 = ActivityTimetable.where(activity_id: a138.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 1, max_week_num: 2, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 240, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a138.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/j43azdg", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a138.id).first_or_create!(criteria: "Basic understanding of hydrostatics principles",
        job_desc:"A range of quick experiments to test hydrostatic principles. These are Pascalâs vase, Hareâs tube, calibration of a pressure gauge and using hydrometers.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a138.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a138.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a138.id, programme_id: $prog_gee.id).first_or_create!


    a139 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV104").first.id, code: "412").first_or_create!(name: "Impact of Jets",
        name_abrv: "IMPACTJETS", archived: false, in_drive: true, user_id: 1)
    at139 = ActivityTimetable.where(activity_id: a139.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 10, max_week_num: 11, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a139.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/yabu3gps", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a139.id).first_or_create!(criteria: "Understanding of conservation of momentum",
        job_desc:"A jet of varying diameter is fired on various shaped vanes. The force the vane is exposed to, based on masses on a platform, is recorded. This is compared to the theory of conservation of momentum. 
    Marking is done after the lab. Students submit a short (1 page) report which is marked on a 5 point scale using turn-it-in.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a139.id).first_or_create!(assess_weight: nil, notes: "One of the lab activites will be used as part of the CIV104 exam",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a139.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a139.id, programme_id: $prog_civ.id).first_or_create!


    a140 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "412").first_or_create!(name: "Impact of Jets",
        name_abrv: "IMPACTJETS", archived: false, in_drive: true, user_id: 5)
    at140 = ActivityTimetable.where(activity_id: a140.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 4, max_week_num: 4, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a140.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y7pzg2ut", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a140.id).first_or_create!(criteria: "Understanding of conservation of momentum",
        job_desc:"A jet of varying diameter is fired on various shaped vanes. The force the vane is exposed to, based on masses on a platform, is recorded. This is compared to the theory of conservation of momentum. 
    Marking is done after the lab. Students submit a short (1 page) report which is marked on a 5 point scale using turn-it-in.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a140.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a140.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a140.id, programme_id: $prog_gee.id).first_or_create!


    a141 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC208").first.id, code: "412").first_or_create!(name: "Impact of Jets",
        name_abrv: "IMPACTJETS", archived: true, in_drive: true, user_id: 4)
    at141 = ActivityTimetable.where(activity_id: a141.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a141.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y9qwwhzl", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a141.id).first_or_create!(criteria: "Understanding of conservation of momentum",
        job_desc:"A jet of varying diameter is fired on various shaped vanes. The force the vane is exposed to, based on masses on a platform, is recorded. This is compared to the theory of conservation of momentum. 
    Marking is done after the lab. Students submit a short (1 page) report which is marked on a 5 point scale using turn-it-in.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a141.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a141.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a141.id, programme_id: $prog_ae.id).first_or_create!


    a142 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC208").first.id, code: "412").first_or_create!(name: "Impact of Jets",
        name_abrv: "IMPACTJETS", archived: false, in_drive: true, user_id: 2)
    at142 = ActivityTimetable.where(activity_id: a142.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a142.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y7wjrgm4", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a142.id).first_or_create!(criteria: "Understanding of conservation of momentum",
        job_desc:"A jet of varying diameter is fired on various shaped vanes. The force the vane is exposed to, based on masses on a platform, is recorded. This is compared to the theory of conservation of momentum. 
    Marking is done after the lab. Students submit a short (1 page) report which is marked on a 5 point scale using turn-it-in.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a142.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a142.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a142.id, programme_id: $prog_mec.id).first_or_create!


    a143 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR222").first.id, code: "419").first_or_create!(name: "Major and Minor Losses",
        name_abrv: "MAJORMINOR", archived: false, in_drive: true, user_id: 2)
    at143 = ActivityTimetable.where(activity_id: a143.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a143.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a143.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a143.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a143.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a143.id, programme_id: $prog_amrc.id).first_or_create!


    a144 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "419").first_or_create!(name: "Major and Minor Losses",
        name_abrv: "MAJORMINOR", archived: false, in_drive: true, user_id: 5)
    at144 = ActivityTimetable.where(activity_id: a144.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 7, max_week_num: 7, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a144.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/z4kbm44", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a144.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and Moody diagram theory.",
        job_desc:"The speed of water is varied though a variety of pipe diameters and roughness. The pressure loss is also measured, allowing the moody diagram to be recreated and compared to one previously produced.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a144.id).first_or_create!(assess_weight: 5.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a144.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a144.id, programme_id: $prog_gee.id).first_or_create!


    a145 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "413").first_or_create!(name: "First Law Pumps and Turbines",
        name_abrv: "1STLAWPUMP", archived: false, in_drive: true, user_id: 1)
    at145 = ActivityTimetable.where(activity_id: a145.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 2, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 120, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a145.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/npbx2ko", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a145.id).first_or_create!(criteria: "An understanding of first principles, energy usage and efficiency. Knowledge of characteristic curves would be beneficial.",
        job_desc:"Computer controlled pump and turbine units are experimented with to determine the ratio of energy conversation between hydraulic and mechanical/electrical.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a145.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a145.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a145.id, programme_id: $prog_mec.id).first_or_create!


    a146 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC162").first.id, code: "413").first_or_create!(name: "First Law Pumps and Turbines",
        name_abrv: "1STLAWPUMP", archived: false, in_drive: false, user_id: 3)
    at146 = ActivityTimetable.where(activity_id: a146.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 2, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a146.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ydd9x9tm", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a146.id).first_or_create!(criteria: "An understanding of first principles, energy usage and efficiency. Knowledge of characteristic curves would be beneficial.",
        job_desc:"Computer controlled pump and turbine units are experimented with to determine the ratio of energy conversation between hydraulic and mechanical/electrical.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a146.id).first_or_create!(assess_weight: nil, notes: "I don't know who runs this module - it is an odd one for arch eng students",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a146.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a146.id, programme_id: $prog_ae.id).first_or_create!


    a147 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode3").first_or_create!(name: "Measurement Lab",
        name_abrv: "MEASUREMENT", archived: false, in_drive: true, user_id: 3)
    at147 = ActivityTimetable.where(activity_id: a147.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: 2, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a147.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/pnm2bq4", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a147.id).first_or_create!(criteria: "Basic understanding of hydrodynamics, flow measurement techniques and error/uncertainty",
        job_desc:"An introductory lab for first year undergraduate students. Helping students to use the hydraulic benches for the first time and to understand the concepts of error and uncertainty.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a147.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a147.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)


    a148 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6733").first.id, code: "415").first_or_create!(name: "Measurement lab plus",
        name_abrv: "DATAPLUS", archived: false, in_drive: false, user_id: 3)
    at148 = ActivityTimetable.where(activity_id: a148.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 2, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a148.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ya8awfxx", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a148.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a148.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a148.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a148.id, programme_id: $prog_civ.id).first_or_create!


    a149 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2300").first.id, code: "416").first_or_create!(name: "Minor Losses",
        name_abrv: "MINORLOSS", archived: false, in_drive: false, user_id: 1)
    at149 = ActivityTimetable.where(activity_id: a149.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 4, max_week_num: 4, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a149.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/nojav7n", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a149.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and frictional losses in pipe fittings.",
        job_desc:"The hydraulic bench supplied water to a range of pipe fittings. The flow rate can be altered and measured, and water manometers record the head loss. The results are used to calculate the loss coefficients for the fittings.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a149.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a149.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a149.id, programme_id: $prog_civ.id).first_or_create!


    a150 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6733").first.id, code: "416").first_or_create!(name: "Minor Losses",
        name_abrv: "MINORLOSS", archived: false, in_drive: false, user_id: 3)
    at150 = ActivityTimetable.where(activity_id: a150.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 5, max_week_num: 5, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a150.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/yxswpben", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a150.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a150.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a150.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a150.id, programme_id: $prog_civ.id).first_or_create!


    a151 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "416").first_or_create!(name: "Minor Losses",
        name_abrv: "MINORLOSS", archived: false, in_drive: true, user_id: 3)
    at151 = ActivityTimetable.where(activity_id: a151.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 11, max_week_num: 11, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a151.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ovyq7rl", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a151.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and frictional losses in pipe fittings.",
        job_desc:"The hydraulic bench supplied water to a range of pipe fittings. The flow rate can be altered and measured, and water manometers record the head loss. The results are used to calculate the loss coefficients for the fittings.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a151.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a151.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a151.id, programme_id: $prog_mec.id).first_or_create!


    a152 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC162").first.id, code: "416").first_or_create!(name: "Minor Losses",
        name_abrv: "MINORLOSS", archived: false, in_drive: true, user_id: 5)
    at152 = ActivityTimetable.where(activity_id: a152.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 11, max_week_num: 11, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a152.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ybo5vgmz", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a152.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and frictional losses in pipe fittings.",
        job_desc:"The hydraulic bench supplied water to a range of pipe fittings. The flow rate can be altered and measured, and water manometers record the head loss. The results are used to calculate the loss coefficients for the fittings.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a152.id).first_or_create!(assess_weight: nil, notes: "I don't know who runs this module - it is an odd one for arch eng students",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a152.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a152.id, programme_id: $prog_ae.id).first_or_create!


    a153 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2300").first.id, code: "417").first_or_create!(name: "Network of Pipes",
        name_abrv: "NETPIPES", archived: false, in_drive: false, user_id: 2)
    at153 = ActivityTimetable.where(activity_id: a153.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 240, takedown_time: 120, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a153.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/yby2as9u", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a153.id).first_or_create!(criteria: "Undertanding frictional losses in piping networks and hardy cross method for civil engineering students",
        job_desc:"Students are supplied with a network of pipes, in which the network layout and diameters of pipes can be altered. The flow through two outlet ports and pressure drop across all pipes can be recorded, and compared to the hardy cross method to predict the results.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a153.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a153.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a153.id, programme_id: $prog_civ.id).first_or_create!


    a154 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2300").first.id, code: "418").first_or_create!(name: "Open Channel Self Teach Lab",
        name_abrv: "FLUME", archived: false, in_drive: true, user_id: 3)
    at154 = ActivityTimetable.where(activity_id: a154.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 6, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a154.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/oby5tq9", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a154.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a154.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a154.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a154.id, programme_id: $prog_civ.id).first_or_create!


    a156 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR136").first.id, code: "419").first_or_create!(name: "Pressure Loss in Pipes",
        name_abrv: "PIPELOSS", archived: false, in_drive: false, user_id: 5)
    at156 = ActivityTimetable.where(activity_id: a156.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 11, max_week_num: 11, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a156.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y85r57gr", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a156.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and Moody diagram theory.",
        job_desc:"The speed of water is varied though a variety of pipe diameters and roughness. The pressure loss is also measured, allowing the moody diagram to be recreated and compared to one previously produced.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a156.id).first_or_create!(assess_weight: 5.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a156.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a156.id, programme_id: $prog_amrc.id).first_or_create!


    a157 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2300").first.id, code: "419").first_or_create!(name: "Pressure Loss in Pipes",
        name_abrv: "PIPELOSS", archived: false, in_drive: true, user_id: 4)
    at157 = ActivityTimetable.where(activity_id: a157.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a157.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ycc92c93", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a157.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and Moody diagram theory.",
        job_desc:"The speed of water is varied though a variety of pipe diameters and roughness. The pressure loss is also measured, allowing the moody diagram to be recreated and compared to one previously produced.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a157.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a157.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a157.id, programme_id: $prog_civ.id).first_or_create!


    a158 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6733").first.id, code: "419").first_or_create!(name: "Pressure Loss in Pipes",
        name_abrv: "PIPELOSS", archived: false, in_drive: true, user_id: 5)
    at158 = ActivityTimetable.where(activity_id: a158.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 4, max_week_num: 4, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a158.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ya868p4e", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a158.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and Moody diagram theory.",
        job_desc:"The speed of water is varied though a variety of pipe diameters and roughness. The pressure loss is also measured, allowing the moody diagram to be recreated and compared to one previously produced.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a158.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a158.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a158.id, programme_id: $prog_civ.id).first_or_create!


    a159 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CPE170").first.id, code: "419").first_or_create!(name: "Pressure Loss in Pipes",
        name_abrv: "PIPELOSS", archived: false, in_drive: true, user_id: 1)
    at159 = ActivityTimetable.where(activity_id: a159.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 5, max_week_num: 6, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a159.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ya7weqcq", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a159.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and Moody diagram theory.",
        job_desc:"The speed of water is varied though a variety of pipe diameters and roughness. The pressure loss is also measured, allowing the moody diagram to be recreated and compared to one previously produced.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a159.id).first_or_create!(assess_weight: nil, notes: "Formative",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a159.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a159.id, programme_id: $prog_cbe.id).first_or_create!


    a160 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "419").first_or_create!(name: "Pressure Loss in Pipes",
        name_abrv: "PIPELOSS", archived: false, in_drive: true, user_id: 3)
    at160 = ActivityTimetable.where(activity_id: a160.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 10, max_week_num: 10, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a160.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y85b9e39", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a160.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and Moody diagram theory.",
        job_desc:"The speed of water is varied though a variety of pipe diameters and roughness. The pressure loss is also measured, allowing the moody diagram to be recreated and compared to one previously produced.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a160.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a160.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a160.id, programme_id: $prog_mec.id).first_or_create!


    a161 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC162").first.id, code: "419").first_or_create!(name: "Pressure Loss in Pipes",
        name_abrv: "PIPELOSS", archived: false, in_drive: true, user_id: 2)
    at161 = ActivityTimetable.where(activity_id: a161.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 10, max_week_num: 10, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a161.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/gubsfc3", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a161.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and Moody diagram theory.",
        job_desc:"The speed of water is varied though a variety of pipe diameters and roughness. The pressure loss is also measured, allowing the moody diagram to be recreated and compared to one previously produced.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a161.id).first_or_create!(assess_weight: nil, notes: "I don't know who runs this module - it is an odd one for arch eng students",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_p2p.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a161.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a161.id, programme_id: $prog_ae.id).first_or_create!


    a162 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2300").first.id, code: "420").first_or_create!(name: "Pumps and Turbines",
        name_abrv: "PUMPSTURB", archived: false, in_drive: true, user_id: 2)
    at162 = ActivityTimetable.where(activity_id: a162.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a162.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y8mlxuvb", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a162.id).first_or_create!(criteria: "Understanding of thermodynamics of fluidic/mechanical power conversion",
        job_desc:"Computer controlled pump and turbine units are experimented with to determine the ratio of energy conversation between hydraulic and mechanical/electrical. Marking is done after the lab. Students submit a short (2 page) report which is marked on a 5 point scale using turn-it-in.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a162.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a162.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a162.id, programme_id: $prog_civ.id).first_or_create!


    a163 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE204").first.id, code: "420").first_or_create!(name: "Pumps and Turbines",
        name_abrv: "PUMPSTURB", archived: false, in_drive: true, user_id: 3)
    at163 = ActivityTimetable.where(activity_id: a163.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 3, max_week_num: 3, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a163.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y2vsz6zu", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a163.id).first_or_create!(criteria: "Understanding of thermodynamics of fluidic/mechanical power conversion",
        job_desc:"Computer controlled pump and turbine units are experimented with to determine the ratio of energy conversation between hydraulic and mechanical/electrical. Marking is done after the lab. Students submit a short (2 page) report which is marked on a 5 point scale using turn-it-in.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a163.id).first_or_create!(assess_weight: 5.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a163.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a163.id, programme_id: $prog_gee.id).first_or_create!


    a164 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2300").first.id, code: "421").first_or_create!(name: "Pumps and Turbines 2",
        name_abrv: "PUMPSTURB2", archived: false, in_drive: true, user_id: 4)
    at164 = ActivityTimetable.where(activity_id: a164.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a164.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y7pr2vq9", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a164.id).first_or_create!(criteria: "Understanding of thermodynamics of fluidic/mechanical power conversion",
        job_desc:"Computer controlled pump and turbine units are experimented with to determine the ratio of energy conversation between hydraulic and mechanical/electrical. Marking is done after the lab. Students submit a short (2 page) report which is marked on a 5 point scale using turn-it-in.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a164.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a164.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a164.id, programme_id: $prog_civ.id).first_or_create!


    a165 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "423").first_or_create!(name: "The Osborne Reynolds Experiment",
        name_abrv: "REYNOLDS", archived: false, in_drive: true, user_id: 4)
    at165 = ActivityTimetable.where(activity_id: a165.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 2, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 240, takedown_time: 240, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a165.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y7lbg5la", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a165.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and laminar and turbulent flow theory",
        job_desc:"Students inject dye into a clear tube of flowing water. The speed of the water can be varied to generate different structures, to visualise laminar, turbulent and transitional flow.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a165.id).first_or_create!(assess_weight: nil, notes: "Post lab is handeled by the department - integrated into lecture series",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a165.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a165.id, programme_id: $prog_aero.id).first_or_create!


    a167 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR197").first.id, code: "423").first_or_create!(name: "The Osborne Reynolds Experiment",
        name_abrv: "REYNOLDS", archived: false, in_drive: true, user_id: 1)
    at167 = ActivityTimetable.where(activity_id: a167.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 8, max_week_num: 8, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a167.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a167.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a167.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a167.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a167.id, programme_id: $prog_amrc.id).first_or_create!


    a168 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR227").first.id, code: "423").first_or_create!(name: "The Osborne Reynolds Experiment",
        name_abrv: "REYNOLDS", archived: false, in_drive: true, user_id: 4)
    at168 = ActivityTimetable.where(activity_id: a168.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 9, max_week_num: 9, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a168.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y9kvtza6", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a168.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a168.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a168.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a168.id, programme_id: $prog_amrc.id).first_or_create!


    a169 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6733").first.id, code: "423").first_or_create!(name: "The Osborne Reynolds Experiment",
        name_abrv: "REYNOLDS", archived: false, in_drive: false, user_id: 4)
    at169 = ActivityTimetable.where(activity_id: a169.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 3, max_week_num: 3, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 240, takedown_time: 240, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a169.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y4agrwyb", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a169.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and laminar and turbulent flow theory",
        job_desc:"Students inject dye into a clear tube of flowing water. The speed of the water can be varied to generate different structures, to visualise laminar, turbulent and transitional flow.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a169.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a169.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a169.id, programme_id: $prog_civ.id).first_or_create!


    a170 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CPE170").first.id, code: "423").first_or_create!(name: "The Osborne Reynolds Experiment",
        name_abrv: "REYNOLDS", archived: false, in_drive: true, user_id: 1)
    at170 = ActivityTimetable.where(activity_id: a170.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 2, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 240, takedown_time: 240, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a170.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/yctnkhpt", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a170.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and laminar and turbulent flow theory",
        job_desc:"Students inject dye into a clear tube of flowing water. The speed of the water can be varied to generate different structures, to visualise laminar, turbulent and transitional flow.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a170.id).first_or_create!(assess_weight: nil, notes: "Formative",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a170.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a170.id, programme_id: $prog_cbe.id).first_or_create!


    a171 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "423").first_or_create!(name: "The Osborne Reynolds Experiment",
        name_abrv: "REYNOLDS", archived: false, in_drive: true, user_id: 2)
    at171 = ActivityTimetable.where(activity_id: a171.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 240, takedown_time: 240, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a171.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/zc256mz", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a171.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and laminar and turbulent flow theory",
        job_desc:"Students inject dye into a clear tube of flowing water. The speed of the water can be varied to generate different structures, to visualise laminar, turbulent and transitional flow.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a171.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a171.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a171.id, programme_id: $prog_gee.id).first_or_create!


    a172 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "423").first_or_create!(name: "The Osborne Reynolds Experiment",
        name_abrv: "REYNOLDS", archived: false, in_drive: true, user_id: 4)
    at172 = ActivityTimetable.where(activity_id: a172.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 9, max_week_num: 9, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a172.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/ybcx9rvy", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a172.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and laminar and turbulent flow theory",
        job_desc:"Students inject dye into a clear tube of flowing water. The speed of the water can be varied to generate different structures, to visualise laminar, turbulent and transitional flow.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a172.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a172.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a172.id, programme_id: $prog_mec.id).first_or_create!


    a173 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC162").first.id, code: "423").first_or_create!(name: "The Osborne Reynolds Experiment",
        name_abrv: "REYNOLDS", archived: false, in_drive: true, user_id: 1)
    at173 = ActivityTimetable.where(activity_id: a173.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 9, max_week_num: 9, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 240, takedown_time: 240, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a173.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/zhk62pr", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a173.id).first_or_create!(criteria: "Understanding of basic hydrodynamics and laminar and turbulent flow theory",
        job_desc:"Students inject dye into a clear tube of flowing water. The speed of the water can be varied to generate different structures, to visualise laminar, turbulent and transitional flow.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a173.id).first_or_create!(assess_weight: nil, notes: "I don't know who runs this module - it is an odd one for arch eng students",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_p2p.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a173.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a173.id, programme_id: $prog_ae.id).first_or_create!


    a174 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode4").first_or_create!(name: "The Venturi Effect",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at174 = ActivityTimetable.where(activity_id: a174.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a174.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a174.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a174.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a174.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a174.id, programme_id: $prog_fy.id).first_or_create!


    a175 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "401").first_or_create!(name: "The Venturi Effect",
        name_abrv: "VENTURI", archived: false, in_drive: true, user_id: 3)
    at175 = ActivityTimetable.where(activity_id: a175.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 4, max_week_num: 4, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a175.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/gktozrd", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a175.id).first_or_create!(criteria: "Basic understanding of the Bernoulli equation applied to aero engineering",
        job_desc:"Use a Venturi meter to see the reduction of static pressure be compensated by the increase in dynamic pressure. Stagnation pressure drops slightly due to friction.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a175.id).first_or_create!(assess_weight: nil, notes: "Post lab is handeled by the department - integrated into lecture series",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a175.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a175.id, programme_id: $prog_aero.id).first_or_create!


    a176 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV2300").first.id, code: "425").first_or_create!(name: "Water hammer self book",
        name_abrv: "WATERHAM", archived: false, in_drive: false, user_id: 1)
    at176 = ActivityTimetable.where(activity_id: a176.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 30, notes: "",
        capacity: 8, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a176.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y7gqnls2", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a176.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a176.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a176.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a176.id, programme_id: $prog_civ.id).first_or_create!


    a177 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER298").first.id, code: "427").first_or_create!(name: "Wing Lift and Drag",
        name_abrv: "LIFTDRAG", archived: false, in_drive: false, user_id: 4)
    at177 = ActivityTimetable.where(activity_id: a177.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 16, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a177.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y9gnk48b", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a177.id).first_or_create!(criteria: "Understanding of Bernoulli principle and boundary layer theory.",
        job_desc:"Help students to understand how to operate the wind tunnels to extract lift and drag data from a wing model. Marking in session is required.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a177.id).first_or_create!(assess_weight: 20.0, notes: "post lab is part of the CFD assignment",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 2)
    ActivityTech.where(activity_id: a177.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a177.id, programme_id: $prog_aero.id).first_or_create!


    a178 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR197").first.id, code: "427").first_or_create!(name: "Wing Lift and Drag",
        name_abrv: "LIFTDRAG", archived: false, in_drive: true, user_id: 4)
    at178 = ActivityTimetable.where(activity_id: a178.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 8, max_week_num: 8, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 16, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a178.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a178.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a178.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a178.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a178.id, programme_id: $prog_amrc.id).first_or_create!


    a179 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR197").first.id, code: "428").first_or_create!(name: "Viscometry",
        name_abrv: "VISC", archived: false, in_drive: true, user_id: 2)
    at179 = ActivityTimetable.where(activity_id: a179.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 2, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Could be in analytics",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a179.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a179.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a179.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a179.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a179.id, programme_id: $prog_amrc.id).first_or_create!


    a180 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC208").first.id, code: "600").first_or_create!(name: "Weirs Big and Small",
        name_abrv: "WEIRS", archived: false, in_drive: true, user_id: 2)
    at180 = ActivityTimetable.where(activity_id: a180.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 5, max_week_num: 12, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 150, takedown_time: 150, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a180.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a180.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a180.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a180.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a180.id, programme_id: $prog_mec.id).first_or_create!


    a181 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC208").first.id, code: "430").first_or_create!(name: "Fluidic Carousel",
        name_abrv: "FUNLAB", archived: false, in_drive: true, user_id: 2)
    at181 = ActivityTimetable.where(activity_id: a181.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 5, max_week_num: 5, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a181.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y3s5gczj", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a181.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a181.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a181.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a181.id, programme_id: $prog_mec.id).first_or_create!


    a182 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC209").first.id, code: "501").first_or_create!(name: "Make and Break",
        name_abrv: "MAKEBREAK", archived: false, in_drive: false, user_id: 2)
    at182 = ActivityTimetable.where(activity_id: a182.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 8, max_week_num: 10, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 15, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a182.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a182.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a182.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a182.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a182.id, programme_id: $prog_mec.id).first_or_create!


    a183 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR222").first.id, code: "502").first_or_create!(name: "Heat Exchangers",
        name_abrv: "HEAT_EX", archived: false, in_drive: true, user_id: 1)
    at183 = ActivityTimetable.where(activity_id: a183.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a183.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a183.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a183.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a183.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a183.id, programme_id: $prog_amrc.id).first_or_create!


    a184 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR227").first.id, code: "502").first_or_create!(name: "Heat Exchangers",
        name_abrv: "HEAT_EX", archived: false, in_drive: false, user_id: 5)
    at184 = ActivityTimetable.where(activity_id: a184.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a184.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a184.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a184.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a184.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a184.id, programme_id: $prog_amrc.id).first_or_create!


    a185 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR305").first.id, code: "502").first_or_create!(name: "Heat Exchangers",
        name_abrv: "HEAT_EX", archived: false, in_drive: false, user_id: 1)
    at185 = ActivityTimetable.where(activity_id: a185.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a185.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a185.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a185.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a185.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a185.id, programme_id: $prog_amrc.id).first_or_create!


    a186 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "503").first_or_create!(name: "2nd law",
        name_abrv: "2NDLAW", archived: false, in_drive: true, user_id: 1)
    at186 = ActivityTimetable.where(activity_id: a186.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a186.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a186.id).first_or_create!(criteria: "",
        job_desc:"Lab on the most important law in engineering the 2nd law - actually heat exchangers and compressors.
    Three sessions to run.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a186.id).first_or_create!(assess_weight: nil, notes: "No information",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a186.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a186.id, programme_id: $prog_mat.id).first_or_create!


    a187 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC6448").first.id, code: "504").first_or_create!(name: "Acoustics",
        name_abrv: "ACOUSTICS", archived: true, in_drive: true, user_id: 2)
    at187 = ActivityTimetable.where(activity_id: a187.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 8, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a187.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a187.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a187.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a187.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a187.id, programme_id: $prog_mec.id).first_or_create!


    a188 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CPE180").first.id, code: "505").first_or_create!(name: "Boiling and Condensing",
        name_abrv: "BOILING", archived: false, in_drive: true, user_id: 2)
    at188 = ActivityTimetable.where(activity_id: a188.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 2, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a188.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/jbcxj2k", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a188.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"Lab demonstration, training provided, no marking. Demonstrate labs on both boiling and condesing. Both are complex but the lab is mainly about observing the process taking place.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a188.id).first_or_create!(assess_weight: nil, notes: "Pre and Post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a188.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a188.id, programme_id: $prog_cbe.id).first_or_create!


    a190 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC326").first.id, code: "506").first_or_create!(name: "Cantilever Beam",
        name_abrv: "CANTBEAM", archived: false, in_drive: true, user_id: 2)
    at190 = ActivityTimetable.where(activity_id: a190.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a190.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a190.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a190.id).first_or_create!(assess_weight: nil, notes: "No assessment",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a190.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a190.id, programme_id: $prog_mec.id).first_or_create!


    a191 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC327").first.id, code: "506").first_or_create!(name: "Cantilever Beam",
        name_abrv: "CANTILEVER", archived: false, in_drive: true, user_id: 3)
    at191 = ActivityTimetable.where(activity_id: a191.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 30, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a191.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a191.id).first_or_create!(criteria: "",
        job_desc:"GTA's selected by department - email from RW 29/01/2019", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a191.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a191.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a191.id, programme_id: $prog_mec.id).first_or_create!


    a192 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC604").first.id, code: "506").first_or_create!(name: "Cantilever Beam",
        name_abrv: "CANTILEVER", archived: false, in_drive: true, user_id: 5)
    at192 = ActivityTimetable.where(activity_id: a192.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a192.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a192.id).first_or_create!(criteria: "GTAs should have an understanding of Bernoulli principle and boundary layer theory.",
        job_desc:"Students traverses a pitot tube across the working section of a wind tunnel and, with t digital pressure gauge, determine the boundary layer thickness.

    2018-19: GTAs selected by dpt email from RW 29/01/2019", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a192.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a192.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a192.id, programme_id: $prog_mec.id).first_or_create!


    a193 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "512").first_or_create!(name: "Friction",
        name_abrv: "FRICTION", archived: false, in_drive: false, user_id: 4)
    at193 = ActivityTimetable.where(activity_id: a193.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a193.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a193.id).first_or_create!(criteria: "Enthusiasm for thermodynamics. Basic dynamics. Ability to read instructions. Ability to explain. Approachability.",
        job_desc:"Measuring the friction coefficient of band brakes using LabVIEW and motor apparatus - supervise and assist students.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a193.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a193.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a193.id, programme_id: $prog_mec.id).first_or_create!


    a194 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "unknowncode5").first_or_create!(name: "Compressors 1st Law",
        name_abrv: "COMP1STLAW", archived: false, in_drive: true, user_id: 1)
    at194 = ActivityTimetable.where(activity_id: a194.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a194.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a194.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"lab demonstration - compressors, training provided. No lab marking. Measure and evaluate the performance of a compressor using the first law of themrodynamics. Determine the polytropic constant. Measure the performance of compressor. Find how compressor performance changes with operating conditions. Revise thermodynamic theory.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a194.id).first_or_create!(assess_weight: nil, notes: "All AER192 labs account for 10% of module mark",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a194.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a194.id, programme_id: $prog_aero.id).first_or_create!


    a195 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR227").first.id, code: "508").first_or_create!(name: "Compressors 2nd Law",
        name_abrv: "COMP2NDLAW", archived: false, in_drive: true, user_id: 4)
    at195 = ActivityTimetable.where(activity_id: a195.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a195.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a195.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a195.id).first_or_create!(assess_weight: nil, notes: "No information",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a195.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a195.id, programme_id: $prog_amrc.id).first_or_create!


    a196 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "508").first_or_create!(name: "Compressors 2nd Law",
        name_abrv: "COMP2NDLAW", archived: false, in_drive: true, user_id: 2)
    at196 = ActivityTimetable.where(activity_id: a196.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 11, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a196.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a196.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"lab demonstration - compressors, training provided. No lab marking. Measure and evaluate the performance of a compressor using the first law of themrodynamics. Measure the performance of compressor. Find how compressor performance changes with operating conditions. Determine the isentropic efficiency. Revise thermodynamic theory.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a196.id).first_or_create!(assess_weight: 5.0, notes: "Post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a196.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a196.id, programme_id: $prog_gee.id).first_or_create!


    a197 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "508").first_or_create!(name: "Compressors 2nd Law",
        name_abrv: "COMP2NDLAW", archived: false, in_drive: true, user_id: 5)
    at197 = ActivityTimetable.where(activity_id: a197.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a197.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a197.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a197.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a197.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a197.id, programme_id: $prog_mec.id).first_or_create!


    a198 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR333").first.id, code: "509").first_or_create!(name: "Coupon Test",
        name_abrv: "COUPTEST", archived: true, in_drive: true, user_id: 4)
    at198 = ActivityTimetable.where(activity_id: a198.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a198.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a198.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a198.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a198.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a198.id, programme_id: $prog_amrc.id).first_or_create!


    a199 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC604").first.id, code: "509").first_or_create!(name: "Coupon Test",
        name_abrv: "COUPTEST", archived: false, in_drive: false, user_id: 3)
    at199 = ActivityTimetable.where(activity_id: a199.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "See RW",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a199.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a199.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a199.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a199.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a199.id, programme_id: $prog_mec.id).first_or_create!


    a200 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE204").first.id, code: "510").first_or_create!(name: "Cross Flow Heat Transfer",
        name_abrv: "CROSSFHT", archived: false, in_drive: false, user_id: 4)
    at200 = ActivityTimetable.where(activity_id: a200.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at200.id, room_id: $room_fl.id).first_or_create!

    ActivityTeaching.where(activity_id: a200.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a200.id).first_or_create!(criteria: "Expertise in heat transfer desirable.",
        job_desc:"Measuring convective heat transfer in an external flow using dimensionless numbers.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a200.id).first_or_create!(assess_weight: nil, notes: "Not assessed 18/19",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a200.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a200.id, programme_id: $prog_gee.id).first_or_create!


    a201 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC203").first.id, code: "510").first_or_create!(name: "Cross Flow Heat Transfer",
        name_abrv: "CROSSFHT", archived: false, in_drive: false, user_id: 3)
    at201 = ActivityTimetable.where(activity_id: a201.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a201.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a201.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a201.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a201.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a201.id, programme_id: $prog_mec.id).first_or_create!


    a202 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC604").first.id, code: "511").first_or_create!(name: "Diffusers",
        name_abrv: "DIFFUSERS", archived: false, in_drive: false, user_id: 5)
    at202 = ActivityTimetable.where(activity_id: a202.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 2, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 40, checked_on_timetable: false)
    RoomBooking.where(activity_timetable_id: at202.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a202.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/j42pak3", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a202.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a202.id).first_or_create!(assess_weight: nil, notes: "Not assessed MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a202.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a202.id, programme_id: $prog_mec.id).first_or_create!


    a203 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER104").first.id, code: "512").first_or_create!(name: "Friction",
        name_abrv: "FRICTION", archived: true, in_drive: false, user_id: 5)
    at203 = ActivityTimetable.where(activity_id: a203.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a203.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a203.id).first_or_create!(criteria: "Enthusiasm for thermodynamics. Basic dynamics. Ability to read instructions. Ability to explain. Approachability.",
        job_desc:"Measuring the friction coefficient of band brakes using LabVIEW and motor apparatus - supervise and assist students.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a203.id).first_or_create!(assess_weight: nil, notes: "labs formative",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a203.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a203.id, programme_id: $prog_aero.id).first_or_create!


    a204 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR134").first.id, code: "512").first_or_create!(name: "Friction",
        name_abrv: "FRICTION", archived: true, in_drive: false, user_id: 1)
    at204 = ActivityTimetable.where(activity_id: a204.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a204.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a204.id).first_or_create!(criteria: "Enthusiasm for thermodynamics. Basic dynamics. Ability to read instructions. Ability to explain. Approachability.",
        job_desc:"Measuring the friction coefficient of band brakes using LabVIEW and motor apparatus - supervise and assist students.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a204.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a204.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a204.id, programme_id: $prog_amrc.id).first_or_create!


    a205 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "513").first_or_create!(name: "Heat engines 1",
        name_abrv: "HEATENG1", archived: false, in_drive: false, user_id: 2)
    at205 = ActivityTimetable.where(activity_id: a205.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a205.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a205.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a205.id).first_or_create!(assess_weight: nil, notes: "All AER192 labs account for 10% of module mark",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a205.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a205.id, programme_id: $prog_aero.id).first_or_create!


    a206 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR195").first.id, code: "513").first_or_create!(name: "Heat engines 1",
        name_abrv: "HEATENG1", archived: false, in_drive: false, user_id: 2)
    at206 = ActivityTimetable.where(activity_id: a206.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a206.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a206.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a206.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a206.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a206.id, programme_id: $prog_amrc.id).first_or_create!


    a207 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "514").first_or_create!(name: "Heat engines 2",
        name_abrv: "HEATENG2", archived: false, in_drive: false, user_id: 4)
    at207 = ActivityTimetable.where(activity_id: a207.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a207.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a207.id).first_or_create!(criteria: "",
        job_desc:"Straightforward demonstration of open and closed heat engines systems", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a207.id).first_or_create!(assess_weight: nil, notes: "All AER192 labs account for 10% of module mark",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a207.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a207.id, programme_id: $prog_aero.id).first_or_create!


    a208 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CPE180").first.id, code: "515").first_or_create!(name: "Heat Exchangers 1",
        name_abrv: "HEATEX1", archived: false, in_drive: false, user_id: 1)
    at208 = ActivityTimetable.where(activity_id: a208.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 1, max_week_num: 1, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a208.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "link", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a208.id).first_or_create!(criteria: "",
        job_desc:"First year application of heat exchangers.
    Fun simple lab that the students generally get.
    I think its fun, not asked anyone else.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: 20.0)
    ActivityAssess.where(activity_id: a208.id).first_or_create!(assess_weight: nil, notes: "Pre and Post lab quiz",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a208.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a208.id, programme_id: $prog_cbe.id).first_or_create!


    a209 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR195").first.id, code: "515").first_or_create!(name: "Heat Exchangers 1",
        name_abrv: "HEATEX1", archived: false, in_drive: false, user_id: 4)
    at209 = ActivityTimetable.where(activity_id: a209.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a209.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a209.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a209.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a209.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a209.id, programme_id: $prog_amrc.id).first_or_create!


    a210 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "515").first_or_create!(name: "Heat Exchangers 1",
        name_abrv: "HEATEX1", archived: false, in_drive: false, user_id: 1)
    at210 = ActivityTimetable.where(activity_id: a210.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a210.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a210.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"Lab demonstration on heat exchangers, no marking Measure heat exchanger performance LMTD, U value Compare the performance of three different types of heat exchanger. Observe how the experimental apparatus can influence measurements. Apply heat exchanger theory.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a210.id).first_or_create!(assess_weight: nil, notes: "All AER192 labs account for 10% of module mark",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a210.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a210.id, programme_id: $prog_aero.id).first_or_create!


    a211 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER293").first.id, code: "516").first_or_create!(name: "Heat Exchangers 2",
        name_abrv: "HEATEX2", archived: false, in_drive: false, user_id: 1)
    at211 = ActivityTimetable.where(activity_id: a211.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a211.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a211.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"Lab demonstration on heat exchangers, no marking Measure heat exchanger performance LMTD, U value Compare the performance of three different types of heat exchanger. Observe how the experimental apparatus can influence measurements. Apply heat exchanger theory.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a211.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a211.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a211.id, programme_id: $prog_aero.id).first_or_create!


    a212 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE204").first.id, code: "516").first_or_create!(name: "Heat Exchangers 2",
        name_abrv: "HEATEX2", archived: false, in_drive: false, user_id: 4)
    at212 = ActivityTimetable.where(activity_id: a212.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a212.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a212.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"Lab demonstration on heat exchangers, no marking Measure heat exchanger performance LMTD, U value Compare the performance of three different types of heat exchanger. Observe how the experimental apparatus can influence measurements. Apply heat exchanger theory.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a212.id).first_or_create!(assess_weight: 5.0, notes: "post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a212.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a212.id, programme_id: $prog_gee.id).first_or_create!


    a213 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "515").first_or_create!(name: "Heat Exchangers 1",
        name_abrv: "HEATEX1", archived: false, in_drive: false, user_id: 3)
    at213 = ActivityTimetable.where(activity_id: a213.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a213.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a213.id).first_or_create!(criteria: "",
        job_desc:"First year application of heat exchangers.
    Fun simple lab that the students generally get.
    I think its fun, not asked anyone else.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a213.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a213.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a213.id, programme_id: $prog_mec.id).first_or_create!


    a214 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC203").first.id, code: "516").first_or_create!(name: "Heat Exchangers 2",
        name_abrv: "HEATEX2", archived: false, in_drive: false, user_id: 3)
    at214 = ActivityTimetable.where(activity_id: a214.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a214.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a214.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"Lab demonstration on heat exchangers, no marking Measure heat exchanger performance LMTD, U value Compare the performance of three different types of heat exchanger. Observe how the experimental apparatus can influence measurements. Apply heat exchanger theory.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a214.id).first_or_create!(assess_weight: nil, notes: "post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a214.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a214.id, programme_id: $prog_mec.id).first_or_create!


    a215 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "517").first_or_create!(name: "Inertia",
        name_abrv: "INERTIA", archived: false, in_drive: false, user_id: 2)
    at215 = ActivityTimetable.where(activity_id: a215.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a215.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a215.id).first_or_create!(criteria: "Enthusiasm for thermodynamics. Basic dynamics. Ability to read instructions. Ability to explain. Approachability.",
        job_desc:"Measuring torque and acceleration using LabVIEW and motor apparatus to calculate inertia of a flywheel - supervise and assist students.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a215.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a215.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a215.id, programme_id: $prog_mec.id).first_or_create!


    a216 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CPE160").first.id, code: "518").first_or_create!(name: "Liquids and Gases",
        name_abrv: "LIQ&GAS", archived: false, in_drive: false, user_id: 2)
    at216 = ActivityTimetable.where(activity_id: a216.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a216.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/jktbdqt", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a216.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"lab demonstration - boiling equipment, training provided, no marking Investigate the phase change from a liquid to a gas. Distinguish forms of phase change between liquids and gases and illustrate them. Discuss the relationship between pressure and boiling temperature. Apply the Clausius-Clapeyron equation.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a216.id).first_or_create!(assess_weight: 2.5, notes: "Post lab quiz preferred or short assignment.  Previously, the assignment has consisted of a number of questions.",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a216.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a216.id, programme_id: $prog_cbe.id).first_or_create!


    a217 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "518").first_or_create!(name: "Liquids and Gases",
        name_abrv: "LIQ&GAS", archived: false, in_drive: false, user_id: 3)
    at217 = ActivityTimetable.where(activity_id: a217.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 6, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a217.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a217.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"lab demonstration - boiling equipment, training provided, no marking Investigate the phase change from a liquid to a gas. Distinguish forms of phase change between liquids and gases and illustrate them. Discuss the relationship between pressure and boiling temperature. Apply the Clausius-Clapeyron equation.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a217.id).first_or_create!(assess_weight: nil, notes: "post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a217.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a217.id, programme_id: $prog_gee.id).first_or_create!


    a218 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "518").first_or_create!(name: "Liquids and Gases",
        name_abrv: "LIQ&GAS", archived: false, in_drive: false, user_id: 5)
    at218 = ActivityTimetable.where(activity_id: a218.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a218.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a218.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"lab demonstration - boiling equipment, training provided, no marking Investigate the phase change from a liquid to a gas. Distinguish forms of phase change between liquids and gases and illustrate them. Discuss the relationship between pressure and boiling temperature. Apply the Clausius-Clapeyron equation.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a218.id).first_or_create!(assess_weight: nil, notes: "No information",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a218.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a218.id, programme_id: $prog_mat.id).first_or_create!


    a219 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "518").first_or_create!(name: "Liquids and Gases",
        name_abrv: "LIQ&GAS", archived: true, in_drive: false, user_id: 3)
    at219 = ActivityTimetable.where(activity_id: a219.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a219.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a219.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"lab demonstration - boiling equipment, training provided, no marking Investigate the phase change from a liquid to a gas. Distinguish forms of phase change between liquids and gases and illustrate them. Discuss the relationship between pressure and boiling temperature. Apply the Clausius-Clapeyron equation.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a219.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a219.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a219.id, programme_id: $prog_mec.id).first_or_create!


    a220 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC162").first.id, code: "518").first_or_create!(name: "Liquids and Gases",
        name_abrv: "LIQ&GAS", archived: false, in_drive: false, user_id: 5)
    at220 = ActivityTimetable.where(activity_id: a220.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a220.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a220.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"lab demonstration - boiling equipment, training provided, no marking Investigate the phase change from a liquid to a gas. Distinguish forms of phase change between liquids and gases and illustrate them. Discuss the relationship between pressure and boiling temperature. Apply the Clausius-Clapeyron equation.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a220.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a220.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a220.id, programme_id: $prog_ae.id).first_or_create!


    a221 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC453").first.id, code: "520").first_or_create!(name: "Non linear vibration",
        name_abrv: "NONLINEARVIB", archived: true, in_drive: false, user_id: 3)
    at221 = ActivityTimetable.where(activity_id: a221.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a221.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a221.id).first_or_create!(criteria: "",
        job_desc:"? Previously had claims from MEC dpt after work has been done by GTAs. (email from Jason Hawley 05/11/18)", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a221.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a221.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a221.id, programme_id: $prog_mec.id).first_or_create!


    a222 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER104").first.id, code: "unknowncode6").first_or_create!(name: "Rolling Spheres",
        name_abrv: "ROLLING", archived: true, in_drive: false, user_id: 1)
    at222 = ActivityTimetable.where(activity_id: a222.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a222.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a222.id).first_or_create!(criteria: "Interest in teaching.",
        job_desc:"Really easy introductory lab to dynamics.  The students roll spheres of different mass and mass distribution down a slope. However we will be asking the students to achieve certain Aims. The demonstrators will need to encourage the students to achieve these without just giving the answers. Should be fun.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a222.id).first_or_create!(assess_weight: nil, notes: "labs formative",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a222.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a222.id, programme_id: $prog_gee.id).first_or_create!


    a223 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER104").first.id, code: "521AE").first_or_create!(name: "Rolling Spheres",
        name_abrv: "ROLLING", archived: false, in_drive: false, user_id: 5)
    at223 = ActivityTimetable.where(activity_id: a223.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 5, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a223.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a223.id).first_or_create!(criteria: "Interest in teaching.",
        job_desc:"Really easy introductory lab to dynamics.  The students roll spheres of different mass and mass distribution down a slope. However we will be asking the students to achieve certain Aims. The demonstrators will need to encourage the students to achieve these without just giving the answers. Should be fun.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a223.id).first_or_create!(assess_weight: nil, notes: "formative",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a223.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a223.id, programme_id: $prog_aero.id).first_or_create!


    a224 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "521").first_or_create!(name: "Rolling Spheres",
        name_abrv: "ROLLING", archived: false, in_drive: false, user_id: 4)
    at224 = ActivityTimetable.where(activity_id: a224.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a224.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a224.id).first_or_create!(criteria: "Interest in teaching.",
        job_desc:"Really easy introductory lab to dynamics.  The students roll spheres of different mass and mass distribution down a slope. However we will be asking the students to achieve certain Aims. The demonstrators will need to encourage the students to achieve these without just giving the answers. Should be fun.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a224.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a224.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a224.id, programme_id: $prog_mec.id).first_or_create!


    a225 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "522").first_or_create!(name: "Second Law",
        name_abrv: "2NDLAW", archived: false, in_drive: false, user_id: 3)
    at225 = ActivityTimetable.where(activity_id: a225.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a225.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a225.id).first_or_create!(criteria: "",
        job_desc:"Lab on the most important law in engineering the 2nd law - actually heat exchangers and compressors.
    Three sessions to run.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a225.id).first_or_create!(assess_weight: nil, notes: "All AER192 labs account for 10% of module mark",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a225.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a225.id, programme_id: $prog_aero.id).first_or_create!


    a226 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR222").first.id, code: "522").first_or_create!(name: "Second Law",
        name_abrv: "Second Law", archived: false, in_drive: false, user_id: 4)
    at226 = ActivityTimetable.where(activity_id: a226.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a226.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a226.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a226.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a226.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a226.id, programme_id: $prog_amrc.id).first_or_create!


    a227 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR227").first.id, code: "522").first_or_create!(name: "Second Law",
        name_abrv: "Second Law", archived: false, in_drive: false, user_id: 3)
    at227 = ActivityTimetable.where(activity_id: a227.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a227.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a227.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a227.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a227.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a227.id, programme_id: $prog_amrc.id).first_or_create!


    a228 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR305").first.id, code: "522").first_or_create!(name: "Second Law",
        name_abrv: "Second Law", archived: false, in_drive: false, user_id: 3)
    at228 = ActivityTimetable.where(activity_id: a228.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a228.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a228.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a228.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a228.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a228.id, programme_id: $prog_amrc.id).first_or_create!


    a229 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC321").first.id, code: "523").first_or_create!(name: "servo motor frequency",
        name_abrv: "MEC-FREQ", archived: false, in_drive: false, user_id: 3)
    at229 = ActivityTimetable.where(activity_id: a229.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a229.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a229.id).first_or_create!(criteria: "Interest in Control.",
        job_desc:"Lab demonstration, no in lab marking. Training provided.  Design a PI controller for a 1st order system, based on characteristic equation of the closed loop system and a performance specification. There might be some Bode diagrams as well. A great way to revise control.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a229.id).first_or_create!(assess_weight: 5.0, notes: "Attendance and completion of lab",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a229.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a229.id, programme_id: $prog_mec.id).first_or_create!


    a230 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC321").first.id, code: "524").first_or_create!(name: "Servo Motor Time",
        name_abrv: "MEC-TIME", archived: false, in_drive: false, user_id: 1)
    at230 = ActivityTimetable.where(activity_id: a230.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a230.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a230.id).first_or_create!(criteria: "Interest in Control.",
        job_desc:"Lab demonstration, no in lab marking. Training provided. The lab gives the students a basic knowledge of the sensors used in measuring a motorâs behaviour, an understanding of the need for closed-loop control of a motor, observe the difference between open loop, proportional, and proportional + integral control. A great way to revise control.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a230.id).first_or_create!(assess_weight: 5.0, notes: "Attendance and completion of lab",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a230.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a230.id, programme_id: $prog_mec.id).first_or_create!


    a231 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER104").first.id, code: "525").first_or_create!(name: "Slider crank",
        name_abrv: "SLIDERCRANK", archived: false, in_drive: false, user_id: 1)
    at231 = ActivityTimetable.where(activity_id: a231.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 6, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a231.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a231.id).first_or_create!(criteria: "",
        job_desc:"What can be more mechanical than a slider crank?
    Validating acceleration diagrams by measuring acceleration in a slider-crank mechanism using LabVIEW and motor apparatus - supervise and assist students. GTAs should have knowledge of basic dynamics.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a231.id).first_or_create!(assess_weight: nil, notes: "labs formative",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a231.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a231.id, programme_id: $prog_aero.id).first_or_create!


    a232 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "525").first_or_create!(name: "Slider crank",
        name_abrv: "SLIDERCRANK", archived: false, in_drive: false, user_id: 3)
    at232 = ActivityTimetable.where(activity_id: a232.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a232.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a232.id).first_or_create!(criteria: "GTAs should have knowledge of basic dynamics.",
        job_desc:"What can be more mechanical than a slider crank?
    Validating acceleration diagrams by measuring acceleration in a slider-crank mechanism using LabVIEW and motor apparatus - supervise and assist students.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a232.id).first_or_create!(assess_weight: nil, notes: "Post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a232.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a232.id, programme_id: $prog_mec.id).first_or_create!


    a233 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR333").first.id, code: "526").first_or_create!(name: "Strut Test",
        name_abrv: "STRUTTEST", archived: true, in_drive: false, user_id: 5)
    at233 = ActivityTimetable.where(activity_id: a233.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 30, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a233.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a233.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a233.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a233.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a233.id, programme_id: $prog_amrc.id).first_or_create!


    a234 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC604").first.id, code: "526").first_or_create!(name: "Strut Test",
        name_abrv: "STRUTTEST", archived: false, in_drive: false, user_id: 3)
    at234 = ActivityTimetable.where(activity_id: a234.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "See RW",
        capacity: 50, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a234.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a234.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a234.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a234.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a234.id, programme_id: $prog_mec.id).first_or_create!


    a235 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC326").first.id, code: "527").first_or_create!(name: "Tap test",
        name_abrv: "TAPTEST", archived: false, in_drive: false, user_id: 4)
    at235 = ActivityTimetable.where(activity_id: a235.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a235.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a235.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a235.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a235.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a235.id, programme_id: $prog_mec.id).first_or_create!


    a236 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC327").first.id, code: "527").first_or_create!(name: "Tap test",
        name_abrv: "TAPTEST", archived: false, in_drive: false, user_id: 1)
    at236 = ActivityTimetable.where(activity_id: a236.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 30, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a236.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a236.id).first_or_create!(criteria: "",
        job_desc:"GTA's selected by department - email from RW 29/01/2019", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a236.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a236.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a236.id, programme_id: $prog_mec.id).first_or_create!


    a237 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC604").first.id, code: "527").first_or_create!(name: "Tap test",
        name_abrv: "TAPTEST", archived: false, in_drive: false, user_id: 1)
    at237 = ActivityTimetable.where(activity_id: a237.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a237.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a237.id).first_or_create!(criteria: "",
        job_desc:"Advanced dynamics labs.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a237.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a237.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a237.id, programme_id: $prog_mec.id).first_or_create!


    a238 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER293").first.id, code: "528").first_or_create!(name: "Thermal radiation",
        name_abrv: "THERMAL", archived: false, in_drive: false, user_id: 5)
    at238 = ActivityTimetable.where(activity_id: a238.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a238.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a238.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"Lab demonstration on thermal radiation - no marking Demonstrate that the heat flux from a thermal radiation surface increases with T4. Measure the impact of changing the angle between two surfaces. Observe the effect of changing surface properties on thermal radiation.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a238.id).first_or_create!(assess_weight: nil, notes: "Formative",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a238.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a238.id, programme_id: $prog_aero.id).first_or_create!


    a239 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR227").first.id, code: "528").first_or_create!(name: "Thermal radiation",
        name_abrv: "THERMAL", archived: false, in_drive: false, user_id: 1)
    at239 = ActivityTimetable.where(activity_id: a239.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a239.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a239.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"Lab demonstration on thermal radiation - no marking Demonstrate that the heat flux from a thermal radiation surface increases with T4. Measure the impact of changing the angle between two surfaces. Observe the effect of changing surface properties on thermal radiation.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a239.id).first_or_create!(assess_weight: nil, notes: "No information",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a239.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a239.id, programme_id: $prog_amrc.id).first_or_create!


    a240 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CPE180").first.id, code: "528").first_or_create!(name: "Thermal radiation",
        name_abrv: "THERMAL", archived: false, in_drive: false, user_id: 3)
    at240 = ActivityTimetable.where(activity_id: a240.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 3, max_week_num: 3, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a240.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/jhyml9q", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a240.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"Lab demonstration on thermal radiation - no marking Demonstrate that the heat flux from a thermal radiation surface increases with T4. Measure the impact of changing the angle between two surfaces. Observe the effect of changing surface properties on thermal radiation.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a240.id).first_or_create!(assess_weight: nil, notes: "Pre and Post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a240.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a240.id, programme_id: $prog_cbe.id).first_or_create!


    a241 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC203").first.id, code: "528").first_or_create!(name: "Thermal radiation",
        name_abrv: "THERMAL", archived: false, in_drive: false, user_id: 3)
    at241 = ActivityTimetable.where(activity_id: a241.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a241.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a241.id).first_or_create!(criteria: "Enthusiasm for thermodynamics.",
        job_desc:"Lab demonstration on thermal radiation - no marking Demonstrate that the heat flux from a thermal radiation surface increases with T4. Measure the impact of changing the angle between two surfaces. Observe the effect of changing surface properties on thermal radiation.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a241.id).first_or_create!(assess_weight: nil, notes: "post lab quiz",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a241.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a241.id, programme_id: $prog_mec.id).first_or_create!


    a242 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "529").first_or_create!(name: "Torsion",
        name_abrv: "TORSION", archived: false, in_drive: false, user_id: 1)
    at242 = ActivityTimetable.where(activity_id: a242.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a242.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a242.id).first_or_create!(criteria: "Understanding of Mechanics of materials",
        job_desc:"In this lab, students perform torsion tests on a series of rods made from different materials and having a range of lengths.From the data, students plot stress-strain curves and determine the mechanical properties of the rods, comparing the effect of rod length and material on the obtained data. A knowledge of mechanical performance of materials is therefore required.", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a242.id).first_or_create!(assess_weight: 4.0, notes: "Post lab quiz",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a242.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a242.id, programme_id: $prog_mec.id).first_or_create!


    a243 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER291").first.id, code: "530").first_or_create!(name: "Vibrating Beam 1",
        name_abrv: "VIBBEAM1", archived: false, in_drive: false, user_id: 1)
    at243 = ActivityTimetable.where(activity_id: a243.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a243.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a243.id).first_or_create!(criteria: "",
        job_desc:"Second year dynamics labs. Now split into 2. First lab 1 hour introductory session. 
    Second lab 2 hour data collection lab.
    Fairly involved lab.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a243.id).first_or_create!(assess_weight: nil, notes: "Formative",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a243.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a243.id, programme_id: $prog_aero.id).first_or_create!


    a244 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC201").first.id, code: "530").first_or_create!(name: "Vibrating Beam 1",
        name_abrv: "VIBBEAM1", archived: false, in_drive: false, user_id: 1)
    at244 = ActivityTimetable.where(activity_id: a244.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a244.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a244.id).first_or_create!(criteria: "",
        job_desc:"Second year dynamics labs. Now split into 2. First lab 1 hour introductory session. 
    Second lab 2 hour data collection lab.
    Fairly involved lab.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a244.id).first_or_create!(assess_weight: nil, notes: "Formative",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a244.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a244.id, programme_id: $prog_mec.id).first_or_create!


    a245 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER291").first.id, code: "531").first_or_create!(name: "Vibrating Beam 2",
        name_abrv: "VIBBEAM2", archived: false, in_drive: false, user_id: 3)
    at245 = ActivityTimetable.where(activity_id: a245.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a245.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a245.id).first_or_create!(criteria: "",
        job_desc:"Second year dynamics labs. Now split into 2. First lab 1 hour introductory session. 
    Second lab 2 hour data collection lab.
    Fairly involved lab.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a245.id).first_or_create!(assess_weight: 20.0, notes: "Lab report assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a245.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a245.id, programme_id: $prog_aero.id).first_or_create!


    a246 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC201").first.id, code: "531").first_or_create!(name: "Vibrating Beam 2",
        name_abrv: "VIBBEAM2", archived: false, in_drive: false, user_id: 2)
    at246 = ActivityTimetable.where(activity_id: a246.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a246.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a246.id).first_or_create!(criteria: "",
        job_desc:"Second year dynamics labs. Now split into 2. First lab 1 hour introductory session. 
    Second lab 2 hour data collection lab.
    Fairly involved lab.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a246.id).first_or_create!(assess_weight: 10.0, notes: "Lab report assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a246.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a246.id, programme_id: $prog_mec.id).first_or_create!


    a247 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "545AE").first_or_create!(name: "Compressors 2 and Rolling Spheres",
        name_abrv: "Compressors 2", archived: false, in_drive: false, user_id: 1)
    at247 = ActivityTimetable.where(activity_id: a247.id).first_or_create!(duration: 40, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a247.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a247.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a247.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a247.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a247.id, programme_id: $prog_aero.id).first_or_create!


    a248 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR124").first.id, code: "533").first_or_create!(name: "Band Break Friction",
        name_abrv: "FRICTION", archived: false, in_drive: false, user_id: 1)
    at248 = ActivityTimetable.where(activity_id: a248.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 12, max_week_num: 12, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a248.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a248.id).first_or_create!(criteria: "Enthusiasm for thermodynamics. Basic dynamics. Ability to read instructions. Ability to explain. Approachability.",
        job_desc:"Measuring the friction coefficient of band brakes using LabVIEW and motor apparatus - supervise and assist students.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a248.id).first_or_create!(assess_weight: nil, notes: "Not assessed by MEE",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a248.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a248.id, programme_id: $prog_amrc.id).first_or_create!


    a249 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR301").first.id, code: "534").first_or_create!(name: "Wear",
        name_abrv: "Wear", archived: false, in_drive: false, user_id: 1)
    at249 = ActivityTimetable.where(activity_id: a249.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 21, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a249.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a249.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a249.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a249.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a249.id, programme_id: $prog_amrc.id).first_or_create!


    a250 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC444").first.id, code: "535").first_or_create!(name: "Photoelasticity",
        name_abrv: "PE", archived: false, in_drive: false, user_id: 1)
    at250 = ActivityTimetable.where(activity_id: a250.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a250.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a250.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a250.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a250.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a250.id, programme_id: $prog_mec.id).first_or_create!


    a251 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC444").first.id, code: "536").first_or_create!(name: "Digital Image Correllation",
        name_abrv: "DIC", archived: false, in_drive: false, user_id: 5)
    at251 = ActivityTimetable.where(activity_id: a251.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a251.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a251.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a251.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a251.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a251.id, programme_id: $prog_mec.id).first_or_create!


    a252 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC444").first.id, code: "537").first_or_create!(name: "Strain Guages",
        name_abrv: "", archived: false, in_drive: false, user_id: 5)
    at252 = ActivityTimetable.where(activity_id: a252.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a252.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a252.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a252.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a252.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a252.id, programme_id: $prog_mec.id).first_or_create!


    a253 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC444").first.id, code: "538").first_or_create!(name: "Dynamics",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at253 = ActivityTimetable.where(activity_id: a253.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a253.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a253.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a253.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a253.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a253.id, programme_id: $prog_mec.id).first_or_create!


    a254 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV4505").first.id, code: "539").first_or_create!(name: "Triaxial",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at254 = ActivityTimetable.where(activity_id: a254.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 120, setup_time: 480, takedown_time: 480, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a254.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a254.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a254.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a254.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a254.id, programme_id: $prog_civ.id).first_or_create!


    a255 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6505").first.id, code: "539").first_or_create!(name: "Triaxial",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at255 = ActivityTimetable.where(activity_id: a255.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 120, setup_time: 480, takedown_time: 480, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a255.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a255.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a255.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a255.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a255.id, programme_id: $prog_civ.id).first_or_create!


    a256 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MAT1643").first.id, code: "234").first_or_create!(name: "Hole in Plate: Photoelasticity",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at256 = ActivityTimetable.where(activity_id: a256.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a256.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a256.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a256.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a256.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a256.id, programme_id: $prog_aero.id).first_or_create!


    a257 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "234").first_or_create!(name: "Hole in Plate: Photoelasticity",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at257 = ActivityTimetable.where(activity_id: a257.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 480, takedown_time: 480, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a257.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a257.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a257.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a257.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a257.id, programme_id: $prog_mat.id).first_or_create!


    a258 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MAT1643").first.id, code: "541").first_or_create!(name: "Hole in Plate: Mohr's Circles",
        name_abrv: "HOLEPLATE", archived: false, in_drive: false, user_id: 1)
    at258 = ActivityTimetable.where(activity_id: a258.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Needs Shimadzu",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at258.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a258.id).first_or_create!(user_id: 5, g_drive_link: "https://goo.gl/EhURKE",
        mole_pub_link: "https://goo.gl/FX6rau", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a258.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a258.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a258.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a258.id, programme_id: $prog_aero.id).first_or_create!


    a259 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "541").first_or_create!(name: "Hole in Plate: Mohr's Circles",
        name_abrv: "HOLEPLATE", archived: false, in_drive: false, user_id: 1)
    at259 = ActivityTimetable.where(activity_id: a259.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Needs Shimadzu",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at259.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a259.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a259.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "GTA in MEE, the Diamond: Structures Labs", marking_time: nil, staff_ratio: 15.0)
    ActivityAssess.where(activity_id: a259.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a259.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a259.id, programme_id: $prog_mat.id).first_or_create!


    a260 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER380").first.id, code: "313").first_or_create!(name: "Aircraft Design",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at260 = ActivityTimetable.where(activity_id: a260.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_apl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 15, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a260.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a260.id).first_or_create!(criteria: "#N/A",
        job_desc:"This experiment involves helping students build an aircraft which they have designed in the Merlin flight simulators. Once they hacve successfully built the aircraft, they will perform a test flight of the aircraft in order to assess the capabilities in relation to the design brief provided by the module leader. An interest in aircraft design and flight performance would therefore be desirable for this role.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a260.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a260.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a260.id, programme_id: $prog_aero.id).first_or_create!


    a261 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode7").first_or_create!(name: "Non Newtonian Fluids",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at261 = ActivityTimetable.where(activity_id: a261.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a261.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a261.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a261.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a261.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a261.id, programme_id: $prog_fy.id).first_or_create!


    a262 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE204").first.id, code: "433").first_or_create!(name: "Non Newtonian Fluids",
        name_abrv: "OOBLECK", archived: false, in_drive: false, user_id: 3)
    at262 = ActivityTimetable.where(activity_id: a262.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 10, max_week_num: 10, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 120, takedown_time: 180, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a262.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y8rsrucr", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a262.id).first_or_create!(criteria: "Some knowledge of the behaviour of fluids in shear (rheology) would be beneficial.",
        job_desc:"Playing with cornflour and water.", jobshop_desc: "GTA in MEE, the Diamond: Fluids Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a262.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a262.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a262.id, programme_id: $prog_gee.id).first_or_create!


    a263 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AER123").first.id, code: "100").first_or_create!(name: "AC Circuits",
        name_abrv: "ACC", archived: false, in_drive: false, user_id: 1)
    at263 = ActivityTimetable.where(activity_id: a263.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 7, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 20, setup_time: 20, takedown_time: 25, notes: "",
        capacity: 100, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a263.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "AC Circuits", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a263.id).first_or_create!(criteria: "Must be confident with use of oscilloscope, digital multimeter and signal generator
    Must understand simple passive filter networks (RC, RL, RCL)
    Must be confident calculating Q factor and describing reasons for experimental deviations from theory",
        job_desc:"Help students construct basic first order passive circuits (RC/RL/RLC) and use a signal generator to input voltages across them.
    Assist students in using oscilloscopes, signal generators and multimeters to make measurements of AC signals
    Remind students of non-idealities of components and help them explain differences between experiment and theory
    Ensure students consider experimental errors and quantify and analyse potential experimental error sources.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a263.id).first_or_create!(assess_weight: 14.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a263.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a263.id, programme_id: $prog_aero.id).first_or_create!


    a264 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE218").first.id, code: "100").first_or_create!(name: "AC Circuits",
        name_abrv: "ACC", archived: false, in_drive: false, user_id: 2)
    at264 = ActivityTimetable.where(activity_id: a264.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 7, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 20, setup_time: 20, takedown_time: 25, notes: "",
        capacity: 100, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a264.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "AC Circuits", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a264.id).first_or_create!(criteria: "Must be confident with use of oscilloscope, digital multimeter and signal generator
    Must understand simple passive filter networks (RC, RL, RCL)
    Must be confident calculating Q factor and describing reasons for experimental deviations from theory",
        job_desc:"Help students construct basic first order passive circuits (RC/RL/RLC) and use a signal generator to input voltages across them.
    Assist students in using oscilloscopes, signal generators and multimeters to make measurements of AC signals
    Remind students of non-idealities of components and help them explain differences between experiment and theory
    Ensure students consider experimental errors and quantify and analyse potential experimental error sources.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a264.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a264.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a264.id, programme_id: $prog_mec.id).first_or_create!


    a265 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE123").first.id, code: "100").first_or_create!(name: "AC Circuits",
        name_abrv: "ACC", archived: false, in_drive: false, user_id: 2)
    at265 = ActivityTimetable.where(activity_id: a265.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 7, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 20, setup_time: 20, takedown_time: 25, notes: "",
        capacity: 100, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a265.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "AC Circuits", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a265.id).first_or_create!(criteria: "Must be confident with use of oscilloscope, digital multimeter and signal generator
    Must understand simple passive filter networks (RC, RL, RCL)
    Must be confident calculating Q factor and describing reasons for experimental deviations from theory",
        job_desc:"Help students construct basic first order passive circuits (RC/RL/RLC) and use a signal generator to input voltages across them.
    Assist students in using oscilloscopes, signal generators and multimeters to make measurements of AC signals
    Remind students of non-idealities of components and help them explain differences between experiment and theory
    Ensure students consider experimental errors and quantify and analyse potential experimental error sources.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a265.id).first_or_create!(assess_weight: 14.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a265.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)


    a266 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AER123").first.id, code: "101").first_or_create!(name: "AC Circuits Exam",
        name_abrv: "ACEXAM", archived: true, in_drive: false, user_id: 4)
    at266 = ActivityTimetable.where(activity_id: a266.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a266.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "N/A", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a266.id).first_or_create!(criteria: "No GTAs required",
        job_desc:"No GTAs required", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a266.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a266.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a266.id, programme_id: $prog_aero.id).first_or_create!


    a267 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE123").first.id, code: "10").first_or_create!(name: "AC Circuits Exam",
        name_abrv: "ACEXAM", archived: true, in_drive: false, user_id: 3)
    at267 = ActivityTimetable.where(activity_id: a267.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a267.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "N/A", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a267.id).first_or_create!(criteria: "No GTAs required",
        job_desc:"No GTAs required", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a267.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a267.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)


    a268 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE225").first.id, code: "102").first_or_create!(name: "Amplifiers and Probes",
        name_abrv: "AMP1", archived: false, in_drive: false, user_id: 1)
    at268 = ActivityTimetable.where(activity_id: a268.id).first_or_create!(duration: 210, kit_prep_time: 700, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a268.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "Amplifiers", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a268.id).first_or_create!(criteria: "Must be confident in independently using oscilloscopes and signal generators
    Must be confident with analogue electronic circuits for small AC signals using amplifiers (op-amps and BJTs)
    Must be confident measuring rise times and phase shifts, and exploring the effect of feedback on amplifier circuits
    Must be confident soldering in difficult conditions",
        job_desc:"Help students to make advanced oscilloscope measurements, using averaging and good technique to measure small ac voltage signals
    Assist students in calculating the effects of cables and probes on measurements that they make
    Ensure students calibrate oscilloscope probes before taking measurements, and explain how the calibration process works
    Assist students in processing measured values, with an appreciataion of the experimental errrors involved", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 14.0)
    ActivityAssess.where(activity_id: a268.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a268.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a268.id, programme_id: $prog_eee.id).first_or_create!


    a269 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "PHY392").first.id, code: "103").first_or_create!(name: "Arduino",
        name_abrv: "ARDUINO", archived: false, in_drive: false, user_id: 1)
    at269 = ActivityTimetable.where(activity_id: a269.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 12, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a269.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a269.id).first_or_create!(criteria: "No GTAs required",
        job_desc:"No GTAs required", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a269.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a269.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a269.id, programme_id: $prog_phy.id).first_or_create!


    a270 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "105").first_or_create!(name: "Circuit Simulation using SPICE",
        name_abrv: "CSS", archived: false, in_drive: false, user_id: 2)
    at270 = ActivityTimetable.where(activity_id: a270.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 4, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "210 minutes x 2 sessions",
        capacity: 100, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a270.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "SPICE", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a270.id).first_or_create!(criteria: "Must be familiar with LTSpice simulation package
    Must be able to troubleshoot problems with students' simulations
    Must have knowledge of basic electronic circuits",
        job_desc:"Help students create simulations of analogue circuits using LTSpice software
    Debug issues with student code to ensure simulations run correctly
    Help students interpret measurements made in simulation and advice on how to use DC and AC simulation analysis for future experiments", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a270.id).first_or_create!(assess_weight: 10.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a270.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a270.id, programme_id: $prog_eee.id).first_or_create!


    a271 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE229").first.id, code: "106").first_or_create!(name: "Control of Motors",
        name_abrv: "SERVO", archived: false, in_drive: false, user_id: 2)
    at271 = ActivityTimetable.where(activity_id: a271.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 11, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 10, setup_time: 10, takedown_time: 10, notes: "As close as possible to other machines labs (220, 224, 228) - each student should do each on on a consecutive week, rather than getting all students through one lab, then the next lab etc.",
        capacity: 14, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a271.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a271.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a271.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a271.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a271.id, programme_id: $prog_eee.id).first_or_create!


    a272 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE202").first.id, code: "106").first_or_create!(name: "Control of Motors",
        name_abrv: "SERVO", archived: false, in_drive: false, user_id: 3)
    at272 = ActivityTimetable.where(activity_id: a272.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 10, setup_time: 10, takedown_time: 10, notes: "",
        capacity: 14, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a272.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a272.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a272.id).first_or_create!(assess_weight: nil, notes: "Marked lab sheets",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 1)
    ActivityTech.where(activity_id: a272.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a272.id, programme_id: $prog_gee.id).first_or_create!


    a273 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AER107").first.id, code: "107").first_or_create!(name: "Data Acquisition",
        name_abrv: "DAQ1", archived: false, in_drive: false, user_id: 1)
    at273 = ActivityTimetable.where(activity_id: a273.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a273.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "Data Acqusition", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a273.id).first_or_create!(criteria: "Must have experience in using LabView
    Must be able to troubleshoot and debug problems with students' LabVIEW code
    Must have experience constructing sensor circuits on a breadboard",
        job_desc:"Assist students with a series of exercises developing their skills in writing LabVIEW code
    Debug and troubleshoot student code issues
    Help students understand the construction of LabVIEW programmes following good data acquisition practice", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a273.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a273.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a273.id, programme_id: $prog_aero.id).first_or_create!


    a274 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "107").first_or_create!(name: "Data Acquisition",
        name_abrv: "DAQ1", archived: true, in_drive: false, user_id: 3)
    at274 = ActivityTimetable.where(activity_id: a274.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a274.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "Data Acqusition", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a274.id).first_or_create!(criteria: "Must have experience in using LabView
    Must be able to troubleshoot and debug problems with students' LabVIEW code
    Must have experience constructing sensor circuits on a breadboard",
        job_desc:"Assist students with a series of exercises developing their skills in writing LabVIEW code
    Debug and troubleshoot student code issues
    Help students understand the construction of LabVIEW programmes following good data acquisition practice", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a274.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a274.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a274.id, programme_id: $prog_eee.id).first_or_create!


    a275 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AMR131").first.id, code: "108").first_or_create!(name: "DC Circuits",
        name_abrv: "DCC", archived: false, in_drive: false, user_id: 4)
    at275 = ActivityTimetable.where(activity_id: a275.id).first_or_create!(duration: 180, kit_prep_time: 1400, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 20, notes: "",
        capacity: 140, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a275.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a275.id).first_or_create!(criteria: "Must be experienced building circuits on breadboards
    Must be able to use power supplies, multimeters and oscilloscopes to make measurements on circuits
    Must be able to apply Ohms Law
    Ideally familiar with DC circuit analysis e.g. node and loop analysis, and application of Kirchoff's laws",
        job_desc:"Help students to construct passive networks of resistors on a breadboard
    Students should bring circuit analysis with them of current/voltage (from node/loop analysis etc.) - help them check their theoretical calculations against experimental measurements
    Help students use oscilloscopes, multimeters and power supplies to measure basic DC levels.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a275.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a275.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a275.id, programme_id: $prog_amrc.id).first_or_create!


    a276 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE119").first.id, code: "109").first_or_create!(name: "Digital Logic Circuits",
        name_abrv: "DLC", archived: false, in_drive: false, user_id: 1)
    at276 = ActivityTimetable.where(activity_id: a276.id).first_or_create!(duration: 210, kit_prep_time: 120, min_week_num: 6, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "210 minutes x 2 sessions",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a276.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "Digital", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a276.id).first_or_create!(criteria: "Must be experienced and familiar with Xilinx ISE environment
    Must be experienced in Verilog code and able to debug student code in-lab
    Must have experience with FPGA hardware",
        job_desc:"Assist students using Xilinx software and hardware
    Help students design and implement a 2 bit adder in software using Verilog code
    Troubleshoot problems in downloading firmware to an FPGA board and simulating the performance of the hardware.
    Guide students to attempt an advanced task of creating a 4 bit adder using multiplexers.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a276.id).first_or_create!(assess_weight: 5.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a276.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a276.id, programme_id: $prog_eee.id).first_or_create!


    a277 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS133").first.id, code: "unknowncode8").first_or_create!(name: "EDanger",
        name_abrv: "eDGR", archived: false, in_drive: false, user_id: 3)
    at277 = ActivityTimetable.where(activity_id: a277.id).first_or_create!(duration: 120, kit_prep_time: 60, min_week_num: 1, max_week_num: 2, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 90, setup_time: 90, takedown_time: 60, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a277.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "eDanger", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a277.id).first_or_create!(criteria: "Must have an understanding of risk assessment to be able to check students' written work in the lab. Must be able to check student experimental setups and confidently intervene in student experiments if required.",
        job_desc:"Review risk assessments performed by the students prior to the lab and check that sensible work has been produced.
    Oversee a hazardous experiment being performed and ensure student safety by proactively intervening where necessary.
    Discuss the experiment with students to ensure they have understood the importance of risk assessment and of frequently reviewing and updating the risk assessments.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a277.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_p2p.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a277.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)


    a278 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "112").first_or_create!(name: "Fault Finding",
        name_abrv: "FFIND", archived: false, in_drive: false, user_id: 1)
    at278 = ActivityTimetable.where(activity_id: a278.id).first_or_create!(duration: 210, kit_prep_time: 360, min_week_num: 1, max_week_num: 4, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 30, notes: "This must come before ICP (ideally immediately before)",
        capacity: 24, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a278.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "Fault Finding", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a278.id).first_or_create!(criteria: "Must be capable of independently using an oscilloscope, multimeter and signal generator
    Must be familar with analogue electronics and constructing circuits on a PCB
    Must be skilled in soldering and testing circuit designs
    Must be confident troubleshooting analogue circuits constructed by students",
        job_desc:"Help students find faults on a pre-populated PCB
    Remind students how to calculate the resonant frequency of RLC circuits and how to calculate bandwidth and Q factor
    Assist students with AC and DC circuit analysis using an oscilloscope and multimeter
    Demonstrate desoldering with attention to detail", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a278.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a278.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a278.id, programme_id: $prog_eee.id).first_or_create!


    a279 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "113").first_or_create!(name: "Frequency Dependent Measurements",
        name_abrv: "WS3", archived: false, in_drive: false, user_id: 4)
    at279 = ActivityTimetable.where(activity_id: a279.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 3, max_week_num: 5, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 20, notes: "Must be before Passive Networks",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a279.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "Black Box", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a279.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must understand simple passive filter networks (RC, RL)
    Must be confident in graph plotting and data analysis in-lab",
        job_desc:"Assist students constructing series circuits using boxes containing unknown components.
    Help students use signal generators and oscilloscopes to make voltage measurements across a range of frequencies and plot the data by hand.
    Assist students in interpreting their measurements to identify the components inside the boxes.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a279.id).first_or_create!(assess_weight: 10.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_short.id, num_assess: 2)
    ActivityTech.where(activity_id: a279.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a279.id, programme_id: $prog_eee.id).first_or_create!


    a280 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE102").first.id, code: "113").first_or_create!(name: "Frequency Dependent Measurements",
        name_abrv: "WS3", archived: false, in_drive: false, user_id: 4)
    at280 = ActivityTimetable.where(activity_id: a280.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 9, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 20, setup_time: 15, takedown_time: 20, notes: "Must be before Passive Networks",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a280.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "Black Box", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a280.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must understand simple passive filter networks (RC, RL)
    Must be confident in graph plotting and data analysis in-lab",
        job_desc:"Assist students constructing series circuits using boxes containing unknown components.
    Help students use signal generators and oscilloscopes to make voltage measurements across a range of frequencies and plot the data by hand.
    Assist students in interpreting their measurements to identify the components inside the boxes.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a280.id).first_or_create!(assess_weight: 5.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 2)
    ActivityTech.where(activity_id: a280.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a280.id, programme_id: $prog_gee.id).first_or_create!


    a281 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "114").first_or_create!(name: "Individual Construction Project",
        name_abrv: "ICP", archived: false, in_drive: false, user_id: 3)
    at281 = ActivityTimetable.where(activity_id: a281.id).first_or_create!(duration: 210, kit_prep_time: 700, min_week_num: 5, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "210 minutes x 4 sessions",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a281.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "ICP", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a281.id).first_or_create!(criteria: "Must be capable of independently using an oscilloscope, multimeter and signal generator
    Must be familar with analogue electronics and constructing circuits on a PCB
    Must be skilled in soldering and testing circuit designs
    Must be confident troubleshooting analogue circuits constructed by students",
        job_desc:"Help students construct an infra-red communication transmitter by soldering a PCB
    Advise students on component choice for desired frequency response (LCR resonant frequency and passive RC filters)
    Troubleshoot problems with students' circuits by using oscilloscopes and multimeters
    Demonstrate soldering and desoldering techniques for students and assist them in correcting circuit construction faults", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a281.id).first_or_create!(assess_weight: 30.0, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 2)
    ActivityTech.where(activity_id: a281.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a281.id, programme_id: $prog_eee.id).first_or_create!


    a282 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE229").first.id, code: "115").first_or_create!(name: "Induction Machines",
        name_abrv: "ACMACH", archived: false, in_drive: false, user_id: 1)
    at282 = ActivityTimetable.where(activity_id: a282.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 27, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 10, setup_time: 10, takedown_time: 10, notes: "As close as possible to other machines labs (220, 224, 228) - each student should do each on on a consecutive week, rather than getting all students through one lab, then the next lab etc.",
        capacity: 14, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a282.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "AC Machines", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a282.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a282.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a282.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a282.id, programme_id: $prog_eee.id).first_or_create!


    a283 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE202").first.id, code: "115").first_or_create!(name: "Induction Machines",
        name_abrv: "ACMACH", archived: false, in_drive: false, user_id: 2)
    at283 = ActivityTimetable.where(activity_id: a283.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 10, setup_time: 10, takedown_time: 10, notes: "",
        capacity: 14, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a283.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "AC Machines", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a283.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a283.id).first_or_create!(assess_weight: nil, notes: "Marked lab sheets",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 1)
    ActivityTech.where(activity_id: a283.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a283.id, programme_id: $prog_gee.id).first_or_create!


    a284 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE118").first.id, code: "116").first_or_create!(name: "LED",
        name_abrv: "LED", archived: false, in_drive: false, user_id: 1)
    at284 = ActivityTimetable.where(activity_id: a284.id).first_or_create!(duration: 150, kit_prep_time: 180, min_week_num: 7, max_week_num: 12, pref_room_id: $room_cr.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "Must be after clean room intro - micro measurement",
        capacity: 16, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a284.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "LED", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a284.id).first_or_create!(criteria: "Basic cleanroom skills.",
        job_desc:"Assist  Year 1 EEE students to make top contact on GaN LED and then do IV and optical tests using probe station, SMU and optical spectometer.", jobshop_desc: "GTA in MEE, the Diamond: Clean Room", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a284.id).first_or_create!(assess_weight: 7.5, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 2)
    ActivityTech.where(activity_id: a284.id).first_or_create!(cost_per_student: nil, equip_needed: "8 probe stations, 10 microscope cameras, 2 metallurgical microscopes, 8 PCs with Keysight Quick IV and Motic Images Plus 3 software, 8 SMUs, 4 spectrometers, 2 power meters, 2 scalpels, 2 magnifying lamps, 1 hot plate, 8 pairs tweezers",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a284.id, programme_id: $prog_eee.id).first_or_create!


    a285 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE227").first.id, code: "117").first_or_create!(name: "Modulation",
        name_abrv: "MDX", archived: false, in_drive: false, user_id: 1)
    at285 = ActivityTimetable.where(activity_id: a285.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "210 minutes x 2 sessions",
        capacity: 100, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a285.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "Modulation", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a285.id).first_or_create!(criteria: "Must be confident building circuits on a breadboard
    Must be aware of simple signal modulation (amplitude modulation including sideband suppression)
    Must be able to indpendently use an oscilloscope and signal generator
    Must be confident displaying signals in the frequency domain (oscilloscope FFT) and helping students interpret frequency responses",
        job_desc:"Help students to construct circuits on a breadboard, using a modulation chip (signal multiplier)
    Debug and troubleshoot student circuit construction
    Help students to interpret their measurements in both the time and frequency domains
    Discuss the differences between different modulation formats with students and describe different methods of performing modulation and demodulation", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 14.0)
    ActivityAssess.where(activity_id: a285.id).first_or_create!(assess_weight: 20.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a285.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a285.id, programme_id: $prog_eee.id).first_or_create!


    a286 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE227").first.id, code: "117").first_or_create!(name: "Modulation",
        name_abrv: "MDX", archived: true, in_drive: false, user_id: 2)
    at286 = ActivityTimetable.where(activity_id: a286.id).first_or_create!(duration: 210, kit_prep_time: 60, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "210 minutes x 2 sessions",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a286.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "Modulation", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a286.id).first_or_create!(criteria: "Must be confident building circuits on a breadboard
    Must be aware of simple signal modulation (amplitude modulation including sideband suppression)
    Must be able to indpendently use an oscilloscope and signal generator
    Must be confident displaying signals in the frequency domain (oscilloscope FFT) and helping students interpret frequency responses",
        job_desc:"Help students to construct circuits on a breadboard, using a modulation chip (signal multiplier)
    Debug and troubleshoot student circuit construction
    Help students to interpret their measurements in both the time and frequency domains
    Discuss the differences between different modulation formats with students and describe different methods of performing modulation and demodulation", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 14.0)
    ActivityAssess.where(activity_id: a286.id).first_or_create!(assess_weight: 20.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a286.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a286.id, programme_id: $prog_aero.id).first_or_create!


    a287 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE227").first.id, code: "117").first_or_create!(name: "Modulation",
        name_abrv: "MDX", archived: false, in_drive: false, user_id: 5)
    at287 = ActivityTimetable.where(activity_id: a287.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "210 minutes x 2 sessions",
        capacity: 100, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a287.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "Modulation", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a287.id).first_or_create!(criteria: "Must be confident building circuits on a breadboard
    Must be aware of simple signal modulation (amplitude modulation including sideband suppression)
    Must be able to indpendently use an oscilloscope and signal generator
    Must be confident displaying signals in the frequency domain (oscilloscope FFT) and helping students interpret frequency responses",
        job_desc:"Help students to construct circuits on a breadboard, using a modulation chip (signal multiplier)
    Debug and troubleshoot student circuit construction
    Help students to interpret their measurements in both the time and frequency domains
    Discuss the differences between different modulation formats with students and describe different methods of performing modulation and demodulation", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 14.0)
    ActivityAssess.where(activity_id: a287.id).first_or_create!(assess_weight: 20.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a287.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a287.id, programme_id: $prog_bio.id).first_or_create!


    a288 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AER223").first.id, code: "118").first_or_create!(name: "Op-Amps",
        name_abrv: "AMPS", archived: false, in_drive: false, user_id: 2)
    at288 = ActivityTimetable.where(activity_id: a288.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 12, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 20, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a288.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "Op Amps", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a288.id).first_or_create!(criteria: "Must be experienced building circuits on breadboards
    Must be confdent using oscilloscopes and signal generators to take AC signal measurements
    Must have theoretical knowledge of basic op-amp circuits
    Must be able to troubleshoot student circuit construction",
        job_desc:"Help students to construct basic op-amp circuits (inverting/non-inverting) on a breadboard 
    Assist students in using oscilloscopes and signal generators to characterise their circuits
    Describe the fetures of op-amp frequency response (constant gain-bandwidth product etc)", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a288.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a288.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a288.id, programme_id: $prog_aero.id).first_or_create!


    a289 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE123").first.id, code: "118").first_or_create!(name: "Op-Amps",
        name_abrv: "AMPS", archived: false, in_drive: false, user_id: 5)
    at289 = ActivityTimetable.where(activity_id: a289.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 12, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 20, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a289.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "Op Amps", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a289.id).first_or_create!(criteria: "Must be experienced building circuits on breadboards
    Must be confdent using oscilloscopes and signal generators to take AC signal measurements
    Must have theoretical knowledge of basic op-amp circuits
    Must be able to troubleshoot student circuit construction",
        job_desc:"Help students to construct basic op-amp circuits (inverting/non-inverting) on a breadboard 
    Assist students in using oscilloscopes and signal generators to characterise their circuits
    Describe the fetures of op-amp frequency response (constant gain-bandwidth product etc)", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a289.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a289.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)


    a290 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE225").first.id, code: "119").first_or_create!(name: "Operational Amplifiers",
        name_abrv: "AMP2", archived: false, in_drive: false, user_id: 5)
    at290 = ActivityTimetable.where(activity_id: a290.id).first_or_create!(duration: 210, kit_prep_time: 120, min_week_num: 6, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "Must be after Amplifiers & Probes",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a290.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "Amplifiers", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a290.id).first_or_create!(criteria: "Must be confident in independently using oscilloscopes and signal generators
    Must be confident with analogue electronic circuits for small AC signals using amplifiers (op-amps and BJTs)
    Must be confident measuring rise times and phase shifts, and exploring the effect of feedback on amplifier circuits
    Must be confident soldering in difficult conditions",
        job_desc:"Assist students in soldering components onto a PCB to construct a range of amplifier circuits (op-amp and BJT designs)
    Explain to students how feedback operates in analogue amplifier circuits and the effect of moving the feedback path on signal distortion
    Guide students to explore signal distortion and clipping, and to observe the effect of diode drop voltages in amplifier circuits
    Ensure that students solder safely and accurately on a challenging PCB", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 14.0)
    ActivityAssess.where(activity_id: a290.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a290.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a290.id, programme_id: $prog_eee.id).first_or_create!


    a291 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE117").first.id, code: "120").first_or_create!(name: "Passive Network Circuits",
        name_abrv: "PN", archived: false, in_drive: false, user_id: 3)
    at291 = ActivityTimetable.where(activity_id: a291.id).first_or_create!(duration: 210, kit_prep_time: 700, min_week_num: 4, max_week_num: 7, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 20, notes: "210 minutes x 2 sessions. After Freq Dependent Measurements",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a291.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "Passive Networks", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a291.id).first_or_create!(criteria: "Must be confident with use of oscilloscope, digital multimeter and signal generator
    Must understand simple passive filter networks (RC, RL, RCL)
    Must be confident calculating Q factor and describing reasons for experimental deviations from theory",
        job_desc:"Help students construct basic first order passive circuits (RC/RL/RLC) and use a signal generator to input voltages across them.
    Assist students in using oscilloscopes, signal generators and multimeters to make measurements of AC signals
    Remind students of non-idealities of components and help them explain differences between experiment and theory
    Ensure students consider experimental errors and quantify and analyse potential experimental error sources.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a291.id).first_or_create!(assess_weight: 7.5, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a291.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a291.id, programme_id: $prog_eee.id).first_or_create!


    a292 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE102").first.id, code: "120").first_or_create!(name: "Passive Network Circuits",
        name_abrv: "PN", archived: false, in_drive: false, user_id: 5)
    at292 = ActivityTimetable.where(activity_id: a292.id).first_or_create!(duration: 210, kit_prep_time: 700, min_week_num: 1, max_week_num: 6, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 20, notes: "After Freq Dependent Measurements",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a292.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "Passive Networks", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a292.id).first_or_create!(criteria: "Must be confident with use of oscilloscope, digital multimeter and signal generator
    Must understand simple passive filter networks (RC, RL, RCL)
    Must be confident calculating Q factor and describing reasons for experimental deviations from theory",
        job_desc:"Help students construct basic first order passive circuits (RC/RL/RLC) and use a signal generator to input voltages across them.
    Assist students in using oscilloscopes, signal generators and multimeters to make measurements of AC signals
    Remind students of non-idealities of components and help them explain differences between experiment and theory
    Ensure students consider experimental errors and quantify and analyse potential experimental error sources.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a292.id).first_or_create!(assess_weight: 15.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a292.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a292.id, programme_id: $prog_gee.id).first_or_create!


    a293 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE229").first.id, code: "121").first_or_create!(name: "Permanent Magnet DC Machines",
        name_abrv: "DCMACH", archived: false, in_drive: false, user_id: 1)
    at293 = ActivityTimetable.where(activity_id: a293.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 10, setup_time: 10, takedown_time: 10, notes: "As close as possible to other machines labs (220, 224, 228) - each student should do each on on a consecutive week, rather than getting all students through one lab, then the next lab etc.",
        capacity: 14, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a293.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a293.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a293.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a293.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a293.id, programme_id: $prog_eee.id).first_or_create!


    a294 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE202").first.id, code: "121").first_or_create!(name: "Permanent Magnet DC Machines",
        name_abrv: "DCMACH", archived: false, in_drive: false, user_id: 3)
    at294 = ActivityTimetable.where(activity_id: a294.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 10, setup_time: 10, takedown_time: 10, notes: "",
        capacity: 14, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a294.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a294.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a294.id).first_or_create!(assess_weight: nil, notes: "Marked lab sheets",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 1)
    ActivityTech.where(activity_id: a294.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a294.id, programme_id: $prog_gee.id).first_or_create!


    a295 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE225").first.id, code: "123").first_or_create!(name: "Power Amplifiers",
        name_abrv: "AMP3", archived: false, in_drive: false, user_id: 4)
    at295 = ActivityTimetable.where(activity_id: a295.id).first_or_create!(duration: 210, kit_prep_time: 700, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "Must come after Operational Amplifiers (not Op-Amps)",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a295.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "Amplifiers", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a295.id).first_or_create!(criteria: "Must be confident in independently using oscilloscopes and signal generators
    Must be confident with analogue electronic circuits for small AC signals using amplifiers (op-amps and BJTs)
    Must be confident measuring rise times and phase shifts, and exploring the effect of feedback on amplifier circuits
    Must be confident soldering in difficult conditions",
        job_desc:"Assist students in soldering components onto a PCB to construct a range of amplifier circuits (op-amp and BJT designs)
    Explain to students how feedback operates in analogue amplifier circuits and the effect of moving the feedback path on signal distortion
    Guide students to explore signal distortion and clipping, and to observe the effect of diode drop voltages in amplifier circuits
    Ensure that students solder safely and accurately on a challenging PCB", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 14.0)
    ActivityAssess.where(activity_id: a295.id).first_or_create!(assess_weight: 7.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 1)
    ActivityTech.where(activity_id: a295.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a295.id, programme_id: $prog_eee.id).first_or_create!


    a296 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE229").first.id, code: "124").first_or_create!(name: "PWM Inductive",
        name_abrv: "PE2", archived: false, in_drive: false, user_id: 2)
    at296 = ActivityTimetable.where(activity_id: a296.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 27, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 40, notes: "PE1 and PE2 are effectively a 2 part lab, a continuation of the same experiment. Try to keep them close for each student - same week or consecutive weeks",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a296.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a296.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a296.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a296.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a296.id, programme_id: $prog_eee.id).first_or_create!


    a297 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE202").first.id, code: "124").first_or_create!(name: "PWM Inductive",
        name_abrv: "PE2", archived: false, in_drive: false, user_id: 5)
    at297 = ActivityTimetable.where(activity_id: a297.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 40, notes: "PE1 and PE2 are effectively a 2 part lab, a continuation of the same experiment. Try to keep them close for each student - same week or consecutive weeks",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a297.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a297.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a297.id).first_or_create!(assess_weight: nil, notes: "Assessed with PWM Resistive - should really be combined",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a297.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a297.id, programme_id: $prog_gee.id).first_or_create!


    a298 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE229").first.id, code: "125").first_or_create!(name: "PWM Resistive",
        name_abrv: "PE1", archived: false, in_drive: false, user_id: 2)
    at298 = ActivityTimetable.where(activity_id: a298.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 27, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 40, notes: "PE1 and PE2 are effectively a 2 part lab, a continuation of the same experiment. Try to keep them close for each student - same week or consecutive weeks",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a298.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a298.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a298.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a298.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a298.id, programme_id: $prog_eee.id).first_or_create!


    a299 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE202").first.id, code: "125").first_or_create!(name: "PWM Resistive",
        name_abrv: "PE1", archived: false, in_drive: false, user_id: 2)
    at299 = ActivityTimetable.where(activity_id: a299.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 40, notes: "PE1 and PE2 are effectively a 2 part lab, a continuation of the same experiment. Try to keep them close for each student - same week or consecutive weeks",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a299.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a299.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a299.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 1)
    ActivityTech.where(activity_id: a299.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a299.id, programme_id: $prog_gee.id).first_or_create!


    a300 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AMR131").first.id, code: "128").first_or_create!(name: "RLC Circuits",
        name_abrv: "RLCC", archived: false, in_drive: false, user_id: 4)
    at300 = ActivityTimetable.where(activity_id: a300.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 20, setup_time: 20, takedown_time: 25, notes: "",
        capacity: 100, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a300.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a300.id).first_or_create!(criteria: "Must be confident with use of oscilloscope, digital multimeter and signal generator
    Must understand simple passive filter networks (RC, RL, RCL)
    Must be confident calculating Q factor and describing reasons for experimental deviations from theory",
        job_desc:"Help students construct basic first order passive circuits (RC/RL/RLC) and use a signal generator to input voltages across them.
    Assist students in using oscilloscopes, signal generators and multimeters to make measurements of AC signals
    Remind students of non-idealities of components and help them explain differences between experiment and theory
    Ensure students consider experimental errors and quantify and analyse potential experimental error sources.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a300.id).first_or_create!(assess_weight: 30.0, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a300.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a300.id, programme_id: $prog_amrc.id).first_or_create!


    a301 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE118").first.id, code: "129").first_or_create!(name: "Simple Single Transistor Amplifier",
        name_abrv: "BJT", archived: false, in_drive: false, user_id: 1)
    at301 = ActivityTimetable.where(activity_id: a301.id).first_or_create!(duration: 210, kit_prep_time: 700, min_week_num: 1, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "210 minutes x 2 sessions. The two sessions should be as close as possible. Ideally on consecutive days.",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a301.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "BJT", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a301.id).first_or_create!(criteria: "Must be familiar with simple transistor (BJT) circuits
    Must be confident constructing circuits and using digital multimeters and signal generators
    Must be confident helping students draw graphs and draw conclusions from measured data",
        job_desc:"Help students construct simple circuits using bipolar junction transistors
    Assist students to make current and voltage measurements on", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a301.id).first_or_create!(assess_weight: 7.5, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 2)
    ActivityTech.where(activity_id: a301.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a301.id, programme_id: $prog_eee.id).first_or_create!


    a302 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AER223").first.id, code: "130").first_or_create!(name: "Switching Transistors",
        name_abrv: "PT", archived: false, in_drive: false, user_id: 3)
    at302 = ActivityTimetable.where(activity_id: a302.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 40, notes: "",
        capacity: 50, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a302.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "Switching Transistors", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a302.id).first_or_create!(criteria: "Must be familiar with MOSFET power switching circuits
    Must be comforatble using an oscilloscope
    Must be able to safely set up and troubleshoot high power switching circuitry
    Must be familiar with resitive and inductive loads",
        job_desc:"A single lab session exploring MOSFETs used to drive both resistive and inductive loads. You will need to support students performing simulations in Simulink and interpreting current/voltage graphs. You will then need to help them construct a switching electronics system, using AC power, MOSFETs under FPGA control and an oscilloscope.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a302.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a302.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a302.id, programme_id: $prog_aero.id).first_or_create!


    a303 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE123").first.id, code: "130").first_or_create!(name: "Switching Transistors",
        name_abrv: "PT", archived: false, in_drive: false, user_id: 2)
    at303 = ActivityTimetable.where(activity_id: a303.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 40, notes: "",
        capacity: 50, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a303.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "Switching Transistors", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a303.id).first_or_create!(criteria: "Must be familiar with MOSFET power switching circuits
    Must be comforatble using an oscilloscope
    Must be able to safely set up and troubleshoot high power switching circuitry
    Must be familiar with resitive and inductive loads",
        job_desc:"A single lab session exploring MOSFETs used to drive both resistive and inductive loads. You will need to support students performing simulations in Simulink and interpreting current/voltage graphs. You will then need to help them construct a switching electronics system, using AC power, MOSFETs under FPGA control and an oscilloscope.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a303.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a303.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)


    a304 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE102").first.id, code: "131").first_or_create!(name: "Transformers",
        name_abrv: "TFM", archived: false, in_drive: false, user_id: 5)
    at304 = ActivityTimetable.where(activity_id: a304.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 7, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 90, takedown_time: 90, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a304.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "Transformers", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a304.id).first_or_create!(criteria: "Must be familiar with transformers and inductors
    Must be familiar with high voltage AC circuits
    Must be confident checking the safety of high voltage and high current experiments
    Ideally confident in theoretical transformer models and how to measure the deviation of experiment from ideality",
        job_desc:"Help students measure the efficiency and other characteristics of transformers
    Identify differences between ideal transformers and experimental characterisations of real transformers
    Ensure that students make high voltage and high current measurements safely, including checking risk assessments before commencing work.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a304.id).first_or_create!(assess_weight: 5.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a304.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a304.id, programme_id: $prog_gee.id).first_or_create!


    a305 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE117").first.id, code: "132").first_or_create!(name: "Transformers & Coupled Circuits",
        name_abrv: "TFCC", archived: false, in_drive: false, user_id: 2)
    at305 = ActivityTimetable.where(activity_id: a305.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 1, max_week_num: 5, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 90, takedown_time: 90, notes: "210 minutes x 2 sessions. 2 sessions should be same week or as close together as possible",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a305.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "Transformers Coupled Circuits", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a305.id).first_or_create!(criteria: "Must be familiar with transformers and inductors
    Must be familiar with high voltage AC circuits
    Must be confident checking the safety of high voltage and high current experiments
    Ideally confident in theoretical transformer models and how to measure the deviation of experiment from ideality",
        job_desc:"Help students measure the efficiency and other characteristics of transformers
    Identify differences between ideal transformers and experimental characterisations of real transformers
    Ensure that students make high voltage and high current measurements safely, including checking risk assessments before commencing work.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a305.id).first_or_create!(assess_weight: 7.5, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a305.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a305.id, programme_id: $prog_eee.id).first_or_create!


    a306 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "133").first_or_create!(name: "Transient Signal Measurements",
        name_abrv: "WS2", archived: false, in_drive: false, user_id: 5)
    at306 = ActivityTimetable.where(activity_id: a306.id).first_or_create!(duration: 210, kit_prep_time: 1400, min_week_num: 2, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a306.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "WS2", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a306.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Provide guidance to students on advanced oscilloscope skills i.e. data export and specialist triggering/measurement modes
    Train students to calibrate oscilloscopes before use.
    Explain principles of diode rectification and demonstrate them using LEDs soldered on a PCB
    Supervise students to safely solder a small PCB using a circuit diagram to guide them - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a306.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a306.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a306.id, programme_id: $prog_eee.id).first_or_create!


    a307 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE221").first.id, code: "133").first_or_create!(name: "Transient Signal Measurements",
        name_abrv: "WS2", archived: false, in_drive: false, user_id: 3)
    at307 = ActivityTimetable.where(activity_id: a307.id).first_or_create!(duration: 210, kit_prep_time: 1400, min_week_num: 2, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a307.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "WS2", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a307.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Provide guidance to students on advanced oscilloscope skills i.e. data export and specialist triggering/measurement modes
    Train students to calibrate oscilloscopes before use.
    Explain principles of diode rectification and demonstrate them using LEDs soldered on a PCB
    Supervise students to safely solder a small PCB using a circuit diagram to guide them - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a307.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a307.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a307.id, programme_id: $prog_eee.id).first_or_create!


    a308 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE102").first.id, code: "133").first_or_create!(name: "Transient Signal Measurements",
        name_abrv: "WS2", archived: false, in_drive: false, user_id: 2)
    at308 = ActivityTimetable.where(activity_id: a308.id).first_or_create!(duration: 180, kit_prep_time: 1400, min_week_num: 4, max_week_num: 8, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a308.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "WS2", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a308.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Provide guidance to students on advanced oscilloscope skills i.e. data export and specialist triggering/measurement modes
    Train students to calibrate oscilloscopes before use.
    Explain principles of diode rectification and demonstrate them using LEDs soldered on a PCB
    Supervise students to safely solder a small PCB using a circuit diagram to guide them - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a308.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a308.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a308.id, programme_id: $prog_gee.id).first_or_create!


    a309 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AER123").first.id, code: "134").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "WS", archived: false, in_drive: false, user_id: 1)
    at309 = ActivityTimetable.where(activity_id: a309.id).first_or_create!(duration: 180, kit_prep_time: 350, min_week_num: 1, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a309.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "WS1", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a309.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Help students construct a resistor potential divider on a breadboard, then take measurements on it using multimeters and oscilloscopes. 
    Ensure the students appreciate measurement device impedance and the importance of clear data recording.
    Help train the students to independently use an oscilloscope, signal generator and multimeter.
    Supervise students to safely solder a small PCB - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a309.id).first_or_create!(assess_weight: 6.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a309.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a309.id, programme_id: $prog_aero.id).first_or_create!


    a310 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE123").first.id, code: "134").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "WS", archived: false, in_drive: false, user_id: 1)
    at310 = ActivityTimetable.where(activity_id: a310.id).first_or_create!(duration: 180, kit_prep_time: 350, min_week_num: 1, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a310.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "WS1", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a310.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Help students construct a resistor potential divider on a breadboard, then take measurements on it using multimeters and oscilloscopes. 
    Ensure the students appreciate measurement device impedance and the importance of clear data recording.
    Help train the students to independently use an oscilloscope, signal generator and multimeter.
    Supervise students to safely solder a small PCB - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a310.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a310.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)


    a311 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE218").first.id, code: "134").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "WS", archived: false, in_drive: false, user_id: 1)
    at311 = ActivityTimetable.where(activity_id: a311.id).first_or_create!(duration: 180, kit_prep_time: 350, min_week_num: 1, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a311.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "WS1", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a311.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Help students construct a resistor potential divider on a breadboard, then take measurements on it using multimeters and oscilloscopes. 
    Ensure the students appreciate measurement device impedance and the importance of clear data recording.
    Help train the students to independently use an oscilloscope, signal generator and multimeter.
    Supervise students to safely solder a small PCB - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a311.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a311.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a311.id, programme_id: $prog_mec.id).first_or_create!


    a312 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE221").first.id, code: "134").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "WS", archived: false, in_drive: false, user_id: 5)
    at312 = ActivityTimetable.where(activity_id: a312.id).first_or_create!(duration: 180, kit_prep_time: 350, min_week_num: 1, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a312.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "WS1", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a312.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Help students construct a resistor potential divider on a breadboard, then take measurements on it using multimeters and oscilloscopes. 
    Ensure the students appreciate measurement device impedance and the importance of clear data recording.
    Help train the students to independently use an oscilloscope, signal generator and multimeter.
    Supervise students to safely solder a small PCB - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a312.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_form.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a312.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a312.id, programme_id: $prog_eee.id).first_or_create!


    a313 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "135").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "WS1", archived: false, in_drive: false, user_id: 1)
    at313 = ActivityTimetable.where(activity_id: a313.id).first_or_create!(duration: 180, kit_prep_time: 350, min_week_num: 1, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a313.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "WS1", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a313.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Help students construct a resistor potential divider on a breadboard, then take measurements on it using multimeters and oscilloscopes. 
    Ensure the students appreciate measurement device impedance and the importance of clear data recording.
    Help train the students to independently use an oscilloscope, signal generator and multimeter.
    Supervise students to safely solder a small PCB - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a313.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a313.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a313.id, programme_id: $prog_eee.id).first_or_create!


    a314 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE102").first.id, code: "135").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "WS1", archived: false, in_drive: false, user_id: 5)
    at314 = ActivityTimetable.where(activity_id: a314.id).first_or_create!(duration: 180, kit_prep_time: 350, min_week_num: 1, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "",
        capacity: 140, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a314.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "WS1", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a314.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Help students construct a resistor potential divider on a breadboard, then take measurements on it using multimeters and oscilloscopes. 
    Ensure the students appreciate measurement device impedance and the importance of clear data recording.
    Help train the students to independently use an oscilloscope, signal generator and multimeter.
    Supervise students to safely solder a small PCB - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a314.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_mole.id, num_assess: 2)
    ActivityTech.where(activity_id: a314.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a314.id, programme_id: $prog_gee.id).first_or_create!


    a315 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE227").first.id, code: "136E").first_or_create!(name: "Signals and Filters",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at315 = ActivityTimetable.where(activity_id: a315.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "To follow modulation",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a315.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a315.id).first_or_create!(criteria: "Must be confident in frequency domain signal analysis
    Must have knowledge of simple modulation formats (amplitude modulation etc.)
    Must be able to explain frequency domain filtering effects (aliasing etc.) and their importance in the modulation/demodulation process
    Must have basic knowledge of first order passive filter construction i.e. RC circuits",
        job_desc:"Help students explore the response of filters in the time and frequency domain
    Help students construct a circuit to modulate audio signals onto a carrier frequency
    Advise students on appropriate choice of filter properties (cut-off frequency, roll-off etc.)
    Troubleshoot student circuit constructions and explain the effects of fitering on the signal", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a315.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a315.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a315.id, programme_id: $prog_eee.id).first_or_create!


    a316 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE227").first.id, code: "136E").first_or_create!(name: "Signals and Filters",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at316 = ActivityTimetable.where(activity_id: a316.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "To follow modulation",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a316.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a316.id).first_or_create!(criteria: "Must be confident in frequency domain signal analysis
    Must have knowledge of simple modulation formats (amplitude modulation etc.)
    Must be able to explain frequency domain filtering effects (aliasing etc.) and their importance in the modulation/demodulation process
    Must have basic knowledge of first order passive filter construction i.e. RC circuits",
        job_desc:"Help students explore the response of filters in the time and frequency domain
    Help students construct a circuit to modulate audio signals onto a carrier frequency
    Advise students on appropriate choice of filter properties (cut-off frequency, roll-off etc.)
    Troubleshoot student circuit constructions and explain the effects of fitering on the signal", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a316.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a316.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a316.id, programme_id: $prog_bio.id).first_or_create!


    a317 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE118").first.id, code: "137").first_or_create!(name: "Clean room intro - micro-measurement",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at317 = ActivityTimetable.where(activity_id: a317.id).first_or_create!(duration: 150, kit_prep_time: 180, min_week_num: 1, max_week_num: 6, pref_room_id: $room_cr.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 16, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a317.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a317.id).first_or_create!(criteria: "Must have an interest in basic clean room operations
    Must understand simple resistivity measurements
    Must be confident in estimating experimental error and calculating error propagation",
        job_desc:"Introduce students to the clean room environment and explain the need for the safety and environmental precautions in place.
    Demonstrate key pieces of cleanroom equipment to the students. Assist the students with the use of probe stations to make resistivity measurements and help them analyse their data.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a317.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a317.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a317.id, programme_id: $prog_eee.id).first_or_create!


    a318 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE221").first.id, code: "137").first_or_create!(name: "Clean room intro - micro-measurement",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at318 = ActivityTimetable.where(activity_id: a318.id).first_or_create!(duration: 150, kit_prep_time: 180, min_week_num: 1, max_week_num: 6, pref_room_id: $room_cr.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "For direct entry 2nd year students only",
        capacity: 16, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a318.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a318.id).first_or_create!(criteria: "Must have an interest in basic clean room operations
    Must understand simple resistivity measurements
    Must be confident in estimating experimental error and calculating error propagation",
        job_desc:"Introduce students to the clean room environment and explain the need for the safety and environmental precautions in place.
    Demonstrate key pieces of cleanroom equipment to the students. Assist the students with the use of probe stations to make resistivity measurements and help them analyse their data.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a318.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a318.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a318.id, programme_id: $prog_eee.id).first_or_create!


    a319 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE102").first.id, code: "137").first_or_create!(name: "Clean room intro - micro-measurement",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at319 = ActivityTimetable.where(activity_id: a319.id).first_or_create!(duration: 150, kit_prep_time: 180, min_week_num: 1, max_week_num: 12, pref_room_id: $room_cr.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 16, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a319.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a319.id).first_or_create!(criteria: "Must have an interest in basic clean room operations
    Must understand simple resistivity measurements
    Must be confident in estimating experimental error and calculating error propagation",
        job_desc:"Introduce students to the clean room environment and explain the need for the safety and environmental precautions in place.
    Demonstrate key pieces of cleanroom equipment to the students. Assist the students with the use of probe stations to make resistivity measurements and help them analyse their data.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a319.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a319.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a319.id, programme_id: $prog_gee.id).first_or_create!


    a320 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "138").first_or_create!(name: "Introduction to Arduino and IoT",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at320 = ActivityTimetable.where(activity_id: a320.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 140, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a320.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a320.id).first_or_create!(criteria: "Must have experience in building circuits on breadboards
    Must have experience in programming Arduino using the Arduino IDE
    Must be comfortable debugging and troubleshooting student code and circuits",
        job_desc:"Assist students in constructing simple circuits on a breadboard with an Arduino controller. Help students to debug and troubleshoot their Arduino code.
    Help students working through a series of exercises to introduce the Arduino platform, leading to an open construction task at the end of the lab.", jobshop_desc: "", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a320.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a320.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a320.id, programme_id: $prog_eee.id).first_or_create!


    a321 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "139").first_or_create!(name: "Solar Energy",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at321 = ActivityTimetable.where(activity_id: a321.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a321.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a321.id).first_or_create!(criteria: "Must have experience in building circuits on breadboards
    Must be familiar with solar cell operation (short circuit current/open circuit voltage/serial and parallel panels/bypass diodes)
    Must be competent with use of digital multimeter",
        job_desc:"Assist students in characterising individual solar cells (short circuit current/open circuit voltage/fill factor under LED, halogen and coloured filtered illumination sources).
    Assist students in combining individual cells into panels in series and parallel for further characterisation.
    Explain the need for practical considerations such as bypass diodes and demonstrate their necessity in partial shaded use of solar panels
    Help students construct a solar panel circuit to drive a motor and propeller", jobshop_desc: "", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a321.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a321.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a321.id, programme_id: $prog_eee.id).first_or_create!


    a322 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "140").first_or_create!(name: "Building a Solar MPPT",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at322 = ActivityTimetable.where(activity_id: a322.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a322.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a322.id).first_or_create!(criteria: "Must have experience in building circuits on breadboards
    Must have experience in programming Arduino using the Arduino IDE
    Must be comfortable debugging and troubleshooting student code and circuits
    Ideally familiar with solar maximum power point trackers and associated algorithms",
        job_desc:"Help students recall skills from prior labs (Arduino intro, and solar cell characterisation) to construct a maximum power point tracking system.
    Assist the students in writing Arduino code to monitor the voltage and current produced by a solar panel under a dynamic load.
    Help the students implement a maximum power point tracking algorithm by varying the panel load for maximum power output
    Troubleshoot both circuit hardware problems and issues with student code
    Help students test their hardware and software designs and suggest improvements", jobshop_desc: "", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a322.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a322.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a322.id, programme_id: $prog_eee.id).first_or_create!


    a323 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AMR231").first.id, code: "200").first_or_create!(name: "Analysis and Design of Feedback Control Systems",
        name_abrv: "AMR231TIMESERVO", archived: false, in_drive: false, user_id: 3)
    at323 = ActivityTimetable.where(activity_id: a323.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a323.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a323.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory is basic parameter identification of a 1st order system from step response characteristics: Gain, Time Constant and System Delay.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a323.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a323.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a323.id, programme_id: $prog_amrc.id).first_or_create!


    a324 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "201").first_or_create!(name: "1st Semester Design Project",
        name_abrv: "ACS231 - Design Project 1", archived: true, in_drive: false, user_id: 2)
    at324 = ActivityTimetable.where(activity_id: a324.id).first_or_create!(duration: 180, kit_prep_time: 90, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 20, setup_time: 20, takedown_time: 20, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a324.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a324.id).first_or_create!(criteria: "Must have experience of programming Arduino devices with C, and a  working knowledge of electronic circuit design and construction, and be able to debug problems.",
        job_desc:"During these project sessions, the students will develop a mechatronics project", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a324.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a324.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)


    a325 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "202").first_or_create!(name: "Mechatronics Design Project",
        name_abrv: "ACS231 - Design Project 2", archived: false, in_drive: false, user_id: 2)
    at325 = ActivityTimetable.where(activity_id: a325.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Equipment would need to be moved between labs",
        capacity: 120, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a325.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a325.id).first_or_create!(criteria: "Must have experience of programming Arduino devices with C, and a  working knowledge of electronic circuit design and construction, and be able to debug problems.",
        job_desc:"During these project sessions, the students will develop a mechatronics project", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a325.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a325.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)


    a326 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS134").first.id, code: "203").first_or_create!(name: "Basic Logic and Computer Based Decision Making",
        name_abrv: "Logic Lab", archived: false, in_drive: false, user_id: 1)
    at326 = ActivityTimetable.where(activity_id: a326.id).first_or_create!(duration: 180, kit_prep_time: 180, min_week_num: 6, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 90, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a326.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a326.id).first_or_create!(criteria: "Previous LabVIEW experience Essential",
        job_desc:"This laboratory is an introduction into basic logic circuits, (AND, OR, etc and simple sequential circuits, SR latch) . This Lab will also link basic computer based decision making, (simple if and case statements).", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a326.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a326.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)


    a327 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS130").first.id, code: "204").first_or_create!(name: "Design and Build Project - Hardware",
        name_abrv: "ShaddowBots-Hard", archived: false, in_drive: false, user_id: 4)
    at327 = ActivityTimetable.where(activity_id: a327.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a327.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a327.id).first_or_create!(criteria: "Must have experience of programming microcontrollers devices with C, and a basic working knowledge of electronic circuit construction.",
        job_desc:"This is the 1st year group design project. The students will be initially make a strip board circuit, for a PIC micro controller, and mount this to a two wheeled robot. The robot will be programmed, on C, to drive towards a beacon and avoid obstacles in its path.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a327.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a327.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)


    a328 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS232").first.id, code: "205").first_or_create!(name: "Digital Sampling and Reconstruction of Signals",
        name_abrv: "SS-Sample", archived: false, in_drive: false, user_id: 5)
    at328 = ActivityTimetable.where(activity_id: a328.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 9, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 90, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a328.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a328.id).first_or_create!(criteria: "Must have an understanding of discrete signal sampling and reconstruction, and the mathematics used to describe these processes.",
        job_desc:"During this session, the students will investigate the effect that sampling of a continuous-time signal has on the resulting signal. Furthermore, they will investigate how filtering of the continuous time signal can overcome some of the issues associated with signal sampling and signal reconstruction.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a328.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a328.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)


    a329 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS230").first.id, code: "206").first_or_create!(name: "Discrete Domain Systems Laboratory",
        name_abrv: "DIS-SERVO", archived: false, in_drive: false, user_id: 2)
    at329 = ActivityTimetable.where(activity_id: a329.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a329.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a329.id).first_or_create!(criteria: "Understanding of physical systems modeling, the analysis of 1st and 2nd order systems, and z-domain control systems",
        job_desc:"This laboratory involves the analysis of control system behavior in the z-domain, when changing sample time and model characteristics", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a329.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a329.id).first_or_create!(cost_per_student: nil, equip_needed: "Loads",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)


    a330 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS230").first.id, code: "206").first_or_create!(name: "Discrete Control Design",
        name_abrv: "Servo-D", archived: true, in_drive: false, user_id: 3)
    at330 = ActivityTimetable.where(activity_id: a330.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a330.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a330.id).first_or_create!(criteria: "Understanding of physical systems modelling,  the analysis of 1st and 2nd order systems, and  z-domain control design",
        job_desc:"This laboratory involves designing control system compensators in the z-domain, and implementing them on the hardware system in the laboratory.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a330.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a330.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)


    a331 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6101").first.id, code: "206").first_or_create!(name: "Discrete Domain Control Design",
        name_abrv: "SERVO-C", archived: false, in_drive: false, user_id: 2)
    at331 = ActivityTimetable.where(activity_id: a331.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a331.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a331.id).first_or_create!(criteria: "Understanding of physical systems modelling,  the analysis of 1st and 2nd order systems, and  z-domain control design",
        job_desc:"This laboratory involved designing control system compensators in the z-domain, and implementing them on the hardware system in the laboratory.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a331.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a331.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)


    a332 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS232").first.id, code: "207").first_or_create!(name: "Filters",
        name_abrv: "SS-Filters", archived: false, in_drive: false, user_id: 2)
    at332 = ActivityTimetable.where(activity_id: a332.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 7, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 90, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a332.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a332.id).first_or_create!(criteria: "Must have a strong mathematical understanding, and be able to describe the frequency response characteristics of filters, as LTI systems.",
        job_desc:"During this session, the students will investigate the response of different filter types, and demonstrate how systems exhibit filtering behavior when observing the input and output signals.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a332.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a332.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)


    a333 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AMR231").first.id, code: "208").first_or_create!(name: "First order and second order systems [RCL Circuit]",
        name_abrv: "AMR231RCL", archived: false, in_drive: false, user_id: 1)
    at333 = ActivityTimetable.where(activity_id: a333.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 13, max_week_num: 15, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a333.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a333.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse 1st and 2nd order electrical circuits and compare the simulated responses against measured data", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a333.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a333.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a333.id, programme_id: $prog_amrc.id).first_or_create!


    a334 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS132").first.id, code: "209").first_or_create!(name: "Frequency Domain Analysis of a Servo System",
        name_abrv: "FREQ SERVO", archived: false, in_drive: false, user_id: 1)
    at334 = ActivityTimetable.where(activity_id: a334.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 8, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a334.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a334.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The Students are required to analyse the a servo system in the frequency domain, and develop a model of the system. The students will observe the effects of applying, in closed loop, P and PI compensation, in closed loop, to the system.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a334.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a334.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)


    a335 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS1321").first.id, code: "209").first_or_create!(name: "Frequency Domain Analysis of a Servo System",
        name_abrv: "FREQ SERVO", archived: false, in_drive: false, user_id: 5)
    at335 = ActivityTimetable.where(activity_id: a335.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 8, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a335.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a335.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The Students are required to analyse the a servo system in the frequency domain, and develop a model of the system. The students will observe the effects of applying, in closed loop, P and PI compensation, in closed loop, to the system.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a335.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a335.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a335.id, programme_id: $prog_aero.id).first_or_create!


    a336 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "210").first_or_create!(name: "Introduction to Arduino: Simple Digital I/O",
        name_abrv: "Ard I/O", archived: false, in_drive: false, user_id: 5)
    at336 = ActivityTimetable.where(activity_id: a336.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 3, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit will need to be moved",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a336.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a336.id).first_or_create!(criteria: "Must have experience of programming Arduino devices with C, and a  working knowledge of electronic circuit design and construction, and be able to debug problems.",
        job_desc:"This laboratory involves interfacing digital sensors and actuators to an arduino device", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a336.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a336.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)


    a337 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6502").first.id, code: "210").first_or_create!(name: "Introduction to Arduino: Simple Digital I/O",
        name_abrv: "Ard I/O", archived: false, in_drive: false, user_id: 2)
    at337 = ActivityTimetable.where(activity_id: a337.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 3, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit needs to be moved",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a337.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a337.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse a servo system in both the time and frequency domain. From the system model they have developed, a PI controller will be designed and its performance evaluated.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a337.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a337.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)


    a338 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS134").first.id, code: "211").first_or_create!(name: "LabVIEW: Data Acquisition",
        name_abrv: "LabVIEW1", archived: false, in_drive: false, user_id: 3)
    at338 = ActivityTimetable.where(activity_id: a338.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 5, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 90, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a338.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a338.id).first_or_create!(criteria: "Previous LabVIEW experience Essential",
        job_desc:"This laboratory is a basic introduction into LabVIEW programing and data acquisition. GTAs should have basic knowledge of LabVIEW programming.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a338.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a338.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)


    a339 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS134").first.id, code: "212").first_or_create!(name: "LabVIEW: Servo Control Application",
        name_abrv: "LabVIEW2", archived: false, in_drive: false, user_id: 3)
    at339 = ActivityTimetable.where(activity_id: a339.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 7, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a339.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a339.id).first_or_create!(criteria: "Previous LabVIEW experience Essential",
        job_desc:"This laboratory is a basic introduction into LabVIEW programing and data acquisition. GTAs should have basic knowledge of LabVIEW programming.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a339.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a339.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)


    a340 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS133").first.id, code: "213").first_or_create!(name: "Modelling and Control of a Hot Air Process Control System",
        name_abrv: "HVAC 2", archived: false, in_drive: false, user_id: 1)
    at340 = ActivityTimetable.where(activity_id: a340.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 9, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a340.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a340.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory involves modelling and analysis of the performance characteristics of a 2nd order  Mass, Spring, Damper system, in the time domain.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a340.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a340.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)


    a341 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS219").first.id, code: "213").first_or_create!(name: "Modelling and Control of a Hot Air Process Control System",
        name_abrv: "CBE-HVAC", archived: false, in_drive: false, user_id: 1)
    at341 = ActivityTimetable.where(activity_id: a341.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 9, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a341.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a341.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory is basic parameter identification of a 1st order system from step response characteristics: Gain, Time Constant and System Delay.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a341.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a341.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a341.id, programme_id: $prog_cbe.id).first_or_create!


    a342 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "214").first_or_create!(name: "Multi-servo & closed-loop control (active sensing)",
        name_abrv: "Robot - Multi Servo", archived: false, in_drive: false, user_id: 1)
    at342 = ActivityTimetable.where(activity_id: a342.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 8, max_week_num: 8, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit will need to be moved",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a342.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a342.id).first_or_create!(criteria: "Must have experience of programming Arduino devices with C, and a  working knowledge of electronic circuit design and construction, and be able to debug problems.",
        job_desc:"During this session, the students will coordinate the motion of multiple servomotors with PWM signals, from an Arduino. They will also, assemble a robot hand and investigate the basics of sensor-motor coordination through a process of grasping a fragile object.", jobshop_desc: "", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a342.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a342.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)


    a343 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS134").first.id, code: "215").first_or_create!(name: "PLC1: Basics",
        name_abrv: "PLC 1 - Basics", archived: false, in_drive: false, user_id: 5)
    at343 = ActivityTimetable.where(activity_id: a343.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 1, max_week_num: 4, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a343.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a343.id).first_or_create!(criteria: "GTAs should have some experience of PLC programming.",
        job_desc:"This is a basic introduction into PLC programming on an Allen Bradley PLC.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a343.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a343.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)


    a344 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6101").first.id, code: "215").first_or_create!(name: "PLC1: Basics",
        name_abrv: "PLC 1 - Basics", archived: false, in_drive: false, user_id: 1)
    at344 = ActivityTimetable.where(activity_id: a344.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a344.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a344.id).first_or_create!(criteria: "GTAs should have some experience of PLC programming.",
        job_desc:"This is a basic introduction into PLC programming on an Allen Bradley PLC.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a344.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a344.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)


    a345 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS134").first.id, code: "216").first_or_create!(name: "PLC2: Counters and Timers",
        name_abrv: "PLC 2 - C & T", archived: false, in_drive: false, user_id: 1)
    at345 = ActivityTimetable.where(activity_id: a345.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 5, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a345.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a345.id).first_or_create!(criteria: "GTAs should have some experience of PLC programming.",
        job_desc:"This is an extension of the PLC 1 laboratory, the students will be using counters and timers to perform event driven operations on a manufacturing process control system.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a345.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a345.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)


    a346 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6101").first.id, code: "216").first_or_create!(name: "PLC2: Counters and Timers",
        name_abrv: "PLC 2 - C & T", archived: false, in_drive: false, user_id: 1)
    at346 = ActivityTimetable.where(activity_id: a346.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a346.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a346.id).first_or_create!(criteria: "GTAs should have some experience of PLC programming.",
        job_desc:"This is an extension of the PLC 1 laboratory, the students will be using counters and timers to perform event driven operations on a manufacturing process control system.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a346.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a346.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)


    a347 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "217").first_or_create!(name: "PWM control of Actuators, using an Arduino",
        name_abrv: "Ard PWM", archived: false, in_drive: false, user_id: 2)
    at347 = ActivityTimetable.where(activity_id: a347.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 5, max_week_num: 5, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit will need to be moved",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a347.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a347.id).first_or_create!(criteria: "Must have experience of programming Arduino devices with C, and a  working knowledge of electronic circuit design and construction, and be able to debug problems.",
        job_desc:"The aims of this laboratory session is to drive different type of actuators using a PWM output from
    an Arduino device, use timers to sequence control functions, and use sensors to adjust the
    behaviour of a system.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a347.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a347.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)


    a348 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6502").first.id, code: "217").first_or_create!(name: "PWM control of Actuators, using an Arduino",
        name_abrv: "Ard PWM", archived: false, in_drive: false, user_id: 2)
    at348 = ActivityTimetable.where(activity_id: a348.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 5, max_week_num: 5, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit needs to be moved",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a348.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a348.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse a servo system in both the time and frequency domain. From the system model they have developed, a PI controller will be designed and its performance evaluated.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a348.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a348.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)


    a349 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS329").first.id, code: "218").first_or_create!(name: "Quanser 2DOF Robot",
        name_abrv: "2-DOF Robot", archived: true, in_drive: false, user_id: 5)
    at349 = ActivityTimetable.where(activity_id: a349.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a349.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a349.id).first_or_create!(criteria: "You will need knowledge of servos and servo control and basic robot kinematics",
        job_desc:"A robot control lab. This lab involves controlling a closed-kinematic chain 2-DOF robot.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a349.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a349.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)


    a350 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS337").first.id, code: "218").first_or_create!(name: "Quanser 2DOF Robot",
        name_abrv: "2-DOF Robot", archived: true, in_drive: false, user_id: 1)
    at350 = ActivityTimetable.where(activity_id: a350.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a350.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a350.id).first_or_create!(criteria: "You will need knowledge of servos and servo control and basic robot kinematics",
        job_desc:"A robot control lab. This lab involves controlling a closed-kinematic chain 2-DOF robot.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a350.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a350.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)


    a351 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6329").first.id, code: "218").first_or_create!(name: "Quanser 2DOF Robot",
        name_abrv: "2-DOF Robot", archived: true, in_drive: false, user_id: 1)
    at351 = ActivityTimetable.where(activity_id: a351.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a351.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a351.id).first_or_create!(criteria: "You will need knowledge of servos and servo control and basic robot kinematics",
        job_desc:"A robot control lab. This lab involves controlling a closed-kinematic chain 2-DOF robot.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a351.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a351.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)


    a352 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS232").first.id, code: "219").first_or_create!(name: "Random Signals and Stochastic Systems",
        name_abrv: "SS-Stochastic", archived: false, in_drive: false, user_id: 3)
    at352 = ActivityTimetable.where(activity_id: a352.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 10, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 90, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a352.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a352.id).first_or_create!(criteria: "Must have a an understanding of the concepts of white noise, and how the power spectral densities at the input and output of an LTI system, and its cross-power spectral density, can be used to calculate the frequency response of the system in question.",
        job_desc:"During this session, the students will investigate the characteristics of white noise, and investigate how white noise can be used to find the frequency response characteristics of a system.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a352.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a352.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)


    a353 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "220").first_or_create!(name: "Robot Arm Assembly and Actuation",
        name_abrv: "Robot - Assembly", archived: false, in_drive: false, user_id: 1)
    at353 = ActivityTimetable.where(activity_id: a353.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 9, max_week_num: 9, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 120, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a353.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a353.id).first_or_create!(criteria: "Must have experience of programming Arduino devices with C, and a  working knowledge of electronic circuit design and construction, and be able to debug problems.",
        job_desc:"During this laboratory session, the students will construct a simple robotic arm, and use an Arduino to control the joint servos in open loop.", jobshop_desc: "", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a353.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a353.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)


    a354 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "221").first_or_create!(name: "Robot Arm Control",
        name_abrv: "Robot - Control", archived: false, in_drive: false, user_id: 2)
    at354 = ActivityTimetable.where(activity_id: a354.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 10, max_week_num: 10, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 120, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a354.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a354.id).first_or_create!(criteria: "Must have experience of programming Arduino devices with C, and a  working knowledge of electronic circuit design and construction, and be able to debug problems.",
        job_desc:"The aim of this practical session is to understand the basics of robot arm motion designing by actuating the formerly assembled robot arm for grasping and trajectory following performances.", jobshop_desc: "", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a354.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a354.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)


    a355 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS230").first.id, code: "222").first_or_create!(name: "Servo System Compensator Design",
        name_abrv: "Servo-S", archived: true, in_drive: false, user_id: 5)
    at355 = ActivityTimetable.where(activity_id: a355.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 10, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a355.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a355.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory involved the design of three compensatory for a control system, and evaluating their performance on a hardware system in the laboratory.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a355.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a355.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)


    a356 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6101").first.id, code: "222").first_or_create!(name: "Servo System Compensator Design",
        name_abrv: "Discrete S", archived: false, in_drive: false, user_id: 1)
    at356 = ActivityTimetable.where(activity_id: a356.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a356.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a356.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory involved the design of three compensatory for a control system, and evaluating their performance on a hardware system in the laboratory.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a356.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a356.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)


    a357 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS133").first.id, code: "223").first_or_create!(name: "Tank Level System - Modelling and Analysis",
        name_abrv: "TANKS", archived: false, in_drive: false, user_id: 5)
    at357 = ActivityTimetable.where(activity_id: a357.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 18, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a357.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a357.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory involves developing a 1st order model of a fluid tank level system, from time domain equations. In the laboratory, they will parameterise the experimental system.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a357.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a357.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)


    a358 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS132").first.id, code: "224").first_or_create!(name: "Time Domain Analysis of a Hot Air Process Control System",
        name_abrv: "HVAC 1", archived: false, in_drive: false, user_id: 2)
    at358 = ActivityTimetable.where(activity_id: a358.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 7, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a358.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a358.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory is basic parameter identification of a 1st order system from step response characteristics: Gain, Time Constant and System Delay.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a358.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a358.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)


    a359 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS1321").first.id, code: "224").first_or_create!(name: "Time Domain Analysis of a Hot Air Process Control System",
        name_abrv: "HVAC 1", archived: false, in_drive: false, user_id: 5)
    at359 = ActivityTimetable.where(activity_id: a359.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 7, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a359.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a359.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory is basic parameter identification of a 1st order system from step response characteristics: Gain, Time Constant and System Delay.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a359.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a359.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a359.id, programme_id: $prog_aero.id).first_or_create!


    a360 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS133").first.id, code: "225").first_or_create!(name: "Time Domain Analysis of a Mass Spring Damping System",
        name_abrv: "MSD1", archived: false, in_drive: false, user_id: 3)
    at360 = ActivityTimetable.where(activity_id: a360.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 9, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a360.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a360.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory involves modelling and analysis of the performance characteristics of a 2nd order  Mass, Spring, Damper system, in the time domain.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a360.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a360.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)


    a361 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS133").first.id, code: "226").first_or_create!(name: "Time Domain Analysis of a Servo System",
        name_abrv: "Time Servo", archived: false, in_drive: false, user_id: 1)
    at361 = ActivityTimetable.where(activity_id: a361.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 11, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a361.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a361.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The Students are required to analyse the a servo system in the frequency domain, and develop a model of the system. The students will observe the effects of applying, in closed loop, P and PI compensation, in closed loop, to the system.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a361.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a361.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)


    a362 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS219").first.id, code: "227").first_or_create!(name: "TSC - Tanks Modelling and Control Design",
        name_abrv: "TSC Software", archived: false, in_drive: false, user_id: 5)
    at362 = ActivityTimetable.where(activity_id: a362.id).first_or_create!(duration: 180, kit_prep_time: 120, min_week_num: 9, max_week_num: 12, pref_room_id: $room_cr4.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 42, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a362.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a362.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory is a computer room simulation of a chemical process plant. The laboratory consists of modelling and linearisation of a process control system, design and performance analysis of a PI controller.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a362.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a362.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a362.id, programme_id: $prog_cbe.id).first_or_create!


    a363 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS334").first.id, code: "227").first_or_create!(name: "TSC: Tanks Modelling and Control Design",
        name_abrv: "TSC Software", archived: true, in_drive: false, user_id: 4)
    at363 = ActivityTimetable.where(activity_id: a363.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr4.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 45, takedown_time: 45, notes: "",
        capacity: 190, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a363.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a363.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory is a computer room simulation of a chemical process plant. The laboratory consists of modelling and linearisation of a process control system, design and performance analysis of a PI controller.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a363.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a363.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)


    a365 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6502").first.id, code: "228").first_or_create!(name: "Using an Arduino to Read Analogue Sensors",
        name_abrv: "Ard Anal", archived: false, in_drive: false, user_id: 4)
    at365 = ActivityTimetable.where(activity_id: a365.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 4, max_week_num: 4, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit needs to be moved",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a365.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a365.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse a servo system in both the time and frequency domain. From the system model they have developed, a PI controller will be designed and its performance evaluated.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a365.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a365.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)


    a366 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "229").first_or_create!(name: "Wireless Control of an Arduino Based system, using a Bluetooth Interface",
        name_abrv: "Ard Wire", archived: false, in_drive: false, user_id: 2)
    at366 = ActivityTimetable.where(activity_id: a366.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit will need to be moved",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a366.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a366.id).first_or_create!(criteria: "Must have experience of programming Arduino devices with C, and a  working knowledge of electronic circuit design and construction, and be able to debug problems.",
        job_desc:"During this practical session, the students will generate a Bluetooth communications link between an Arduino device and a remote computer, to read and process remote sensor data.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a366.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a366.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)


    a367 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6502").first.id, code: "229").first_or_create!(name: "Wireless Control of an Arduino Based system, using a Bluetooth Interface",
        name_abrv: "Ard Wire", archived: false, in_drive: false, user_id: 3)
    at367 = ActivityTimetable.where(activity_id: a367.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit needs to be moved",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a367.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a367.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse a servo system in both the time and frequency domain. From the system model they have developed, a PI controller will be designed and its performance evaluated.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a367.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a367.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)


    a368 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS132").first.id, code: "230").first_or_create!(name: "RCL Circuit: Dynamics Laboratory",
        name_abrv: "RCL", archived: false, in_drive: false, user_id: 5)
    at368 = ActivityTimetable.where(activity_id: a368.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 8, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a368.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a368.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse 1st and 2nd order electrical circuits and compare the simulated responses against measured data", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a368.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a368.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)


    a369 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS1321").first.id, code: "230").first_or_create!(name: "RCL Circuit: Dynamics Laboratory",
        name_abrv: "RCL", archived: false, in_drive: false, user_id: 3)
    at369 = ActivityTimetable.where(activity_id: a369.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 8, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a369.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a369.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse 1st and 2nd order electrical circuits and compare the simulated responses against measured data", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a369.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a369.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a369.id, programme_id: $prog_aero.id).first_or_create!


    a370 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE205").first.id, code: "230").first_or_create!(name: "RCL Circuit: Dynamics Laboratory",
        name_abrv: "GEE - RCL", archived: false, in_drive: false, user_id: 3)
    at370 = ActivityTimetable.where(activity_id: a370.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 8, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a370.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a370.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse 1st and 2nd order electrical circuits and compare the simulated responses against measured data", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a370.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a370.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a370.id, programme_id: $prog_gee.id).first_or_create!


    a371 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6503").first.id, code: "232").first_or_create!(name: "Pantograph Robot",
        name_abrv: "Pant Rob", archived: false, in_drive: false, user_id: 1)
    at371 = ActivityTimetable.where(activity_id: a371.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 11, max_week_num: 11, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 70, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a371.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a371.id).first_or_create!(criteria: "Must have a understanding for forward and inverse kinematic modelling for robotic systems. Must be proficient at MATLAB, and preferably have worked with LabVIEW, (although not essential).",
        job_desc:"During this laboratory session, the students will model and implement forward and inverse kinematic models for a close coupled robot system.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a371.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a371.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)


    a372 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE205").first.id, code: "233").first_or_create!(name: "Introduction to Feedback and PI Control Design",
        name_abrv: "GEE - T+F Servo", archived: false, in_drive: false, user_id: 3)
    at372 = ActivityTimetable.where(activity_id: a372.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 9, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a372.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a372.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse a servo system in both the time and frequency domain. From the system model they have developed, a PI controller will be designed and its performance evaluated.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a372.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a372.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a372.id, programme_id: $prog_gee.id).first_or_create!


    a373 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6502").first.id, code: "234").first_or_create!(name: "MSc Mechatronics Design Project",
        name_abrv: "ACS6502 - Design Project", archived: false, in_drive: false, user_id: 5)
    at373 = ActivityTimetable.where(activity_id: a373.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 7, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit needs to be moved",
        capacity: 144, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a373.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a373.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse a servo system in both the time and frequency domain. From the system model they have developed, a PI controller will be designed and its performance evaluated.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a373.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a373.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)


    a374 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS130").first.id, code: "239").first_or_create!(name: "Design and Build Project - Software",
        name_abrv: "ShaddowBots-Soft", archived: false, in_drive: false, user_id: 5)
    at374 = ActivityTimetable.where(activity_id: a374.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr4.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit needs to be moved",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at374.id, room_id: $room_ec.id).first_or_create!

    ActivityTeaching.where(activity_id: a374.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a374.id).first_or_create!(criteria: "Must have experience of programming microcontrollers devices with C, and a basic working knowledge of electronic circuit construction.",
        job_desc:"This is the 1st year group design project. The students will be initially make a strip board circuit, for a PIC micro controller, and mount this to a two wheeled robot. The robot will be programmed, on C, to drive towards a beacon and avoid obstacles in its path.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a374.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a374.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)


    a375 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "COM1006").first.id, code: "300").first_or_create!(name: "Cleanroom taster for COM",
        name_abrv: "SCHOTTKY- COM", archived: false, in_drive: false, user_id: 4)
    at375 = ActivityTimetable.where(activity_id: a375.id).first_or_create!(duration: 180, kit_prep_time: 180, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 12, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a375.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "COM Schottky", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a375.id).first_or_create!(criteria: "Experience with chemical processing (preferably, but not necessarily in clean room). Knowledge of basic testing of devices (IV).",
        job_desc:"Assist undergraduate students to make and test a Schottky diode (or possibly MESFET transistor) in the Diamond clean room.", jobshop_desc: "GTA in MEE, the Diamond: Clean Room", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a375.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a375.id).first_or_create!(cost_per_student: nil, equip_needed: "All equipment as per CCEE.1.06.002 and CCEE.1.06.003 except LCR meters",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a375.id, programme_id: $prog_com.id).first_or_create!


    a376 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE126").first.id, code: "301").first_or_create!(name: "Group Project (Great Egg Race)",
        name_abrv: "GRP1", archived: false, in_drive: false, user_id: 1)
    at376 = ActivityTimetable.where(activity_id: a376.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: true, series_setup_time: 15, setup_time: 15, takedown_time: 15, notes: "210 minutes x 4 sessions (2 groups)",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a376.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "FYGER", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a376.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a376.id).first_or_create!(assess_weight: 8.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a376.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a376.id, programme_id: $prog_eee.id).first_or_create!


    a377 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE380").first.id, code: "302").first_or_create!(name: "Individual Design Project",
        name_abrv: "IDP", archived: false, in_drive: false, user_id: 3)
    at377 = ActivityTimetable.where(activity_id: a377.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Ad Hoc sessions, arranged between student and MEE staff",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a377.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "Ind Design", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a377.id).first_or_create!(criteria: "",
        job_desc:"GTAs sourced by EEE", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a377.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a377.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a377.id, programme_id: $prog_eee.id).first_or_create!


    a378 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6213").first.id, code: "304").first_or_create!(name: "Resistivity measurements",
        name_abrv: "RES", archived: false, in_drive: false, user_id: 1)
    at378 = ActivityTimetable.where(activity_id: a378.id).first_or_create!(duration: 180, kit_prep_time: 120, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr.id,
        same_as_prev_year: true, series_setup_time: 15, setup_time: 60, takedown_time: 30, notes: "Each student comes to 2 sessions. Timetabling cannot happen until Masters students have chosen their modules - will be very last minute.",
        capacity: 16, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a378.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a378.id).first_or_create!(criteria: "",
        job_desc:"Assist MSc students with Electrical measurements (IV) using probe station.", jobshop_desc: "GTA in MEE, the Diamond: Clean Room", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a378.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a378.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a378.id, programme_id: $prog_eee.id).first_or_create!


    a379 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE225").first.id, code: "305").first_or_create!(name: "Schottky Diode 1: Photolithography",
        name_abrv: "SCHOTTKY1", archived: false, in_drive: false, user_id: 3)
    at379 = ActivityTimetable.where(activity_id: a379.id).first_or_create!(duration: 210, kit_prep_time: 180, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "Schottky 1 and Schottky 2 need to be on consecutive days.",
        capacity: 14, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a379.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "Schottky 1", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a379.id).first_or_create!(criteria: "Experience with chemical processing (preferably, but not necessarily in clean room). Knowledge of testing of devices (IV, CV).",
        job_desc:"Assist undergraduate students to make and test a Schottky diode in the Diamond clean room.", jobshop_desc: "GTA in MEE, the Diamond: Clean Room", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a379.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a379.id).first_or_create!(cost_per_student: nil, equip_needed: "At least 1 mask aligner with camera, 1 microscope with camera and yellow light filter in yellow room, 1 spinner, both chemical stations within the yellow room, at least 1 hot plate, 8 pairs tweezers",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a379.id, programme_id: $prog_eee.id).first_or_create!


    a380 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE225").first.id, code: "306").first_or_create!(name: "Schottky Diode 2: Metallisation and Test",
        name_abrv: "SCHOTTKY2", archived: false, in_drive: false, user_id: 1)
    at380 = ActivityTimetable.where(activity_id: a380.id).first_or_create!(duration: 210, kit_prep_time: 120, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 30, takedown_time: 45, notes: "Schottky 1 and Schottky 2 need to be on consecutive days.",
        capacity: 14, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a380.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "Schottky 1", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a380.id).first_or_create!(criteria: "Experience with chemical processing (preferably, but not necessarily in clean room). Knowledge of testing of devices (IV, CV).",
        job_desc:"Assist undergraduate students to make and test a Schottky diode in the Diamond clean room.", jobshop_desc: "GTA in MEE, the Diamond: Clean Room", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a380.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a380.id).first_or_create!(cost_per_student: nil, equip_needed: "1 thermal evaporator, 4 acetone-resistant 0.5 - 5ml pipettes, 3 solvent chemical stations, 3 hot plates, 1 ultrasound cleaning bath, 8 probe stations, 8 SMUs, 8 LCRs, 8 LCR bias adapters, 2 microscopes, 10 microscope cameras",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a380.id, programme_id: $prog_eee.id).first_or_create!


    a381 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "MAT2220").first.id, code: "307").first_or_create!(name: "Schottky lab for MAT",
        name_abrv: "SCHOTTKY - MAT", archived: false, in_drive: false, user_id: 4)
    at381 = ActivityTimetable.where(activity_id: a381.id).first_or_create!(duration: 180, kit_prep_time: 180, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 12, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a381.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "MAT Schottky", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a381.id).first_or_create!(criteria: "Experience with chemical processing (preferably, but not necessarily in clean room). Knowledge of basic testing of devices (IV).",
        job_desc:"Assist undergraduate students to make and test a Schottky diode in the Diamond clean room.", jobshop_desc: "GTA in MEE, the Diamond: Clean Room", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a381.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a381.id).first_or_create!(cost_per_student: nil, equip_needed: "All equipment as per CCEE.1.06.002 and CCEE.1.06.003 except LCR meters",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a381.id, programme_id: $prog_mat.id).first_or_create!


    a382 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE228").first.id, code: "308").first_or_create!(name: "Second Year Design Exercise: SAW",
        name_abrv: "SYDE - SAW", archived: false, in_drive: false, user_id: 2)
    at382 = ActivityTimetable.where(activity_id: a382.id).first_or_create!(duration: 210, kit_prep_time: 1000, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr.id,
        same_as_prev_year: true, series_setup_time: 15, setup_time: 60, takedown_time: 30, notes: "",
        capacity: 32, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a382.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a382.id).first_or_create!(criteria: "Basic cleanroom skills plus at least some of these: Mask design (KLayout)",
        job_desc:"Assist ~20 Y2 EEE students to design, build and test a surface acoustic wave (SAW) filter.

    Description of project for UG students:
    In this exercise you will design, build and test a band pass filter that operates in the radio frequency (MHz) regime. Such filters are essential components in many modern electronic systems, including mobile phones, TVs and radar. 

    It is possible to make filters using LCR (inductor, capacitor, resistor) networks, but such sytems are complicated and have low precission. Instead you will utilise the phenomenon of surface acoustic waves (SAWs) to make your own filter. SAWs are generated on the surface of piezo-electric crystals when they are excited by an electrical signal. The waves on the crystal travel nearly one million times slower than the speed of light, so, as well as enabling you to make a filter, they are also very important for making delay lines. Careful design of the interdigitated electrode structure on the lithium niobiate crystal will enable you to precisely define the performance of the filter. Each student will be given their own unique design specification (centre frequency, bandwidth). The design process will require you to use some of the concepts introduced in the Communication Electronics module (EEE227) and to use a computer-aided design (CAD) package. You will then make the filter using the extensive facilities in the Diamond cleanroom, including: mask manufacture; photolithography; plasma etching; metallisation; wet etching and wire bonding. You will then evaluate your filter using a vector network analyser. Care will be needed to ensure an impedence match between your filter and the test fixtures. The tests will involve measurement of frequency response of the filter and inspection of the output signals for signs of harmonic or other spurious signal generation. Assessment is by individual report and group presentation, with account taken of your performance at the design stage and in the laboratory.", jobshop_desc: "Photolithography", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a382.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a382.id).first_or_create!(cost_per_student: nil, equip_needed: "Peter Trend, Abi Eades",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a382.id, programme_id: $prog_eee.id).first_or_create!


    a383 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE228").first.id, code: "309").first_or_create!(name: "Second Year Design Exercise: Solar Cell",
        name_abrv: "SYDE - Solar", archived: false, in_drive: false, user_id: 4)
    at383 = ActivityTimetable.where(activity_id: a383.id).first_or_create!(duration: 210, kit_prep_time: 2000, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 16, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a383.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a383.id).first_or_create!(criteria: "",
        job_desc:"Assist ~20 Y2 EEE students to design, build and test a solar cell.

    Description of project for UG students:
    The project concerns the design, fabrication and measurement of photovoltaic (PV) solar cells which convert sunlight to electrical energy. PV cells are an important sustainable technology which can make an important contribution to reducing our dependence on fossil fuels. The devices consist of semiconductor p-n junctions within which light is absorbed to create electron-hole pairs which are swept out to the contracts by means of the built-in junction field. The type of semiconductor material and the design of the cell have a strong influence on the efficiency of energy conversion. However there are also widely varying costs of production which need to be factored in. The project will focus on two semiconductor materials of current interest (i) high efficiency, high cost PV cells made using the epitaxial semiconductor GaAs and (ii) lower efficiency, but relatively low cost cells made from thin film oxides (perovskytes). An important element of the project will be to contrast the performance of these cells and to understand the trade off between efficiency and cost for practical application. 

    In the project, the students will fabricate and test solar cells made from these two materials. The students will design a fabrication sequence to be performed in the diamond clean room for the production of PV cells. An important step in the process concerns the optimisation of the metallic contacts to the semiconductors. The metals used and the design of the pattern for the front surface are of vital importance as they have an impact on the cells series resistance, fill factor and short circuit current. The students will chose the appropriate metals, write down an appropriate processing scheme and design their own contact mask. Following validation, they will then proceed to fabricate the cells and to mount these ready for measurement. On completion the cells will be evaluated electrically using a solar simulator to extract typical solar cell parameters.", jobshop_desc: "GTA in MEE, the Diamond: Clean Room", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a383.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a383.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a383.id, programme_id: $prog_eee.id).first_or_create!


    a384 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE228").first.id, code: "310").first_or_create!(name: "Second Year Design Project",
        name_abrv: "SYDE", archived: false, in_drive: false, user_id: 5)
    at384 = ActivityTimetable.where(activity_id: a384.id).first_or_create!(duration: 210, kit_prep_time: 540, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: true, series_setup_time: 15, setup_time: 15, takedown_time: 20, notes: "210 minute session, 3 times a week for 7 weeks",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a384.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a384.id).first_or_create!(criteria: "",
        job_desc:"https://sites.google.com/a/sheffield.ac.uk/gta-opportunities/gtaoppssem2/eeedesignexercises", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a384.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a384.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a384.id, programme_id: $prog_eee.id).first_or_create!


    a385 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6395").first.id, code: "311").first_or_create!(name: "SPE Device fab",
        name_abrv: "SPE - Fab", archived: false, in_drive: false, user_id: 1)
    at385 = ActivityTimetable.where(activity_id: a385.id).first_or_create!(duration: 180, kit_prep_time: 180, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 60, takedown_time: 30, notes: "Timetabling cannot happen until Masters students have chosen their modules - will be very last minute. Currenlty looked into by Rick Smith.",
        capacity: 16, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a385.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "SPE Device Fab", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a385.id).first_or_create!(criteria: "Experience with electrical and optical characterization of LEDs and HEMTs.",
        job_desc:"During this module students manufacture GaN LEDs from scratch. GTA assistance is required for many of these stages. Some will take place in the North Campus, others in the Diamond. Experience in GaN processing, electrical and optical testing.", jobshop_desc: "GTA in MEE, the Diamond: Clean Room (some labs delivered in North Campus clean rooms)", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a385.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a385.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a385.id, programme_id: $prog_eee.id).first_or_create!


    a386 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE163").first.id, code: "312").first_or_create!(name: "System Design Analysis",
        name_abrv: "Pull apart", archived: false, in_drive: false, user_id: 4)
    at386 = ActivityTimetable.where(activity_id: a386.id).first_or_create!(duration: 180, kit_prep_time: 30, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "The 2018-19Â Semester 2 timetable is a disaster. I need to be able to interleave my once-a- fortnight lectures with the labs (as per Diamond ethos!). I.e all students need to attend a lab once per fortnight. Maybe use some (not all!) Â Friday PM sessions?",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a386.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "Pull Apart", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a386.id).first_or_create!(criteria: "Enquiring mind necessary and sound mechanical engineering skills. A background in electronics would be helpful but not essential.",
        job_desc:"Assist students with reverse engineering of items of consumer electronics (light bulbs, printers, telephones, data projectors, etc) and marking of lab report.", jobshop_desc: "GTA in MEE, the Diamond: System Design Analysis", marking_time: 30, staff_ratio: nil)
    ActivityAssess.where(activity_id: a386.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a386.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a386.id, programme_id: $prog_eee.id).first_or_create!


    a387 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "COM1001").first.id, code: "400").first_or_create!(name: "Induction Lab",
        name_abrv: "COM-INDUCT", archived: false, in_drive: false, user_id: 3)
    at387 = ActivityTimetable.where(activity_id: a387.id).first_or_create!(duration: 180, kit_prep_time: 240, min_week_num: nil, max_week_num: 3, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 120, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a387.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a387.id).first_or_create!(criteria: "EEE or COM students with some experience of soldering and basic electronics",
        job_desc:"Supervising students as they learn basic electronics and familiarise themselves with the lab space", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a387.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a387.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a387.id, programme_id: $prog_com.id).first_or_create!


    a388 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "COM3505").first.id, code: "401").first_or_create!(name: "Internet of Things",
        name_abrv: "IoT", archived: false, in_drive: false, user_id: 5)
    at388 = ActivityTimetable.where(activity_id: a388.id).first_or_create!(duration: 120, kit_prep_time: 240, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 60, setup_time: 60, takedown_time: 60, notes: "120 minute session, for 10 weeks",
        capacity: 120, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a388.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a388.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a388.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a388.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a388.id, programme_id: $prog_com.id).first_or_create!


    a389 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "COM1006").first.id, code: "402").first_or_create!(name: "FPGA Lab",
        name_abrv: "COM-FPGA", archived: false, in_drive: false, user_id: 3)
    at389 = ActivityTimetable.where(activity_id: a389.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 7, max_week_num: 8, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a389.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a389.id).first_or_create!(criteria: "Knowledge of FPGA programmings and digital logic",
        job_desc:"Training students in simple FPGA programming of logic gates and adders", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a389.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a389.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a389.id, programme_id: $prog_com.id).first_or_create!


    a390 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6501").first.id, code: "240").first_or_create!(name: "MSc Shaddowbots",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at390 = ActivityTimetable.where(activity_id: a390.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: 5, max_week_num: 6, pref_room_id: $room_cr4.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "Kit needs to be moved",
        capacity: 100, checked_on_timetable: false)
    RoomBooking.where(activity_timetable_id: at390.id, room_id: $room_ec.id).first_or_create!

    ActivityTeaching.where(activity_id: a390.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a390.id).first_or_create!(criteria: "Must have experience of programming microcontrollers devices with C, and a basic working knowledge of electronic circuit construction.",
        job_desc:"This is the 1st year group design project. The students will be initially make a strip board circuit, for a PIC micro controller, and mount this to a two wheeled robot. The robot will be programmed, on C, to drive towards a beacon and avoid obstacles in its path.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a390.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a390.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)


    a391 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE230").first.id, code: "100").first_or_create!(name: "Absorbtion",
        name_abrv: "DC2", archived: false, in_drive: false, user_id: 2)
    at391 = ActivityTimetable.where(activity_id: a391.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 9, max_week_num: 12, pref_room_id: $room_al.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 6, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a391.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a391.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a391.id).first_or_create!(assess_weight: 10.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 1)
    ActivityTech.where(activity_id: a391.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a391.id, programme_id: $prog_cbe.id).first_or_create!


    a392 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR334").first.id, code: "101").first_or_create!(name: "Bio Plastics",
        name_abrv: "BIOPLAST", archived: false, in_drive: false, user_id: 1)
    at392 = ActivityTimetable.where(activity_id: a392.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 10, max_week_num: 10, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 15, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a392.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a392.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a392.id).first_or_create!(assess_weight: nil, notes: "All assessment was handled by the AMRC",
        pre_assess_type_id: $ass_form.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a392.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a392.id, programme_id: $prog_amrc.id).first_or_create!


    a393 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6311").first.id, code: "102").first_or_create!(name: "Clean Energy",
        name_abrv: "CE", archived: false, in_drive: false, user_id: 4)
    at393 = ActivityTimetable.where(activity_id: a393.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 3, max_week_num: 12, pref_room_id: $room_al.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 15, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a393.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a393.id).first_or_create!(criteria: "Interest/experience would suit people with engineering or physics backgrounds. Ideally, some general knowledge about electricity and perhaps renewable energy. This is considered small-scale equipment.






    This requires attention to detail and an ability to stick to deadlines and follow marking criteria. Should be capable of providing useful and constructive feedback. Marking through MOLE and can be done at a time to suit the GTA.",
        job_desc:"Supervising groups of students using the Heliocentris Clean Energy Trainer. This is considerd small-scale equipment. Training will be provided for the experiment. Ideally, two GTAs will be required, one of who will be required to mark all the submissions. Should also be prepared to answer enquiries through the discussion board. Please see row below for marking information.

    Marking of reports. Full training will be given. The first stage is to run the experiment, take measurements and process to give the results. This should give a good understanding of the experiment.", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a393.id).first_or_create!(assess_weight: 20.0, notes: "This involves a complete report - because it counts for 20% of the module: marking carried out by staff/GTA",
        pre_assess_type_id: $ass_form.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a393.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a393.id, programme_id: $prog_cbe.id).first_or_create!


    a394 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "103").first_or_create!(name: "Exp 1: Consigma Back",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at394 = ActivityTimetable.where(activity_id: a394.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 4, max_week_num: 6, pref_room_id: $room_pp.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 5, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a394.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a394.id).first_or_create!(criteria: "Interest/experience in powder science and technology. Preferably have a good understanding in different unit operations used for granulation and tableting. The equipment is an industrial scale has various unit operations linked together in one line.",
        job_desc:"In this lab, GTAs are required to supervise groups of students to work on the continuous tabletting line- Consigma in the Pilot plant and carry out an experimental investigation. Students will need to run the line and produce some granules and tablet as well as collect different types of data. Statistical analysis will then be carried out to determine the variability of the measured and calculated values. As a GTA, training will be provided for the experiments, and you will be marking the students for their pre-lab and in lab assessments as well as assisting them to carry out the experiment safely and help them to change some process parameters.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a394.id).first_or_create!(assess_weight: 17.0, notes: "The pre-lab involved the GTA asking questions to check preparation - to the group: marking carried out by staff",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a394.id).first_or_create!(cost_per_student: nil, equip_needed: "ModulP, MT50 Hardness Tester",
        last_risk_assess: Date.new(19, 1, 20), next_risk_assess: Date.new(20, 1, 20), tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a394.id, programme_id: $prog_cbe.id).first_or_create!


    a395 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "104").first_or_create!(name: "Exp1: Consigma Front",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at395 = ActivityTimetable.where(activity_id: a395.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 4, max_week_num: 6, pref_room_id: $room_pp.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 5, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a395.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a395.id).first_or_create!(criteria: "Interest/experience in powder science and technology. Preferably have a good understanding in different unit operations used for granulation and tableting. The equipment is an industrial scale has various unit operations linked together in one line.",
        job_desc:"In this lab, GTAs are required to supervise groups of students to work on the continuous tabletting line- Consigma in the Pilot plant and carry out an experimental investigation. Students will need to run the line and produce some granules and tablet as well as collect different types of data. Statistical analysis will then be carried out to determine the variability of the measured and calculated values. As a GTA, training will be provided for the experiments, and you will be marking the students for their pre-lab and in lab assessments as well as assisting them to carry out the experiment safely and help them to change some process parameters.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a395.id).first_or_create!(assess_weight: 17.0, notes: "The pre-lab involved the GTA asking questions to check preparation - to the group: marking carried out by staff",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a395.id).first_or_create!(cost_per_student: nil, equip_needed: "ConsiGma25",
        last_risk_assess: Date.new(19, 1, 20), next_risk_assess: Date.new(20, 1, 20), tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a395.id, programme_id: $prog_cbe.id).first_or_create!


    a396 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "105").first_or_create!(name: "Exp 1: Cont Crystalliser",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at396 = ActivityTimetable.where(activity_id: a396.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 5, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a396.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a396.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a396.id).first_or_create!(assess_weight: 17.0, notes: "The pre-lab involved the GTA asking questions to check preparation - to the group: marking carried out by staff",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a396.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a396.id, programme_id: $prog_cbe.id).first_or_create!


    a397 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE130").first.id, code: "106").first_or_create!(name: "Demonstration for Crystalliser",
        name_abrv: "CR2", archived: false, in_drive: false, user_id: 1)
    at397 = ActivityTimetable.where(activity_id: a397.id).first_or_create!(duration: 30, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 15, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a397.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a397.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a397.id).first_or_create!(assess_weight: nil, notes: "This is  currently a demonstration, but a pre-lab and post-lab will be introduced",
        pre_assess_type_id: $ass_form.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a397.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a397.id, programme_id: $prog_cbe.id).first_or_create!


    a398 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "GEE103").first.id, code: "106").first_or_create!(name: "Demonstration for Crystalliser",
        name_abrv: "CR2", archived: false, in_drive: false, user_id: 2)
    at398 = ActivityTimetable.where(activity_id: a398.id).first_or_create!(duration: 30, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 15, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a398.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a398.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a398.id).first_or_create!(assess_weight: nil, notes: "This is  currently a demonstration, but a pre-lab and post-lab will be introduced",
        pre_assess_type_id: $ass_form.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a398.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a398.id, programme_id: $prog_gee.id).first_or_create!


    a399 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE230").first.id, code: "107").first_or_create!(name: "Distillation",
        name_abrv: "DC1", archived: false, in_drive: false, user_id: 5)
    at399 = ActivityTimetable.where(activity_id: a399.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 9, max_week_num: 12, pref_room_id: $room_al.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 60, takedown_time: nil, notes: "",
        capacity: 6, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a399.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a399.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a399.id).first_or_create!(assess_weight: 10.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 1)
    ActivityTech.where(activity_id: a399.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a399.id, programme_id: $prog_cbe.id).first_or_create!


    a400 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE160").first.id, code: "108").first_or_create!(name: "Experiment E2: Investigation of heat engines operating in open and closed systems",
        name_abrv: "E2", archived: false, in_drive: false, user_id: 1)
    at400 = ActivityTimetable.where(activity_id: a400.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 10, max_week_num: 12, pref_room_id: $room_al.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 15, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a400.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/jn5df35", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a400.id).first_or_create!(criteria: "Interest/experience in cylinders, volume measurement and valves. The equipment is considered to be small scale. No data acquisition, just manual measurements.",
        job_desc:"Supervising groups of students using simple heat engine. Training will be provided for the experiment. Typically up to two GTAs will be required per session.", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a400.id).first_or_create!(assess_weight: 2.5, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 1)
    ActivityTech.where(activity_id: a400.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a400.id, programme_id: $prog_cbe.id).first_or_create!


    a401 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "109").first_or_create!(name: "Exp 2: Carousel Filter Dryer",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at401 = ActivityTimetable.where(activity_id: a401.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 5, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a401.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a401.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a401.id).first_or_create!(assess_weight: 33.0, notes: "The pre-lab involved the GTA asking questions to check preparation - to the group: marking carried out by staff",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a401.id).first_or_create!(cost_per_student: nil, equip_needed: "ConsiGma25, ModulP, MT50 Hardness Tester",
        last_risk_assess: Date.new(19, 1, 20), next_risk_assess: Date.new(20, 1, 20), tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a401.id, programme_id: $prog_cbe.id).first_or_create!


    a402 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "CPE007").first.id, code: "110").first_or_create!(name: "Enthalpies of Combustion",
        name_abrv: "FY2", archived: false, in_drive: false, user_id: 2)
    at402 = ActivityTimetable.where(activity_id: a402.id).first_or_create!(duration: 90, kit_prep_time: 60, min_week_num: 4, max_week_num: 4, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a402.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a402.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a402.id).first_or_create!(assess_weight: 2.0, notes: "Prelab (in workbook) + Conduct Lab + Post-lab prescriptive calculations/presentation of results",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a402.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a402.id, programme_id: $prog_fy.id).first_or_create!


    a403 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "111").first_or_create!(name: "Experiment 3 (student proposals)",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at403 = ActivityTimetable.where(activity_id: a403.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_pp.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 5, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a403.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a403.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a403.id).first_or_create!(assess_weight: 33.0, notes: "The pre-lab involved the GTA asking questions to check preparation - to the group: marking carried out by staff",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a403.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: Date.new(19, 1, 20), next_risk_assess: Date.new(20, 1, 20), tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a403.id, programme_id: $prog_cbe.id).first_or_create!


    a404 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE160").first.id, code: "112").first_or_create!(name: "Experiment E1: Measurement of kappa for air by pressure measurement",
        name_abrv: "E1", archived: false, in_drive: false, user_id: 2)
    at404 = ActivityTimetable.where(activity_id: a404.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 15, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a404.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/jjd5ugd", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a404.id).first_or_create!(criteria: "Interest/experience in pumps, valves, P/T measurement and data acquisition. The equipment is considered to be medium scale.",
        job_desc:"Supervising groups of students using the Armfield TH5 (check Armfield website for details). Training will be provided for the experiment and also for the marking. Typically up to two GTAs will be required. Model solutions provided for marking. Only one GTA will be required for marking.", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a404.id).first_or_create!(assess_weight: 2.5, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 1)
    ActivityTech.where(activity_id: a404.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a404.id, programme_id: $prog_cbe.id).first_or_create!


    a405 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE150").first.id, code: "113").first_or_create!(name: "Experiment F1: Determination of the activation energy for the iodine clock reaction",
        name_abrv: "F1", archived: false, in_drive: false, user_id: 4)
    at405 = ActivityTimetable.where(activity_id: a405.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 13, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a405.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/hk9uttd", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a405.id).first_or_create!(criteria: "Interest/experience would suit people with chemistry backgrounds. This involves running a number of experiments at different temperatures and determining the reaction time. It is based on the \"iodine clock reaction\", where the reaction time is determined from a sudden change in colour.",
        job_desc:"Supervising groups of students using \"typical\" lab equipment: chemicals, test tubes, water baths and stirrers. Training will be provided for the experiment and also for the marking. Typically up to two GTAs will be required. Model solutions provided for marking. Only one GTA required for marking.", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a405.id).first_or_create!(assess_weight: 3.33, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 1)
    ActivityTech.where(activity_id: a405.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a405.id, programme_id: $prog_cbe.id).first_or_create!


    a406 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE160").first.id, code: "114").first_or_create!(name: "Experiment P1: PVT properties of an ideal gas",
        name_abrv: "P1", archived: false, in_drive: false, user_id: 1)
    at406 = ActivityTimetable.where(activity_id: a406.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 13, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a406.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/omrcc26", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a406.id).first_or_create!(criteria: "Interest/experience in physical chemistry and pressure measurement. The equipment is considered small scale. No data acquisition, just manual measurements.",
        job_desc:"Supervising groups of students using a simple glass tube/hand-pump combination. Training will be provided for the experiment and also for the marking. Typically up to two GTAs will be required. Model solutions provided for marking. Only one GTA will be required for marking.", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a406.id).first_or_create!(assess_weight: 2.5, notes: "Post-lab quiz or short assignment? Currently this is carried out using a short 1-side assignment consiting of three questions.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a406.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a406.id, programme_id: $prog_cbe.id).first_or_create!


    a407 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE150").first.id, code: "115").first_or_create!(name: "Experiment P2: Investigation of a bomb calorimeter",
        name_abrv: "P2", archived: false, in_drive: false, user_id: 5)
    at407 = ActivityTimetable.where(activity_id: a407.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 13, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a407.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/o9bkozv", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a407.id).first_or_create!(criteria: "Interest/experience in combustion, heat transfer and thermodynamics. This is quite a hands-on experiment since it involves dealing with gas cylinders as well.",
        job_desc:"Supervising groups of students using an Anton-Parr bomb calorimeter. Training will be provided for the experiment and also for the marking. Typically up to two GTAs will be required. Model solutions provided for marking. Only one GTA required for marking.", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a407.id).first_or_create!(assess_weight: 3.33, notes: "Post lab quiz prefered, as in previous years.  This has previously been carried out by way of a 1-side assignment.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a407.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a407.id, programme_id: $prog_cbe.id).first_or_create!


    a408 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE150").first.id, code: "116").first_or_create!(name: "Experiment P3: Investigation of a solution calorimeter",
        name_abrv: "P3", archived: false, in_drive: false, user_id: 3)
    at408 = ActivityTimetable.where(activity_id: a408.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 13, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a408.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/hpdgh7k", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a408.id).first_or_create!(criteria: "Interest/experience in making solutions, operating small mixers and data acquisition (National Instruments). This is quite a hands-on experiment since it involves putting equipment together as well as running the equipment.",
        job_desc:"Supervising groups of students using an in-house solution calorimeter. Training will be provided for the experiment and also for the marking. Typically up to two GTAs will be required. Model solutions provided for marking. Only one GTA required for marking.", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a408.id).first_or_create!(assess_weight: 3.33, notes: "As in previous years.Completed numerical analysis sheet and graphical plot of data.",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a408.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a408.id, programme_id: $prog_cbe.id).first_or_create!


    a409 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "117").first_or_create!(name: "Exp 1: Carousel Filter Dryer",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at409 = ActivityTimetable.where(activity_id: a409.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 5, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a409.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a409.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a409.id).first_or_create!(assess_weight: 17.0, notes: "The pre-lab involved the GTA asking questions to check preparation - to the group: marking carried out by staff",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a409.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a409.id, programme_id: $prog_cbe.id).first_or_create!


    a410 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE140").first.id, code: "118").first_or_create!(name: "Mixing of Liquids",
        name_abrv: "E3", archived: false, in_drive: false, user_id: 5)
    at410 = ActivityTimetable.where(activity_id: a410.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 5, max_week_num: 6, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a410.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/hbd2b4p", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a410.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a410.id).first_or_create!(assess_weight: 10.0, notes: "Post-lab quiz or short assignment? Currently this is carried out using a short 1-side assignment consiting of three questions.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 1)
    ActivityTech.where(activity_id: a410.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a410.id, programme_id: $prog_cbe.id).first_or_create!


    a411 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CPE170").first.id, code: "431").first_or_create!(name: "Motion of spheres through liquids",
        name_abrv: "SPHERES", archived: false, in_drive: false, user_id: 2)
    at411 = ActivityTimetable.where(activity_id: a411.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 11, max_week_num: 12, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 180, takedown_time: 240, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a411.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "http://tinyurl.com/jatar4g", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a411.id).first_or_create!(criteria: "Knowledge of stokes's drag law, viscosity, terminal velocity",
        job_desc:"Using the UoS large vertical drag tubes, balls of various sizes and materials are dropped through liquids of different viscosity. The traversal time is recorded and the material density is calculated for each ball based on a series of equations.", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a411.id).first_or_create!(assess_weight: 5.0, notes: "This is a five-question MOLE test to check understanding of the experiment",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 3)
    ActivityTech.where(activity_id: a411.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a411.id, programme_id: $prog_cbe.id).first_or_create!


    a412 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE170").first.id, code: "120").first_or_create!(name: "Particle Motion in Liquid Columns",
        name_abrv: "S4", archived: true, in_drive: false, user_id: 1)
    at412 = ActivityTimetable.where(activity_id: a412.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a412.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a412.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Chem/Chem Eng Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a412.id).first_or_create!(assess_weight: 5.0, notes: "This is the first occasion on which MJH has used a MOLE test as a post-lab",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 1)
    ActivityTech.where(activity_id: a412.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a412.id, programme_id: $prog_cbe.id).first_or_create!


    a413 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "CPE007").first.id, code: "121").first_or_create!(name: "Investigation of ion exchange",
        name_abrv: "FY4", archived: false, in_drive: false, user_id: 3)
    at413 = ActivityTimetable.where(activity_id: a413.id).first_or_create!(duration: 90, kit_prep_time: 60, min_week_num: 9, max_week_num: 9, pref_room_id: $room_al.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a413.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a413.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a413.id).first_or_create!(assess_weight: 2.0, notes: "Prelab (in workbook) + Conduct Lab + Post-lab prescriptive calculations/presentation of results",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a413.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a413.id, programme_id: $prog_fy.id).first_or_create!


    a414 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "CPE007").first.id, code: "122").first_or_create!(name: "Introduction to Electrochemistry",
        name_abrv: "FY5", archived: false, in_drive: false, user_id: 3)
    at414 = ActivityTimetable.where(activity_id: a414.id).first_or_create!(duration: 90, kit_prep_time: 60, min_week_num: 11, max_week_num: 11, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a414.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a414.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a414.id).first_or_create!(assess_weight: 2.0, notes: "Prelab (in workbook) + Conduct Lab + Post-lab prescriptive calculations/presentation of results",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a414.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a414.id, programme_id: $prog_fy.id).first_or_create!


    a415 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "CPE007").first.id, code: "123").first_or_create!(name: "Water of Crystallisation",
        name_abrv: "FY3", archived: false, in_drive: false, user_id: 4)
    at415 = ActivityTimetable.where(activity_id: a415.id).first_or_create!(duration: 90, kit_prep_time: 60, min_week_num: 7, max_week_num: 7, pref_room_id: $room_al.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a415.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a415.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a415.id).first_or_create!(assess_weight: 2.0, notes: "Prelab (in workbook) + Conduct Lab + Post-lab prescriptive calculations/presentation of results",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a415.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a415.id, programme_id: $prog_fy.id).first_or_create!


    a416 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "CPE007").first.id, code: "124").first_or_create!(name: "Working with Solutions",
        name_abrv: "FY1", archived: false, in_drive: false, user_id: 5)
    at416 = ActivityTimetable.where(activity_id: a416.id).first_or_create!(duration: 90, kit_prep_time: 60, min_week_num: 2, max_week_num: 2, pref_room_id: $room_al.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a416.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a416.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a416.id).first_or_create!(assess_weight: 2.0, notes: "Prelab (in workbook) + Conduct Lab + Post-lab prescriptive calculations/presentation of results",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 1)
    ActivityTech.where(activity_id: a416.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a416.id, programme_id: $prog_fy.id).first_or_create!


    a417 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "125").first_or_create!(name: "Exp 2: Cont Crystalliser",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at417 = ActivityTimetable.where(activity_id: a417.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 5, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a417.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a417.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a417.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a417.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a417.id, programme_id: $prog_cbe.id).first_or_create!


    a418 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "126").first_or_create!(name: "Exp2: Consigma Front",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at418 = ActivityTimetable.where(activity_id: a418.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: 7, max_week_num: 11, pref_room_id: $room_pp.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 5, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a418.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a418.id).first_or_create!(criteria: "Interest/experience in powder science and technology. Preferably have a good understanding in different unit operations used for granulation and tableting. The equipment is an industrial scale has various unit operations linked together in one line.",
        job_desc:"In this lab, GTAs are required to supervise groups of students to work on the continuous tabletting line- Consigma in the Pilot plant and carry out an experimental investigation. Students will need to run the line and produce some granules and tablet as well as collect different types of data. Statistical analysis will then be carried out to determine the variability of the measured and calculated values. As a GTA, training will be provided for the experiments, and you will be marking the students for their pre-lab and in lab assessments as well as assisting them to carry out the experiment safely and help them to change some process parameters.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a418.id).first_or_create!(assess_weight: 33.0, notes: "The pre-lab involved the GTA asking questions to check preparation - to the group: marking carried out by staff",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a418.id).first_or_create!(cost_per_student: nil, equip_needed: "ConsiGma25",
        last_risk_assess: Date.new(19, 1, 20), next_risk_assess: Date.new(20, 1, 20), tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a418.id, programme_id: $prog_cbe.id).first_or_create!


    a419 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "127").first_or_create!(name: "Exp 2: Consigma Back",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at419 = ActivityTimetable.where(activity_id: a419.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: 7, max_week_num: 11, pref_room_id: $room_pp.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 5, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a419.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a419.id).first_or_create!(criteria: "Interest/experience in powder science and technology. Preferably have a good understanding in different unit operations used for granulation and tableting. The equipment is an industrial scale has various unit operations linked together in one line.",
        job_desc:"In this lab, GTAs are required to supervise groups of students to work on the continuous tabletting line- Consigma in the Pilot plant and carry out an experimental investigation. Students will need to run the line and produce some granules and tablet as well as collect different types of data. Statistical analysis will then be carried out to determine the variability of the measured and calculated values. As a GTA, training will be provided for the experiments, and you will be marking the students for their pre-lab and in lab assessments as well as assisting them to carry out the experiment safely and help them to change some process parameters.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a419.id).first_or_create!(assess_weight: 33.0, notes: "The pre-lab involved the GTA asking questions to check preparation - to the group: marking carried out by staff",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a419.id).first_or_create!(cost_per_student: nil, equip_needed: "ModulP, MT50 Hardness Tester",
        last_risk_assess: Date.new(19, 1, 20), next_risk_assess: Date.new(20, 1, 20), tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a419.id, programme_id: $prog_cbe.id).first_or_create!


    a420 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "GEE103").first.id, code: "128").first_or_create!(name: "Mixing of Liquids",
        name_abrv: "E3 GEE", archived: false, in_drive: false, user_id: 4)
    at420 = ActivityTimetable.where(activity_id: a420.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a420.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a420.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a420.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 1)
    ActivityTech.where(activity_id: a420.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a420.id, programme_id: $prog_gee.id).first_or_create!


    a421 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR336").first.id, code: "200").first_or_create!(name: "Ceramics 1",
        name_abrv: "Ceramics 1", archived: false, in_drive: false, user_id: 5)
    at421 = ActivityTimetable.where(activity_id: a421.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a421.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a421.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a421.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a421.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a421.id, programme_id: $prog_amrc.id).first_or_create!


    a422 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "MAT377").first.id, code: "307").first_or_create!(name: "Schottky lab for MAT",
        name_abrv: "SCHOTTKY - MAT", archived: false, in_drive: false, user_id: 5)
    at422 = ActivityTimetable.where(activity_id: a422.id).first_or_create!(duration: 180, kit_prep_time: 180, min_week_num: nil, max_week_num: nil, pref_room_id: $room_cr.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 12, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a422.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "MAT Schottky", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a422.id).first_or_create!(criteria: "Experience with chemical processing (preferably, but not necessarily in clean room). Knowledge of basic testing of devices (IV).",
        job_desc:"Assist undergraduate students to make and test a Schottky diode in the Diamond clean room.", jobshop_desc: "GTA in MEE, the Diamond: Clean Room", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a422.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a422.id).first_or_create!(cost_per_student: nil, equip_needed: "All equipment as per CCEE.1.06.002 and CCEE.1.06.003 except LCR meters",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a422.id, programme_id: $prog_gee.id).first_or_create!


    a423 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2220").first.id, code: "200").first_or_create!(name: "Ceramics I",
        name_abrv: "CERAMICS1", archived: false, in_drive: false, user_id: 2)
    at423 = ActivityTimetable.where(activity_id: a423.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 32, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a423.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a423.id).first_or_create!(criteria: "Hands-on experience on either key material characterisation techniques such as XRD, DSC, and SEM.",
        job_desc:"To construct a phase diagram for the solid solution Ba1-xSrxTiO3 using experimental data from a combination of experimental techniques.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a423.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a423.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a423.id, programme_id: $prog_mat.id).first_or_create!


    a424 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR236").first.id, code: "201").first_or_create!(name: "Composites 1",
        name_abrv: "COMP1", archived: false, in_drive: false, user_id: 3)
    at424 = ActivityTimetable.where(activity_id: a424.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a424.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a424.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a424.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a424.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a424.id, programme_id: $prog_amrc.id).first_or_create!


    a425 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR302").first.id, code: "201").first_or_create!(name: "Composites 1",
        name_abrv: "COMP1", archived: false, in_drive: false, user_id: 3)
    at425 = ActivityTimetable.where(activity_id: a425.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a425.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a425.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a425.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a425.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a425.id, programme_id: $prog_amrc.id).first_or_create!


    a426 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR236").first.id, code: "202").first_or_create!(name: "Composites 2",
        name_abrv: "COMP2", archived: false, in_drive: false, user_id: 1)
    at426 = ActivityTimetable.where(activity_id: a426.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a426.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a426.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a426.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a426.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a426.id, programme_id: $prog_amrc.id).first_or_create!


    a427 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR302").first.id, code: "202").first_or_create!(name: "Composites 2",
        name_abrv: "COMP2", archived: false, in_drive: false, user_id: 4)
    at427 = ActivityTimetable.where(activity_id: a427.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a427.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a427.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a427.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a427.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a427.id, programme_id: $prog_amrc.id).first_or_create!


    a428 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2350").first.id, code: "203").first_or_create!(name: "Artefacts Project",
        name_abrv: "ARTEFACTS", archived: false, in_drive: false, user_id: 3)
    at428 = ActivityTimetable.where(activity_id: a428.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a428.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a428.id).first_or_create!(criteria: "",
        job_desc:"The students will analyse an artefact and use various characterisation techniques to analyse its properties and materials. They will use FTIR, XRD, SEM, DSC and variuos mechanical testing techniques.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a428.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 1)
    ActivityTech.where(activity_id: a428.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a428.id, programme_id: $prog_mat.id).first_or_create!


    a429 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "GEE105").first.id, code: "204").first_or_create!(name: "Atomic structure",
        name_abrv: "ATOMIC", archived: false, in_drive: false, user_id: 1)
    at429 = ActivityTimetable.where(activity_id: a429.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a429.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a429.id).first_or_create!(criteria: "Hands-on experience in manufacturing composite panels using pre-preg and the mechanical testing of composite panels.",
        job_desc:"Practical construction of composite panels cut at various angles relative to the fibre direction and mechanical testing in order to understand the directionality of composite materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a429.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a429.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a429.id, programme_id: $prog_gee.id).first_or_create!


    a430 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "20").first_or_create!(name: "Atomic Structure",
        name_abrv: "ATOMIC", archived: false, in_drive: false, user_id: 5)
    at430 = ActivityTimetable.where(activity_id: a430.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a430.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a430.id).first_or_create!(criteria: "Hands-on experience in manufacturing composite panels using pre-preg and the mechanical testing of composite panels.",
        job_desc:"Practical construction of composite panels cut at various angles relative to the fibre direction and mechanical testing in order to understand the directionality of composite materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a430.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a430.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a430.id, programme_id: $prog_mat.id).first_or_create!


    a431 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "205").first_or_create!(name: "Cement making",
        name_abrv: "CEMENTMAKING", archived: false, in_drive: false, user_id: 5)
    at431 = ActivityTimetable.where(activity_id: a431.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 60, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a431.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a431.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"To gain experience in the basic processes involved in cement hydration, the effect of mix design parameters on mortar rheology and strength. How to deal with statistical variation associated with the destructive testing of brittle materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a431.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a431.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a431.id, programme_id: $prog_mat.id).first_or_create!


    a432 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "GEE105").first.id, code: "206").first_or_create!(name: "Cement making and testing",
        name_abrv: "CEMENT", archived: false, in_drive: false, user_id: 4)
    at432 = ActivityTimetable.where(activity_id: a432.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a432.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a432.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"To gain experience in the basic processes involved in cement hydration, the effect of mix design parameters on mortar rheology and strength. How to deal with statistical variation associated with the destructive testing of brittle materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a432.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a432.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a432.id, programme_id: $prog_gee.id).first_or_create!


    a433 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "207").first_or_create!(name: "Cement Testing",
        name_abrv: "CEMENTTESTING", archived: false, in_drive: false, user_id: 3)
    at433 = ActivityTimetable.where(activity_id: a433.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a433.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a433.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"To gain experience in the basic processes involved in cement hydration, the effect of mix design parameters on mortar rheology and strength. How to deal with statistical variation associated with the destructive testing of brittle materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a433.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a433.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a433.id, programme_id: $prog_mat.id).first_or_create!


    a434 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT377").first.id, code: "200").first_or_create!(name: "Ceramics I",
        name_abrv: "CERAMICS1", archived: false, in_drive: false, user_id: 4)
    at434 = ActivityTimetable.where(activity_id: a434.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 32, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a434.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a434.id).first_or_create!(criteria: "Hands-on experience on either key material characterisation techniques such as XRD, DSC, and SEM.",
        job_desc:"To construct a phase diagram for the solid solution Ba1-xSrxTiO3 using experimental data from a combination of experimental techniques.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a434.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a434.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a434.id, programme_id: $prog_gee.id).first_or_create!


    a435 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2220").first.id, code: "208").first_or_create!(name: "Ceramics II",
        name_abrv: "CERAMICS2", archived: false, in_drive: false, user_id: 4)
    at435 = ActivityTimetable.where(activity_id: a435.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 32, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a435.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a435.id).first_or_create!(criteria: "Hands-on experience on either key material characterisation techniques such as XRD, DSC, and SEM.",
        job_desc:"To construct a phase diagram for the solid solution Ba1-xSrxTiO3 using experimental data from a combination of experimental techniques.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a435.id).first_or_create!(assess_weight: nil, notes: "No assessments",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a435.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a435.id, programme_id: $prog_mat.id).first_or_create!


    a436 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT377").first.id, code: "208").first_or_create!(name: "Ceramics II",
        name_abrv: "CERAMICS2", archived: false, in_drive: false, user_id: 3)
    at436 = ActivityTimetable.where(activity_id: a436.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 32, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a436.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a436.id).first_or_create!(criteria: "Hands-on experience on either key material characterisation techniques such as XRD, DSC, and SEM.",
        job_desc:"To construct a phase diagram for the solid solution Ba1-xSrxTiO3 using experimental data from a combination of experimental techniques.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a436.id).first_or_create!(assess_weight: nil, notes: "No assessments",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a436.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a436.id, programme_id: $prog_gee.id).first_or_create!


    a437 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR336").first.id, code: "209").first_or_create!(name: "Characterisation of unknown polymers",
        name_abrv: "UN_POLY", archived: false, in_drive: false, user_id: 3)
    at437 = ActivityTimetable.where(activity_id: a437.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a437.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a437.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a437.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a437.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a437.id, programme_id: $prog_amrc.id).first_or_create!


    a438 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6276").first.id, code: "210").first_or_create!(name: "Charpy notch testing of steel",
        name_abrv: "CHARPYNOTCH", archived: false, in_drive: false, user_id: 1)
    at438 = ActivityTimetable.where(activity_id: a438.id).first_or_create!(duration: 240, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a438.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a438.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a438.id).first_or_create!(assess_weight: nil, notes: "No assessments",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a438.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a438.id, programme_id: $prog_civ.id).first_or_create!


    a439 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2310").first.id, code: "211").first_or_create!(name: "Composite making",
        name_abrv: "COMPMAKING", archived: false, in_drive: false, user_id: 2)
    at439 = ActivityTimetable.where(activity_id: a439.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 16, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a439.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a439.id).first_or_create!(criteria: "Hands-on experience in manufacturing composite panels using pre-preg and the mechanical testing of composite panels.",
        job_desc:"Practical construction of composite panels cut at various angles relative to the fibre direction and mechanical testing in order to understand the directionality of composite materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a439.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a439.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a439.id, programme_id: $prog_mat.id).first_or_create!


    a440 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR219").first.id, code: "212").first_or_create!(name: "Composite making and testing",
        name_abrv: "COMPOSITES", archived: false, in_drive: false, user_id: 5)
    at440 = ActivityTimetable.where(activity_id: a440.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 16, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a440.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a440.id).first_or_create!(criteria: "Hands-on experience in manufacturing composite panels using pre-preg and the mechanical testing of composite panels.",
        job_desc:"Practical construction of composite panels cut at various angles relative to the fibre direction and mechanical testing in order to understand the directionality of composite materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a440.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a440.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a440.id, programme_id: $prog_amrc.id).first_or_create!


    a441 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR331").first.id, code: "212").first_or_create!(name: "Composite making and testing",
        name_abrv: "COMPOSITES", archived: true, in_drive: false, user_id: 5)
    at441 = ActivityTimetable.where(activity_id: a441.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 16, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a441.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a441.id).first_or_create!(criteria: "Hands-on experience in manufacturing composite panels using pre-preg and the mechanical testing of composite panels.",
        job_desc:"Practical construction of composite panels cut at various angles relative to the fibre direction and mechanical testing in order to understand the directionality of composite materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a441.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a441.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a441.id, programme_id: $prog_amrc.id).first_or_create!


    a442 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2310").first.id, code: "213").first_or_create!(name: "Composite testing",
        name_abrv: "COMPTESTING", archived: false, in_drive: false, user_id: 4)
    at442 = ActivityTimetable.where(activity_id: a442.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 16, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a442.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a442.id).first_or_create!(criteria: "Hands-on experience in manufacturing composite panels using pre-preg and the mechanical testing of composite panels.",
        job_desc:"Practical construction of composite panels cut at various angles relative to the fibre direction and mechanical testing in order to understand the directionality of composite materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a442.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a442.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a442.id, programme_id: $prog_mat.id).first_or_create!


    a443 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2600").first.id, code: "214").first_or_create!(name: "Concrete Making and Testing",
        name_abrv: "WOODCOMP", archived: false, in_drive: false, user_id: 1)
    at443 = ActivityTimetable.where(activity_id: a443.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a443.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a443.id).first_or_create!(criteria: "Hands-on experience in manufacturing composite panels using pre-preg and the mechanical testing of composite panels.",
        job_desc:"Practical construction of composite panels cut at various angles relative to the fibre direction and mechanical testing in order to understand the directionality of composite materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a443.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a443.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a443.id, programme_id: $prog_civ.id).first_or_create!


    a444 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode9").first_or_create!(name: "Danger Lab",
        name_abrv: "DANGER", archived: false, in_drive: false, user_id: 1)
    at444 = ActivityTimetable.where(activity_id: a444.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a444.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a444.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Danger Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a444.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_p2p.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a444.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)


    a445 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "GEE105").first.id, code: "216").first_or_create!(name: "Danger Lab II",
        name_abrv: "DANGER2", archived: false, in_drive: false, user_id: 3)
    at445 = ActivityTimetable.where(activity_id: a445.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "This is usually run in during the autumn exam period as the GEE students don't have exams, however must avoid exam week 2 due to FCE1001",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a445.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a445.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "GTA in MEE, the Diamond: Danger Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a445.id).first_or_create!(assess_weight: nil, notes: "Risk Assessment to complete before the session and pre lab. Same 2019/20",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a445.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a445.id, programme_id: $prog_gee.id).first_or_create!


    a446 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "216").first_or_create!(name: "Danger Lab II",
        name_abrv: "DANGER2", archived: false, in_drive: false, user_id: 3)
    at446 = ActivityTimetable.where(activity_id: a446.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a446.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a446.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Danger Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a446.id).first_or_create!(assess_weight: nil, notes: "Risk Assessment to complete before the session and pre lab. Same 2019/20",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a446.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a446.id, programme_id: $prog_mat.id).first_or_create!


    a447 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "GEE105").first.id, code: "217").first_or_create!(name: "DBTT",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at447 = ActivityTimetable.where(activity_id: a447.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 4, max_week_num: 10, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a447.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a447.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a447.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a447.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a447.id, programme_id: $prog_gee.id).first_or_create!


    a448 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "217").first_or_create!(name: "Ductile to brittle temeperature transition",
        name_abrv: "DBTT", archived: false, in_drive: false, user_id: 4)
    at448 = ActivityTimetable.where(activity_id: a448.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a448.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a448.id).first_or_create!(criteria: "",
        job_desc:"To measure a wide range of mechanical properties.To understand how to calculate DBTT.Â How processing routes and crystal structure effect important mechanical properties. Techniques used: tensile testing, impact testing and hardness.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a448.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a448.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a448.id, programme_id: $prog_mat.id).first_or_create!


    a449 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT6670").first.id, code: "217").first_or_create!(name: "DBTT",
        name_abrv: "DBTT", archived: false, in_drive: false, user_id: 1)
    at449 = ActivityTimetable.where(activity_id: a449.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a449.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a449.id).first_or_create!(criteria: "",
        job_desc:"To measure a wide range of mechanical properties.To understand how to calculate DBTT.Â How processing routes and crystal structure effect important mechanical properties. Techniques used: tensile testing, impact testing and hardness.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a449.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a449.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a449.id, programme_id: $prog_mat.id).first_or_create!


    a450 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MEC207").first.id, code: "217").first_or_create!(name: "Ductile to brittle temeperature transition",
        name_abrv: "DBTT", archived: false, in_drive: false, user_id: 2)
    at450 = ActivityTimetable.where(activity_id: a450.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a450.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a450.id).first_or_create!(criteria: "",
        job_desc:"To measure a wide range of mechanical properties.To understand how to calculate DBTT.Â How processing routes and crystal structure effect important mechanical properties. Techniques used: tensile testing, impact testing and hardness.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a450.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a450.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a450.id, programme_id: $prog_mec.id).first_or_create!


    a451 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "GEE206").first.id, code: "218").first_or_create!(name: "Electrical materials",
        name_abrv: "ELECMAT", archived: false, in_drive: false, user_id: 4)
    at451 = ActivityTimetable.where(activity_id: a451.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 24, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a451.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a451.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"This practical seeks to give you an understanding of thermistors. These are devices which are thermally sensitive, exhibiting a change in electrical resistance with a change in body temperature. In this practical you will study a commercial NTC thermistor, which is semi-conducting at room temperature.
    Understand the link between resistance, resistivity and conductivity
    Learn the significance of an Arrhenius plot
    Calculate activation energies", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a451.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a451.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a451.id, programme_id: $prog_gee.id).first_or_create!


    a452 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "228").first_or_create!(name: "Mechanical properties of materials I",
        name_abrv: "MECPROPMAT1", archived: false, in_drive: false, user_id: 5)
    at452 = ActivityTimetable.where(activity_id: a452.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a452.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a452.id).first_or_create!(criteria: "Hands-on experience on Mechanical Testing Techniques (Tensile Testing, Charpy and Hardness).",
        job_desc:"To determine mechanical properties of copper and aluminium, measuring key parameters, performing calculations and generating important plots.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a452.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a452.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a452.id, programme_id: $prog_mat.id).first_or_create!


    a453 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "218").first_or_create!(name: "Electrical materials",
        name_abrv: "ELECMAT", archived: false, in_drive: false, user_id: 3)
    at453 = ActivityTimetable.where(activity_id: a453.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 24, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a453.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a453.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"This practical seeks to give you an understanding of thermistors. These are devices which are thermally sensitive, exhibiting a change in electrical resistance with a change in body temperature. In this practical you will study a commercial NTC thermistor, which is semi-conducting at room temperature.
    Understand the link between resistance, resistivity and conductivity
    Learn the significance of an Arrhenius plot
    Calculate activation energies", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a453.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a453.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a453.id, programme_id: $prog_mat.id).first_or_create!


    a454 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "219").first_or_create!(name: "Gas Laws",
        name_abrv: "GASLAWS", archived: false, in_drive: false, user_id: 5)
    at454 = ActivityTimetable.where(activity_id: a454.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a454.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a454.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"To apply fundamental gas properties such as Gay-Lussacâs law (or Charlesâs law).", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a454.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a454.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a454.id, programme_id: $prog_mat.id).first_or_create!


    a455 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2310").first.id, code: "220").first_or_create!(name: "Glass making",
        name_abrv: "GLASSMAKING", archived: false, in_drive: false, user_id: 1)
    at455 = ActivityTimetable.where(activity_id: a455.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 12, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a455.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a455.id).first_or_create!(criteria: "Hands-on experience of glass making and glass characterisation",
        job_desc:"Practical glassmaking, assess qualitatively and quantitatively how different colorants affect the absorption spectrum of a glass.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a455.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a455.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a455.id, programme_id: $prog_mat.id).first_or_create!


    a456 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2310").first.id, code: "221").first_or_create!(name: "Glass testing",
        name_abrv: "GLASSTESTING", archived: false, in_drive: false, user_id: 2)
    at456 = ActivityTimetable.where(activity_id: a456.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 12, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a456.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a456.id).first_or_create!(criteria: "Hands-on experience of glass making and glass characterisation",
        job_desc:"Practical glassmaking, assess qualitatively and quantitatively how different colorants affect the absorption spectrum of a glass.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a456.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a456.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a456.id, programme_id: $prog_mat.id).first_or_create!


    a457 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "222").first_or_create!(name: "Nylon making",
        name_abrv: "NYLONMAKING", archived: false, in_drive: false, user_id: 1)
    at457 = ActivityTimetable.where(activity_id: a457.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at457.id, room_id: $room_blb.id).first_or_create!

    ActivityTeaching.where(activity_id: a457.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a457.id).first_or_create!(criteria: "",
        job_desc:"This lab practical, which will run in two sessions, seeks to give you knowledge of the characteristics of polymers. The first session will show how polymers are formed and the second session will investigate their mechanical (tensile testing and hardness) and chemical properties.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a457.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a457.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a457.id, programme_id: $prog_mat.id).first_or_create!


    a458 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT6670").first.id, code: "222").first_or_create!(name: "Nylon making",
        name_abrv: "NYLONMAKING", archived: false, in_drive: false, user_id: 3)
    at458 = ActivityTimetable.where(activity_id: a458.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at458.id, room_id: $room_blb.id).first_or_create!

    ActivityTeaching.where(activity_id: a458.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a458.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a458.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a458.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a458.id, programme_id: $prog_mat.id).first_or_create!


    a459 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2600").first.id, code: "223").first_or_create!(name: "Impact testing",
        name_abrv: "IMPACTTESTING", archived: false, in_drive: false, user_id: 4)
    at459 = ActivityTimetable.where(activity_id: a459.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a459.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a459.id).first_or_create!(criteria: "",
        job_desc:"The students will compare the impact toughness for steels of two different composition and two different processing conditions, using impact testers.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a459.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a459.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a459.id, programme_id: $prog_civ.id).first_or_create!


    a460 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "GEE206").first.id, code: "224").first_or_create!(name: "Magnetic materials",
        name_abrv: "MAGMAT", archived: false, in_drive: false, user_id: 4)
    at460 = ActivityTimetable.where(activity_id: a460.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 24, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a460.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a460.id).first_or_create!(criteria: "Knowledge of magnetics materials and how to plot and produce a hysteresis loop for magnetic material",
        job_desc:"Understand how magnetic fields are generated,
    Learn how to measure field strength.
    Understand the structure of a hysteresis loop.
    Plot and produce a hysteresis loop for a magnetic material.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a460.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a460.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a460.id, programme_id: $prog_gee.id).first_or_create!


    a461 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "224").first_or_create!(name: "Magnetic materials",
        name_abrv: "MAGMAT", archived: false, in_drive: false, user_id: 3)
    at461 = ActivityTimetable.where(activity_id: a461.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 24, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a461.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a461.id).first_or_create!(criteria: "Knowledge of magnetics materials and how to plot and produce a hysteresis loop for magnetic material",
        job_desc:"Understand how magnetic fields are generated,
    Learn how to measure field strength.
    Understand the structure of a hysteresis loop.
    Plot and produce a hysteresis loop for a magnetic material.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a461.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a461.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a461.id, programme_id: $prog_mat.id).first_or_create!


    a462 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2310").first.id, code: "225").first_or_create!(name: "Polymers Characterisation",
        name_abrv: "POLYMERCHARAC", archived: false, in_drive: false, user_id: 5)
    at462 = ActivityTimetable.where(activity_id: a462.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 32, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a462.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a462.id).first_or_create!(criteria: "Hands-on experience on either key polymers characterisation techniques such as DSC and FTIR and Mechanical Testing Techniques.",
        job_desc:"Characterisation of two unknown polymeric samples using Tensile Testing and Charpy impact testing, differential scanning calorimetry (DSC) and Fourier transform infrared (FTIR) spectroscopy.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a462.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a462.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a462.id, programme_id: $prog_mat.id).first_or_create!


    a463 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT6670").first.id, code: "225").first_or_create!(name: "Materials characterisation",
        name_abrv: "MATCHARAC", archived: false, in_drive: false, user_id: 2)
    at463 = ActivityTimetable.where(activity_id: a463.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a463.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a463.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a463.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a463.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a463.id, programme_id: $prog_mat.id).first_or_create!


    a464 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1600").first.id, code: "226").first_or_create!(name: "Materials Identification",
        name_abrv: "MATIDENT", archived: false, in_drive: false, user_id: 3)
    at464 = ActivityTimetable.where(activity_id: a464.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a464.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a464.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"To identify unknown materials using various materials analysis techniques.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a464.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a464.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a464.id, programme_id: $prog_civ.id).first_or_create!


    a465 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "226").first_or_create!(name: "Materials Identification",
        name_abrv: "MATIDENT", archived: false, in_drive: false, user_id: 2)
    at465 = ActivityTimetable.where(activity_id: a465.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a465.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a465.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"To identify unknown materials using various materials analysis techniques.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a465.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a465.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a465.id, programme_id: $prog_mat.id).first_or_create!


    a466 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "GEE105").first.id, code: "227").first_or_create!(name: "Materials selection",
        name_abrv: "MATSELECT", archived: false, in_drive: false, user_id: 3)
    at466 = ActivityTimetable.where(activity_id: a466.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a466.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a466.id).first_or_create!(criteria: "General Maths and Physics Skills, able to construct an Ashby diagram",
        job_desc:"To measure a wide range of mechanical properties. To use CES materials selection as a database of material properties.Â To construct an Ashby diagram and use a simple materials selection process. Techniques used: tensile testing and hardness.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a466.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a466.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a466.id, programme_id: $prog_gee.id).first_or_create!


    a467 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1643").first.id, code: "227").first_or_create!(name: "Materials selection",
        name_abrv: "MATSELECT", archived: false, in_drive: false, user_id: 2)
    at467 = ActivityTimetable.where(activity_id: a467.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a467.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a467.id).first_or_create!(criteria: "General Maths and Physics Skills, able to construct an Ashby diagram",
        job_desc:"To measure a wide range of mechanical properties. To use CES materials selection as a database of material properties.Â To construct an Ashby diagram and use a simple materials selection process. Techniques used: tensile testing and hardness.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a467.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a467.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a467.id, programme_id: $prog_aero.id).first_or_create!


    a468 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "227").first_or_create!(name: "Materials Selection",
        name_abrv: "MATSELECT", archived: false, in_drive: false, user_id: 2)
    at468 = ActivityTimetable.where(activity_id: a468.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a468.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a468.id).first_or_create!(criteria: "General Maths and Physics Skills, able to construct an Ashby diagram",
        job_desc:"To measure a wide range of mechanical properties. To use CES materials selection as a database of material properties.Â To construct an Ashby diagram and use a simple materials selection process. Techniques used: tensile testing and hardness.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a468.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a468.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a468.id, programme_id: $prog_mat.id).first_or_create!


    a469 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT6670").first.id, code: "227").first_or_create!(name: "Materials Selection",
        name_abrv: "MATSELECT", archived: false, in_drive: false, user_id: 2)
    at469 = ActivityTimetable.where(activity_id: a469.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a469.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a469.id).first_or_create!(criteria: "General Maths and Physics Skills, able to construct an Ashby diagram",
        job_desc:"To measure a wide range of mechanical properties. To use CES materials selection as a database of material properties.Â To construct an Ashby diagram and use a simple materials selection process. Techniques used: tensile testing and hardness.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a469.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a469.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a469.id, programme_id: $prog_mat.id).first_or_create!


    a470 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR132").first.id, code: "228").first_or_create!(name: "Mechanical properties I",
        name_abrv: "MECPROPMAT1", archived: false, in_drive: false, user_id: 1)
    at470 = ActivityTimetable.where(activity_id: a470.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a470.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a470.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"The students will build a mass based tensile tester and will extract information such as Youngâs modulus and UTS.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a470.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a470.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a470.id, programme_id: $prog_amrc.id).first_or_create!


    a471 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "GEE105").first.id, code: "228").first_or_create!(name: "Mechanical properties of materials I",
        name_abrv: "MECPROPMAT1", archived: false, in_drive: false, user_id: 4)
    at471 = ActivityTimetable.where(activity_id: a471.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a471.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a471.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"The students will build a mass based tensile tester and will extract information such as Youngâs modulus and UTS.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a471.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a471.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a471.id, programme_id: $prog_gee.id).first_or_create!


    a472 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1643").first.id, code: "228").first_or_create!(name: "Mechanical properties of materials I",
        name_abrv: "MECPROPMAT1", archived: false, in_drive: false, user_id: 3)
    at472 = ActivityTimetable.where(activity_id: a472.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a472.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a472.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"The students will build a mass based tensile tester and will extract information such as Youngâs modulus and UTS.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a472.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a472.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a472.id, programme_id: $prog_aero.id).first_or_create!


    a473 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MEC133").first.id, code: "228").first_or_create!(name: "Mechanical properties of materials I",
        name_abrv: "MECPROPMAT1", archived: false, in_drive: false, user_id: 5)
    at473 = ActivityTimetable.where(activity_id: a473.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a473.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a473.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"The students will build a mass based tensile tester and will extract information such as Youngâs modulus and UTS.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a473.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a473.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a473.id, programme_id: $prog_mec.id).first_or_create!


    a474 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR132").first.id, code: "217").first_or_create!(name: "DBTT",
        name_abrv: "DBTT", archived: false, in_drive: false, user_id: 2)
    at474 = ActivityTimetable.where(activity_id: a474.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a474.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a474.id).first_or_create!(criteria: "Hands-on experience on Mechanical Testing Techniques (Tensile Testing, Charpy and Hardness).",
        job_desc:"To determine mechanical properties of copper and aluminium, measuring key parameters, performing calculations and generating important plots.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a474.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a474.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a474.id, programme_id: $prog_amrc.id).first_or_create!


    a475 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2600").first.id, code: "230").first_or_create!(name: "Microstructure",
        name_abrv: "MICROSTRUCTURE", archived: false, in_drive: false, user_id: 5)
    at475 = ActivityTimetable.where(activity_id: a475.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a475.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a475.id).first_or_create!(criteria: "",
        job_desc:"The students will gain experience in using tensile test frames and extract mechanical properties from them such as Youngâs modulus, yield stress, and ultimate strength for steels of different composition.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a475.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a475.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a475.id, programme_id: $prog_civ.id).first_or_create!


    a476 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "231").first_or_create!(name: "Nylon testing",
        name_abrv: "NYLONTESTING", archived: false, in_drive: false, user_id: 1)
    at476 = ActivityTimetable.where(activity_id: a476.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a476.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a476.id).first_or_create!(criteria: "",
        job_desc:"This lab practical, which will run in two sessions, seeks to give you knowledge of the characteristics of polymers. The first session will show how polymers are formed and the second session will investigate their mechanical (tensile testing and hardness) and chemical properties.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a476.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a476.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a476.id, programme_id: $prog_mat.id).first_or_create!


    a477 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2320").first.id, code: "232").first_or_create!(name: "Optical Microscopy - Metals I",
        name_abrv: "OMMETALS1", archived: false, in_drive: false, user_id: 3)
    at477 = ActivityTimetable.where(activity_id: a477.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a477.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a477.id).first_or_create!(criteria: "",
        job_desc:"In these practicals the students will be looking at the microstructures of metal samples using optical microscopes.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a477.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a477.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a477.id, programme_id: $prog_mat.id).first_or_create!


    a478 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2320").first.id, code: "233").first_or_create!(name: "Optical Microscopy - Metals II",
        name_abrv: "OMMETALS2", archived: false, in_drive: false, user_id: 5)
    at478 = ActivityTimetable.where(activity_id: a478.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a478.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a478.id).first_or_create!(criteria: "",
        job_desc:"In these practicals the students will be looking at the microstructures of metal samples using optical microscopes.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a478.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a478.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a478.id, programme_id: $prog_mat.id).first_or_create!


    a479 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2320").first.id, code: "234").first_or_create!(name: "Optical Microscopy- Ceramics",
        name_abrv: "OMCERAMICS", archived: false, in_drive: false, user_id: 4)
    at479 = ActivityTimetable.where(activity_id: a479.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a479.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a479.id).first_or_create!(criteria: "",
        job_desc:"In these practicals the students will be looking at the microstructures of ceramics samples using optical microscopes.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a479.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a479.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a479.id, programme_id: $prog_mat.id).first_or_create!


    a480 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR302").first.id, code: "235").first_or_create!(name: "Polymers Characterisation",
        name_abrv: "POLYMERCHARAC", archived: false, in_drive: false, user_id: 2)
    at480 = ActivityTimetable.where(activity_id: a480.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 32, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a480.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a480.id).first_or_create!(criteria: "Hands-on experience on either key polymers characterisation techniques such as DSC and FTIR and Mechanical Testing Techniques.",
        job_desc:"Characterisation of two unknown polymeric samples using Tensile Testing and Charpy impact testing, differential scanning calorimetry (DSC) and Fourier transform infrared (FTIR) spectroscopy.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a480.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a480.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a480.id, programme_id: $prog_amrc.id).first_or_create!


    a481 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR331").first.id, code: "235").first_or_create!(name: "Polymers Characterisation",
        name_abrv: "POLYMERCHARAC", archived: true, in_drive: false, user_id: 5)
    at481 = ActivityTimetable.where(activity_id: a481.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 32, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a481.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a481.id).first_or_create!(criteria: "Hands-on experience on either key polymers characterisation techniques such as DSC and FTIR and Mechanical Testing Techniques.",
        job_desc:"Characterisation of two unknown polymeric samples using Tensile Testing and Charpy impact testing, differential scanning calorimetry (DSC) and Fourier transform infrared (FTIR) spectroscopy.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a481.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a481.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a481.id, programme_id: $prog_amrc.id).first_or_create!


    a482 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2320").first.id, code: "236").first_or_create!(name: "SEM/EDX",
        name_abrv: "SEM/EDX", archived: false, in_drive: false, user_id: 5)
    at482 = ActivityTimetable.where(activity_id: a482.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 4, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a482.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a482.id).first_or_create!(criteria: "",
        job_desc:"During this session the students will learn basic theory and practical use of a scanning electron microscope (SEM) for topographical imaging, chemical composition analysis and mapping.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a482.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a482.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a482.id, programme_id: $prog_mat.id).first_or_create!


    a483 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "237").first_or_create!(name: "Study of a Binary Eutectic Alloy of Sn and Bi",
        name_abrv: "Phase diagram of Sn and Bi", archived: false, in_drive: false, user_id: 1)
    at483 = ActivityTimetable.where(activity_id: a483.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 9, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a483.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a483.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a483.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 3)
    ActivityTech.where(activity_id: a483.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a483.id, programme_id: $prog_mat.id).first_or_create!


    a484 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1600").first.id, code: "238").first_or_create!(name: "Wood composite",
        name_abrv: "WOODCOMP", archived: false, in_drive: false, user_id: 2)
    at484 = ActivityTimetable.where(activity_id: a484.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a484.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a484.id).first_or_create!(criteria: "Hands-on experience in manufacturing composite panels using pre-preg and the mechanical testing of composite panels.",
        job_desc:"Practical construction of composite panels cut at various angles relative to the fibre direction and mechanical testing in order to understand the directionality of composite materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a484.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (short report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a484.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a484.id, programme_id: $prog_civ.id).first_or_create!


    a485 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR132").first.id, code: "239").first_or_create!(name: "Microscopy of Cast Irons",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at485 = ActivityTimetable.where(activity_id: a485.id).first_or_create!(duration: 240, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "From AMRC: Possibly hybrid with some parts of Metals 1 and Metals 2  - to be determined with lab lead and module leader.",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a485.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a485.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a485.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a485.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a485.id, programme_id: $prog_amrc.id).first_or_create!


    a486 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1610").first.id, code: "240").first_or_create!(name: "Crystal Maker II",
        name_abrv: "CRYS2", archived: false, in_drive: false, user_id: 1)
    at486 = ActivityTimetable.where(activity_id: a486.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a486.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a486.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a486.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a486.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a486.id, programme_id: $prog_mat.id).first_or_create!


    a487 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1510").first.id, code: "300").first_or_create!(name: "Histology/Microscopy",
        name_abrv: "HIST/MICRO", archived: false, in_drive: false, user_id: 5)
    at487 = ActivityTimetable.where(activity_id: a487.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 10, pref_room_id: $room_ml.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 180, takedown_time: 180, notes: "",
        capacity: 50, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a487.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a487.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a487.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a487.id).first_or_create!(cost_per_student: nil, equip_needed: "Laptops, microscopes, histology slides",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a487.id, programme_id: $prog_mat.id).first_or_create!


    a488 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE280").first.id, code: "301").first_or_create!(name: "Antibiotic production",
        name_abrv: "ANTIBIOTIC", archived: false, in_drive: false, user_id: 1)
    at488 = ActivityTimetable.where(activity_id: a488.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 6, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: nil, takedown_time: 180, notes: "",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a488.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a488.id).first_or_create!(criteria: "",
        job_desc:"Production, purification and analysis of the antibiotic Tylosin from Streptomyces fradiae. Flask cultures, chemical lysis, cholorform extraction, Bradford Assay, absorbance spectroscopy, dry biomass and OD600 measurement.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a488.id).first_or_create!(assess_weight: nil, notes: "Type TBC",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a488.id).first_or_create!(cost_per_student: nil, equip_needed: "tbc - shaking incubators, LEV, water baths, 40R centrifuge, Class II (for prep), absorbance plate readers, balances, spectrophotometers",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a488.id, programme_id: $prog_cbe.id).first_or_create!


    a489 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "BIE372").first.id, code: "302").first_or_create!(name: "Bioengineering Group Projects",
        name_abrv: "BIOGRP", archived: false, in_drive: false, user_id: 5)
    at489 = ActivityTimetable.where(activity_id: a489.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: nil,
        same_as_prev_year: true, series_setup_time: 60, setup_time: nil, takedown_time: 60, notes: "",
        capacity: 50, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a489.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a489.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a489.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a489.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a489.id, programme_id: $prog_bio.id).first_or_create!


    a490 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6116").first.id, code: "303").first_or_create!(name: "Bioreactors",
        name_abrv: "BIOREACTORS", archived: false, in_drive: false, user_id: 1)
    at490 = ActivityTimetable.where(activity_id: a490.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 8, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 360, takedown_time: 120, notes: "1. Pipetting & S
    2. Buffers
    3. E.Coli Trans
    4. DNA Extract
    5. Bioreactors
    6. Bio scale up
    7. Glucose Assay
    8. FPLC
    9. HPLC
    10.Pract Exam",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a490.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a490.id).first_or_create!(criteria: "Culture of microorganisms",
        job_desc:"Culture and analysis of E.coli using a 1 L bioreactor.", jobshop_desc: "claire.johnson@sheffield.ac.uk, h.drouin@sheffield.ac.uk, helen.wright@sheffield.ac.uk", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a490.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_other.id, num_assess: 40)
    ActivityTech.where(activity_id: a490.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a490.id, programme_id: $prog_cbe.id).first_or_create!


    a491 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2530").first.id, code: "304").first_or_create!(name: "Cell culture 1: Aseptic techniques",
        name_abrv: "ASEPTICTECH", archived: false, in_drive: false, user_id: 4)
    at491 = ActivityTimetable.where(activity_id: a491.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 8, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: 120, setup_time: nil, takedown_time: 120, notes: "",
        capacity: 20, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a491.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a491.id).first_or_create!(criteria: "Cell culture and aseptic technique.",
        job_desc:"Seeding HaCaT cells onto 3 biomaterial disks to investigate biocompatibility", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a491.id).first_or_create!(assess_weight: nil, notes: "MOLE test",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a491.id).first_or_create!(cost_per_student: nil, equip_needed: "Class II BSC, micropiettes, auto pipettes, bioincubators",
        last_risk_assess: nil, next_risk_assess: Date.new(19, 9, 20), tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a491.id, programme_id: $prog_mat.id).first_or_create!


    a492 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2530").first.id, code: "305").first_or_create!(name: "Cell culture 2: MTT Assay",
        name_abrv: "MTTASSAY", archived: false, in_drive: false, user_id: 3)
    at492 = ActivityTimetable.where(activity_id: a492.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 3, max_week_num: 9, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 180, takedown_time: 90, notes: "",
        capacity: 20, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a492.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a492.id).first_or_create!(criteria: "Cell culture and aseptic technique. Biological assays.",
        job_desc:"Using the MTT assay to measure metabolic activity of the cells seeded onto biomaterial disks", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a492.id).first_or_create!(assess_weight: nil, notes: "Includes aspetic techniques",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a492.id).first_or_create!(cost_per_student: nil, equip_needed: "Class II BSC, plate readers",
        last_risk_assess: nil, next_risk_assess: Date.new(19, 9, 20), tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a492.id, programme_id: $prog_mat.id).first_or_create!


    a493 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6116").first.id, code: "306").first_or_create!(name: "DNA extraction and analysis",
        name_abrv: "DNAEXTRACT", archived: false, in_drive: false, user_id: 5)
    at493 = ActivityTimetable.where(activity_id: a493.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 5, max_week_num: 6, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 240, takedown_time: 60, notes: "1. Pipetting & S
    2. Buffers
    3. E.Coli Trans
    4. DNA Extract
    5. Bioreactors
    6. Bio scale up
    7. Glucose Assay
    8. FPLC
    9. HPLC
    10.Pract Exam",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a493.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a493.id).first_or_create!(criteria: "Competent user of micropipettes, experience of minipreps or other DNA extraction. Agarose gel electrophoresis.",
        job_desc:"Plasmid DNA extraction from E.coli using silica 'miniprep' spin columns. Quantification using SYBR DNA stain and running agarose gel electrophoresis.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a493.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a493.id).first_or_create!(cost_per_student: nil, equip_needed: "Fluorescent Plate Reader, Microcentrifuges, Gel Doc, Electrophoresis chambers and power packs, vortex mixers",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a493.id, programme_id: $prog_cbe.id).first_or_create!


    a494 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6116").first.id, code: "307").first_or_create!(name: "E.coli transformation",
        name_abrv: "ECOLI", archived: false, in_drive: false, user_id: 4)
    at494 = ActivityTimetable.where(activity_id: a494.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 4, max_week_num: 5, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 180, takedown_time: nil, notes: "1. Pipetting & S
    2. Buffers
    3. E.Coli Trans
    4. DNA Extract
    5. Bioreactors
    6. Bio scale up
    7. Glucose Assay
    8. FPLC
    9. HPLC
    10.Pract Exam",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a494.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a494.id).first_or_create!(criteria: "Experience of bacterial transformation. Knowledge of molecular biology.",
        job_desc:"Transforming E.coli BL21 (DE3) with plasmid DNA.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a494.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a494.id).first_or_create!(cost_per_student: nil, equip_needed: "bunsen burners, static incubator, shaking incubator, water bath, ice machine",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a494.id, programme_id: $prog_cbe.id).first_or_create!


    a495 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE190").first.id, code: "308").first_or_create!(name: "Enzyme activity",
        name_abrv: "ENZYME", archived: false, in_drive: false, user_id: 4)
    at495 = ActivityTimetable.where(activity_id: a495.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 10, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: 75, setup_time: 180, takedown_time: 60, notes: "",
        capacity: 30, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at495.id, room_id: $room_blb.id).first_or_create!

    ActivityTeaching.where(activity_id: a495.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a495.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a495.id).first_or_create!(assess_weight: nil, notes: "During is data interpretation. Post is MOLE test",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a495.id).first_or_create!(cost_per_student: nil, equip_needed: "Spectrophotometers, micropipettes, auto pipettes, balances",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a495.id, programme_id: $prog_cbe.id).first_or_create!


    a496 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE190").first.id, code: "309").first_or_create!(name: "Fermentation kinetics",
        name_abrv: "FERMKINETICS", archived: false, in_drive: false, user_id: 2)
    at496 = ActivityTimetable.where(activity_id: a496.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 10, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 240, takedown_time: 240, notes: "Needs to be in the afternoon due to set up time",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a496.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a496.id).first_or_create!(criteria: "",
        job_desc:"3 mini experiments - Growth of yeast using 1L bioreactor and ivestigating oxygen consumption, staining and counting yeast, measuring CO2 production of yeast.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a496.id).first_or_create!(assess_weight: 6.0, notes: "In lab assessment - this could be formative.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a496.id).first_or_create!(cost_per_student: nil, equip_needed: "Bioreactor, Spectrophotometers, Microscopes, bunsen burners, water baths, balances",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a496.id, programme_id: $prog_cbe.id).first_or_create!


    a497 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6116").first.id, code: "310").first_or_create!(name: "Bioreactor scale-up (Fermentor)",
        name_abrv: "BIOSCALE", archived: false, in_drive: false, user_id: 4)
    at497 = ActivityTimetable.where(activity_id: a497.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: 7, max_week_num: 10, pref_room_id: $room_pp.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "1. Pipetting & S
    2. Buffers
    3. E.Coli Trans
    4. DNA Extract
    5. Bioreactors
    6. Bio scale up
    7. Glucose Assay
    8. FPLC
    9. HPLC
    10.Pract Exam",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a497.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a497.id).first_or_create!(criteria: "Culture of microorganisms",
        job_desc:"Supervising students in The DiPP", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a497.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_none.id, num_assess: 40)
    ActivityTech.where(activity_id: a497.id).first_or_create!(cost_per_student: nil, equip_needed: "24/03/20",
        last_risk_assess: nil, next_risk_assess: Date.new(18, 3, 24), tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a497.id, programme_id: $prog_cbe.id).first_or_create!


    a498 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6116").first.id, code: "311").first_or_create!(name: "FPLC & protein analysis",
        name_abrv: "FPLC", archived: false, in_drive: false, user_id: 2)
    at498 = ActivityTimetable.where(activity_id: a498.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 1, max_week_num: 4, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 120, setup_time: nil, takedown_time: 60, notes: "1. Pipetting & S
    2. Buffers
    3. E.Coli Trans
    4. DNA Extract
    5. Bioreactors
    6. Bio scale up
    7. Glucose Assay
    8. FPLC
    9. HPLC
    10.Pract Exam",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a498.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a498.id).first_or_create!(criteria: "",
        job_desc:"Protein separation using AKTA FPLC system and determining protein concentration using the Bradford assay", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a498.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a498.id).first_or_create!(cost_per_student: nil, equip_needed: "FPLC, Ultracentrifuge, Cell Distruptor, fluorescent plate reader, absorbance plate reader",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a498.id, programme_id: $prog_cbe.id).first_or_create!


    a499 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT209").first.id, code: "312").first_or_create!(name: "Gel electrophoresis",
        name_abrv: "GELELEC", archived: false, in_drive: false, user_id: 1)
    at499 = ActivityTimetable.where(activity_id: a499.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 8, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: 180, setup_time: 240, takedown_time: 90, notes: "Should run before Western Blotting",
        capacity: nil, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at499.id, room_id: $room_blb.id).first_or_create!

    ActivityTeaching.where(activity_id: a499.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a499.id).first_or_create!(criteria: "",
        job_desc:"Separating proteins by SDS-PAGE", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: 30, staff_ratio: nil)
    ActivityAssess.where(activity_id: a499.id).first_or_create!(assess_weight: nil, notes: "Report incudes western blot and submitted after that part of the experiment",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a499.id).first_or_create!(cost_per_student: nil, equip_needed: "Biorad gel doc x2, gel tank, power packs, balances, transblot turbos, micropipettes, LEV, heater block, centrifuge",
        last_risk_assess: nil, next_risk_assess: Date.new(20, 1, 28), tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a499.id, programme_id: $prog_mat.id).first_or_create!


    a500 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6116").first.id, code: "313").first_or_create!(name: "Glucose assay",
        name_abrv: "GLUCOSE", archived: false, in_drive: false, user_id: 3)
    at500 = ActivityTimetable.where(activity_id: a500.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 10, max_week_num: 11, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 120, setup_time: 180, takedown_time: 60, notes: "1. Pipetting & S
    2. Buffers
    3. E.Coli Trans
    4. DNA Extract
    5. Bioreactors
    6. Bio scale up
    7. Glucose Assay (Can be 1st experiment in Spring if doesn't fit in Autumn)
    8. FPLC
    9. HPLC
    10.Pract Exam",
        capacity: 30, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at500.id, room_id: $room_blt.id).first_or_create!

    ActivityTeaching.where(activity_id: a500.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a500.id).first_or_create!(criteria: "Biological assays",
        job_desc:"Glucose analysis of E.coli culture samples.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a500.id).first_or_create!(assess_weight: nil, notes: "Data Presentation",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a500.id).first_or_create!(cost_per_student: nil, equip_needed: "Spectrophotometers, water baths, YSI analyser",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a500.id, programme_id: $prog_cbe.id).first_or_create!


    a502 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6116").first.id, code: "315").first_or_create!(name: "HPLC",
        name_abrv: "HPLC", archived: false, in_drive: false, user_id: 1)
    at502 = ActivityTimetable.where(activity_id: a502.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 5, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 120, setup_time: nil, takedown_time: nil, notes: "1. Pipetting & S
    2. Buffers
    3. E.Coli Trans
    4. DNA Extract
    5. Bioreactors
    6. Bio scale up
    7. Glucose Assay
    8. FPLC
    9. HPLC
    10.Pract Exam",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a502.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a502.id).first_or_create!(criteria: "",
        job_desc:"Separating proteins in a mixture and quantifying the concentration of GFP.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a502.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a502.id).first_or_create!(cost_per_student: nil, equip_needed: "HPLC, fluorescent plate reader",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a502.id, programme_id: $prog_cbe.id).first_or_create!


    a503 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE240").first.id, code: "316").first_or_create!(name: "Hygiene Lab: part 1",
        name_abrv: "HYGIENE1", archived: false, in_drive: false, user_id: 3)
    at503 = ActivityTimetable.where(activity_id: a503.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 10, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: 60, notes: "",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a503.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a503.id).first_or_create!(criteria: "Basic lab work. Knowledge of microbiology beneficial although not essential.",
        job_desc:"Exploring the effect of correct technique and good hygiene on experimental accuracy and biological safety. Investigating the effects of antibiotic action on pre-cultured E.Coli bacteria.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a503.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a503.id).first_or_create!(cost_per_student: nil, equip_needed: "Static incubators, pipettes",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a503.id, programme_id: $prog_cbe.id).first_or_create!


    a504 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE240").first.id, code: "317").first_or_create!(name: "Hygiene Lab: part 2",
        name_abrv: "HYGIENE2", archived: false, in_drive: false, user_id: 2)
    at504 = ActivityTimetable.where(activity_id: a504.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 2, max_week_num: 10, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 30, takedown_time: nil, notes: "Part 2 must follow part 1 - preferably follwing day or day after",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a504.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a504.id).first_or_create!(criteria: "Basic lab work. Knowledge of microbiology beneficial although not essential.",
        job_desc:"Exploring the effect of correct technique and good hygiene on experimental accuracy and biological safety. Investigating the effects of antibiotic action on pre-cultured E.Coli bacteria.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a504.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a504.id).first_or_create!(cost_per_student: nil, equip_needed: "Static Incubators, Cameras",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a504.id, programme_id: $prog_cbe.id).first_or_create!


    a505 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT408").first.id, code: "318").first_or_create!(name: "Live cell imaging 1",
        name_abrv: "CELL1", archived: false, in_drive: false, user_id: 3)
    at505 = ActivityTimetable.where(activity_id: a505.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 5, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: 180, setup_time: nil, takedown_time: 75, notes: "",
        capacity: 20, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a505.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a505.id).first_or_create!(criteria: "Cell culture and aseptic technique, microscopy.",
        job_desc:"Scratch assay using HaCaT cells and setting up live cell imaging system to capture cell migration; labelling cells with a fluorophore and capturing images. Analysing cell migration data using ImageJ.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a505.id).first_or_create!(assess_weight: nil, notes: "Google SIte. Includes SEM and FTIR",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a505.id).first_or_create!(cost_per_student: nil, equip_needed: "Class II BSC, live cell imagers x2, microscopes, micropipettes, autopipettes",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a505.id, programme_id: $prog_mat.id).first_or_create!


    a506 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT6311").first.id, code: "318").first_or_create!(name: "Live cell imaging 1",
        name_abrv: "CELL1", archived: true, in_drive: false, user_id: 4)
    at506 = ActivityTimetable.where(activity_id: a506.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a506.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a506.id).first_or_create!(criteria: "Cell culture and aseptic technique, microscopy.",
        job_desc:"Scratch assay using HaCaT cells and setting up live cell imaging system to capture cell migration; labelling cells with a fluorophore and capturing images. Analysing cell migration data using ImageJ.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a506.id).first_or_create!(assess_weight: nil, notes: "Google SIte. Includes SEM and FTIR",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a506.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a506.id, programme_id: $prog_mat.id).first_or_create!


    a507 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT408").first.id, code: "319").first_or_create!(name: "Live cell imaging 2",
        name_abrv: "CELL2", archived: false, in_drive: false, user_id: 1)
    at507 = ActivityTimetable.where(activity_id: a507.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 3, max_week_num: 6, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Must follow Live Cell Imaging 1",
        capacity: 20, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a507.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a507.id).first_or_create!(criteria: "Cell culture and aseptic technique, microscopy.",
        job_desc:"Scratch assay using HaCaT cells and setting up live cell imaging system to capture cell migration; labelling cells with a fluorophore and capturing images. Analysing cell migration data using ImageJ.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a507.id).first_or_create!(assess_weight: nil, notes: "Google SIte. Includes SEM and FTIR",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a507.id).first_or_create!(cost_per_student: nil, equip_needed: "Live cell imager x2, microscopes",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a507.id, programme_id: $prog_mat.id).first_or_create!


    a508 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT6311").first.id, code: "319").first_or_create!(name: "Live cell imaging 2",
        name_abrv: "CELL2", archived: true, in_drive: false, user_id: 5)
    at508 = ActivityTimetable.where(activity_id: a508.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a508.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a508.id).first_or_create!(criteria: "Cell culture and aseptic technique, microscopy.",
        job_desc:"Scratch assay using HaCaT cells and setting up live cell imaging system to capture cell migration; labelling cells with a fluorophore and capturing images. Analysing cell migration data using ImageJ.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a508.id).first_or_create!(assess_weight: nil, notes: "Google SIte. Includes SEM and FTIR",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a508.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a508.id, programme_id: $prog_mat.id).first_or_create!


    a509 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6116").first.id, code: "320").first_or_create!(name: "Making buffers",
        name_abrv: "BUFFERS", archived: false, in_drive: false, user_id: 3)
    at509 = ActivityTimetable.where(activity_id: a509.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 3, max_week_num: 4, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 120, setup_time: 360, takedown_time: 180, notes: "1. Pipetting & S
    2. Buffers
    3. E.Coli Trans
    4. DNA Extract
    5. Bioreactors
    6. Bio scale up
    7. Glucose Assay
    8. FPLC
    9. HPLC
    10.Pract Exam",
        capacity: 30, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at509.id, room_id: $room_blt.id).first_or_create!

    ActivityTeaching.where(activity_id: a509.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a509.id).first_or_create!(criteria: "Experience of making solutions from solids. An understanding of acids and bases.",
        job_desc:"Investigating the properties of buffers (titration using bicarbonate buffer)", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a509.id).first_or_create!(assess_weight: nil, notes: "Data Presentation",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a509.id).first_or_create!(cost_per_student: nil, equip_needed: "balances, pH meters",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a509.id, programme_id: $prog_cbe.id).first_or_create!


    a510 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "BIE103").first.id, code: "321").first_or_create!(name: "Making nylon",
        name_abrv: "NYLONMAKING", archived: false, in_drive: false, user_id: 3)
    at510 = ActivityTimetable.where(activity_id: a510.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 10, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 180, takedown_time: 120, notes: "One experiment of 3 for this module",
        capacity: 30, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at510.id, room_id: $room_blb.id).first_or_create!

    ActivityTeaching.where(activity_id: a510.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a510.id).first_or_create!(criteria: "Knowlegde of polymer chemistry desirable",
        job_desc:"Making a nylon rope (demonstrating polycondensation reaction)", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a510.id).first_or_create!(assess_weight: nil, notes: "Calculations and observations marked during lab session.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a510.id).first_or_create!(cost_per_student: nil, equip_needed: "Clamps & Stands, LEV",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a510.id, programme_id: $prog_bio.id).first_or_create!


    a511 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE240").first.id, code: "322").first_or_create!(name: "making yogurt: part 1",
        name_abrv: "YOGHURT1", archived: false, in_drive: false, user_id: 1)
    at511 = ActivityTimetable.where(activity_id: a511.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 10, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 120, setup_time: 240, takedown_time: 240, notes: "2 hours required.",
        capacity: 30, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at511.id, room_id: $room_blt.id).first_or_create!

    ActivityTeaching.where(activity_id: a511.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a511.id).first_or_create!(criteria: "Basic lab work. Knowledge of microbiology beneficial although not essential.",
        job_desc:"To investigate the use of microorganisms in the manufacture of common food products by making yogurt and paneer cheese.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a511.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a511.id).first_or_create!(cost_per_student: nil, equip_needed: "Static Incubators, Water baths, hotplate stirrers, balances,",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a511.id, programme_id: $prog_cbe.id).first_or_create!


    a512 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE240").first.id, code: "323").first_or_create!(name: "making yogurt: part 2",
        name_abrv: "YOGHURT2", archived: false, in_drive: false, user_id: 1)
    at512 = ActivityTimetable.where(activity_id: a512.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 2, max_week_num: 10, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 30, takedown_time: 60, notes: "Part 2 to follow part 1 24h or 48h later. 1 hour required.",
        capacity: 30, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at512.id, room_id: $room_blt.id).first_or_create!

    ActivityTeaching.where(activity_id: a512.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a512.id).first_or_create!(criteria: "Basic lab work. Knowledge of microbiology beneficial although not essential.",
        job_desc:"To investigate the use of microorganisms in the manufacture of common food products by making yogurt and paneer cheese.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a512.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a512.id).first_or_create!(cost_per_student: nil, equip_needed: "Static incubator, cameras",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a512.id, programme_id: $prog_cbe.id).first_or_create!


    a513 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE280").first.id, code: "324").first_or_create!(name: "Mammalian cell culture",
        name_abrv: "MAMMALIAN", archived: false, in_drive: false, user_id: 3)
    at513 = ActivityTimetable.where(activity_id: a513.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 10, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: 120, setup_time: nil, takedown_time: 120, notes: "",
        capacity: 20, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a513.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a513.id).first_or_create!(criteria: "Experience culturing mammalian cells. Experience operating bioreactors desirable.",
        job_desc:"Counting & subculturing CHO cells, operating a mini bioreactor for CHO cell culture.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a513.id).first_or_create!(assess_weight: nil, notes: "Data interpretation and short wriet-up",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a513.id).first_or_create!(cost_per_student: nil, equip_needed: "Class II BSC, microscopes, Vi-Cell, Applikon Mini bioreactors, micropipettes, auto pipettes",
        last_risk_assess: nil, next_risk_assess: Date.new(20, 2, 7), tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a513.id, programme_id: $prog_cbe.id).first_or_create!


    a514 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1520").first.id, code: "325").first_or_create!(name: "Microscopy",
        name_abrv: "MICROSCOPY", archived: false, in_drive: false, user_id: 3)
    at514 = ActivityTimetable.where(activity_id: a514.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 7, pref_room_id: $room_ml.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 180, takedown_time: 180, notes: "Microscopy session to follow histology staining",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a514.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a514.id).first_or_create!(criteria: "Operating light microscopes and imaging tissue sections",
        job_desc:"Using digital camera and Motic software to take images of stained tissue sections", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: 30, staff_ratio: nil)
    ActivityAssess.where(activity_id: a514.id).first_or_create!(assess_weight: nil, notes: "Also includes hisology staining",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a514.id).first_or_create!(cost_per_student: nil, equip_needed: "Microscopes, laptops, histology slides",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a514.id, programme_id: $prog_mat.id).first_or_create!


    a515 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "BIE103").first.id, code: "326").first_or_create!(name: "Physiological testing",
        name_abrv: "PHYTEST", archived: false, in_drive: false, user_id: 4)
    at515 = ActivityTimetable.where(activity_id: a515.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 8, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 60, takedown_time: 60, notes: "One of 3 experiments for this module",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a515.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a515.id).first_or_create!(criteria: "Understanding of physiology and spreadsheets. Knowledge of signal transduction desirable.",
        job_desc:"Measuring grip strength, pulse rate and blood pressure", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: 10, staff_ratio: nil)
    ActivityAssess.where(activity_id: a515.id).first_or_create!(assess_weight: nil, notes: "Data presentation",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a515.id).first_or_create!(cost_per_student: nil, equip_needed: "ADInstruments kits, laptops",
        last_risk_assess: nil, next_risk_assess: Date.new(19, 10, 1), tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a515.id, programme_id: $prog_bio.id).first_or_create!


    a516 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "BIE291").first.id, code: "327").first_or_create!(name: "Physiological testing 1: ECG",
        name_abrv: "PHYTEST1", archived: false, in_drive: false, user_id: 3)
    at516 = ActivityTimetable.where(activity_id: a516.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 4, max_week_num: 7, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 20, setup_time: 45, takedown_time: 45, notes: "ECG to be before investigating physiological signals",
        capacity: nil, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a516.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a516.id).first_or_create!(criteria: "Understanding of physiology and spreadsheets. Knowledge of signal transduction desirable.",
        job_desc:"ECG using ADInstruments PowerLab hardware and LabChart software.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: 20, staff_ratio: nil)
    ActivityAssess.where(activity_id: a516.id).first_or_create!(assess_weight: nil, notes: "Data presentation",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a516.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: Date.new(19, 10, 1), tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a516.id, programme_id: $prog_bio.id).first_or_create!


    a517 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "BIE291").first.id, code: "328").first_or_create!(name: "Physiological testing 2: Investigating physiological signals",
        name_abrv: "PHYTEST2", archived: false, in_drive: false, user_id: 4)
    at517 = ActivityTimetable.where(activity_id: a517.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 5, max_week_num: 8, pref_room_id: $room_vr.id,
        same_as_prev_year: true, series_setup_time: 10, setup_time: 30, takedown_time: 30, notes: "Investigating physiological signals to follow ECG.",
        capacity: 20, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a517.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a517.id).first_or_create!(criteria: "Understanding of physiology and spreadsheets. Knowledge of signal transduction desirable.",
        job_desc:"Investigating physiological responses using virtual reality - using the ADInstruments PowerLab hardware and LabChart software.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: 20, staff_ratio: nil)
    ActivityAssess.where(activity_id: a517.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a517.id).first_or_create!(cost_per_student: nil, equip_needed: "ADInstruments kits, laptops, Oculus Rift headsets, VAR computers",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a517.id, programme_id: $prog_bio.id).first_or_create!


    a518 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6116").first.id, code: "329").first_or_create!(name: "Pipetting and spectrophotometry",
        name_abrv: "PIP&SPEC", archived: false, in_drive: false, user_id: 2)
    at518 = ActivityTimetable.where(activity_id: a518.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 3, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 180, takedown_time: 60, notes: "1. Pipetting & S
    2. Buffers
    3. E.Coli Trans
    4. DNA Extract
    5. Bioreactors
    6. Bio scale up
    7. Glucose Assay
    8. FPLC
    9. HPLC
    10.Pract Exam",
        capacity: 30, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at518.id, room_id: $room_blt.id).first_or_create!

    ActivityTeaching.where(activity_id: a518.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a518.id).first_or_create!(criteria: "Competent user of micropipettes and motorised pipettors. Basic spectrophotometry. Understanding of Enzymes desirable.",
        job_desc:"Using micropipettes and motorized pipette aids. Investigating the effect of pH on enzyme activity of aryl sulphatase by measuring the absorbance of nitrocatechol.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a518.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a518.id).first_or_create!(cost_per_student: nil, equip_needed: "Spectrophotometers, balances, motorised and micropipettes",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a518.id, programme_id: $prog_cbe.id).first_or_create!


    a519 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2410").first.id, code: "330").first_or_create!(name: "Polymers and hydrogels",
        name_abrv: "POLY&HYDROGELS", archived: false, in_drive: false, user_id: 2)
    at519 = ActivityTimetable.where(activity_id: a519.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 10, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: 180, setup_time: 240, takedown_time: 240, notes: "",
        capacity: 25, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at519.id, room_id: $room_blb.id).first_or_create!

    ActivityTeaching.where(activity_id: a519.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a519.id).first_or_create!(criteria: "Understaning the propeties of polymers. Knowldge of their application in tissue engineering is desirable.",
        job_desc:"Investigating the properties of polymers, including hydrogels, and immobilizing yeast in alginate beads.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a519.id).first_or_create!(assess_weight: nil, notes: "Post is short essay",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a519.id).first_or_create!(cost_per_student: nil, equip_needed: "Balances, gas syringes, clamps and stands, water baths",
        last_risk_assess: nil, next_risk_assess: Date.new(20, 2, 27), tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a519.id, programme_id: $prog_mat.id).first_or_create!


    a520 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE6116").first.id, code: "331").first_or_create!(name: "Practical exam",
        name_abrv: "PRACEXAM", archived: false, in_drive: false, user_id: 3)
    at520 = ActivityTimetable.where(activity_id: a520.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 10, pref_room_id: $room_blb.id,
        same_as_prev_year: true, series_setup_time: 120, setup_time: 180, takedown_time: 60, notes: "1. Pipetting & S
    2. Buffers
    3. E.Coli Trans
    4. DNA Extract
    5. Bioreactors
    6. Bio scale up
    7. Glucose Assay
    8. FPLC
    9. HPLC
    10.Pract Exam",
        capacity: 15, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at520.id, room_id: $room_blt.id).first_or_create!

    ActivityTeaching.where(activity_id: a520.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a520.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a520.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a520.id).first_or_create!(cost_per_student: nil, equip_needed: "Plate reader, static incubator, pipettes",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a520.id, programme_id: $prog_cbe.id).first_or_create!


    a521 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1410").first.id, code: "332").first_or_create!(name: "Protein detection",
        name_abrv: "PROTEIN", archived: false, in_drive: false, user_id: 2)
    at521 = ActivityTimetable.where(activity_id: a521.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 6, max_week_num: 10, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: 75, setup_time: 150, takedown_time: 60, notes: "protein dection must be after pipetting.",
        capacity: 30, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at521.id, room_id: $room_blb.id).first_or_create!

    ActivityTeaching.where(activity_id: a521.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a521.id).first_or_create!(criteria: "Competent user of micropipettes. Understanding of basic spectrophotometry, serial dilution and replicates.",
        job_desc:"Using the BCA assay to quantify protein in 5 biological samples.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: 10, staff_ratio: nil)
    ActivityAssess.where(activity_id: a521.id).first_or_create!(assess_weight: nil, notes: "Data interpretation, graph and calculations.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a521.id).first_or_create!(cost_per_student: nil, equip_needed: "Micropipettes, plate reader/s, computer",
        last_risk_assess: nil, next_risk_assess: Date.new(19, 7, 19), tech_lead_id: 2, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a521.id, programme_id: $prog_bio.id).first_or_create!


    a522 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT408").first.id, code: "333").first_or_create!(name: "SEM and FTIR",
        name_abrv: "SEM/FTIR", archived: false, in_drive: false, user_id: 1)
    at522 = ActivityTimetable.where(activity_id: a522.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 6, pref_room_id: $room_ml.id,
        same_as_prev_year: true, series_setup_time: 15, setup_time: 30, takedown_time: 30, notes: "",
        capacity: 20, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a522.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a522.id).first_or_create!(criteria: "Knowledge of characterising biomaterials and experience using SEM and FTIR desirable, but training can be provided.",
        job_desc:"Analysing the surface of biomaterials using SEM and characterising the chemical composition of the materials using FTIR spectroscopy.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a522.id).first_or_create!(assess_weight: nil, notes: "Google SIte. Includes live cell imaging.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a522.id).first_or_create!(cost_per_student: nil, equip_needed: "SEM, FTIR, sample materials",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a522.id, programme_id: $prog_mat.id).first_or_create!


    a523 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT6311").first.id, code: "333").first_or_create!(name: "SEM and FTIR",
        name_abrv: "SEM/FTIR", archived: true, in_drive: false, user_id: 4)
    at523 = ActivityTimetable.where(activity_id: a523.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a523.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a523.id).first_or_create!(criteria: "Knowledge of characterising biomaterials and experience using SEM and FTIR desirable, but training can be provided.",
        job_desc:"Analysing the surface of biomaterials using SEM and characterising the chemical composition of the materials using FTIR spectroscopy.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a523.id).first_or_create!(assess_weight: nil, notes: "Google SIte. Includes live cell imaging.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a523.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a523.id, programme_id: $prog_mat.id).first_or_create!


    a524 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2410").first.id, code: "334").first_or_create!(name: "Superhydrophobic surfaces",
        name_abrv: "SUPERSURF", archived: false, in_drive: false, user_id: 2)
    at524 = ActivityTimetable.where(activity_id: a524.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 10, pref_room_id: $room_blt.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 120, takedown_time: 60, notes: "",
        capacity: 25, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at524.id, room_id: $room_blb.id).first_or_create!

    ActivityTeaching.where(activity_id: a524.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a524.id).first_or_create!(criteria: "Knowledge of the hydrophilic and hydrophobic nature of materials and how this property is applied in tissue engineering/medical implants & devices.",
        job_desc:"Making a superhydrophobic surface and investigating hydrophilicity and hydrophobicity of materials (water contact angle)", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: 15, staff_ratio: nil)
    ActivityAssess.where(activity_id: a524.id).first_or_create!(assess_weight: nil, notes: "Post is short essay",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a524.id).first_or_create!(cost_per_student: nil, equip_needed: "LEV, micropipetees, contact angle measurers, digital cameras",
        last_risk_assess: nil, next_risk_assess: Date.new(19, 10, 2), tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a524.id, programme_id: $prog_mat.id).first_or_create!


    a525 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "BIE103").first.id, code: "335").first_or_create!(name: "Tensile testing of nylon",
        name_abrv: "NYLONTEST", archived: false, in_drive: false, user_id: 4)
    at525 = ActivityTimetable.where(activity_id: a525.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 10, pref_room_id: $room_sd.id,
        same_as_prev_year: true, series_setup_time: 60, setup_time: 180, takedown_time: 120, notes: "This is one of 3 experiments for this module.",
        capacity: 30, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a525.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a525.id).first_or_create!(criteria: "Experience of tensile testing and use of Shimadzu testing frames is desirable.",
        job_desc:"Tensile testing of nylon and polypropylene using Shimadzu testing frames and FTIR spectroscopy.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a525.id).first_or_create!(assess_weight: nil, notes: "Assessed during lab session",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a525.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a525.id, programme_id: $prog_bio.id).first_or_create!


    a526 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "BIE201").first.id, code: "336").first_or_create!(name: "Building a Bioreactor",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at526 = ActivityTimetable.where(activity_id: a526.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 1, max_week_num: 11, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "Mobile units of parts so can work in any lab with 80 capactity and flat space",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a526.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a526.id).first_or_create!(criteria: "Electronics and coding, culture of algae, using bioreactors, carrying out biochemical assays.",
        job_desc:"In teams of 5, students will build a bioreactor for culturing the green micro-algae, Dunaliella salina, using a range of electronic components to control heating, stirring and pH. Dunaliella salina will be cultured in a range of salt solutions and the production of glycerol measured. This will take place over 6x 2 hour lab sessions.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a526.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a526.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a526.id, programme_id: $prog_bio.id).first_or_create!


    a529 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "BIE6413").first.id, code: "33").first_or_create!(name: "NAME NOT GIVEN",
        name_abrv: "", archived: true, in_drive: false, user_id: 2)
    at529 = ActivityTimetable.where(activity_id: a529.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_vr.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a529.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a529.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a529.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a529.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a529.id, programme_id: $prog_bio.id).first_or_create!


    a530 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "BIE6410").first.id, code: "340").first_or_create!(name: "NAME NOT GIVEN",
        name_abrv: "", archived: true, in_drive: false, user_id: 5)
    at530 = ActivityTimetable.where(activity_id: a530.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_vr.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a530.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a530.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a530.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a530.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a530.id, programme_id: $prog_bio.id).first_or_create!


    a531 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode10").first_or_create!(name: "Simple Harmonic Motion",
        name_abrv: "SHM", archived: false, in_drive: false, user_id: 5)
    at531 = ActivityTimetable.where(activity_id: a531.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 4, max_week_num: 5, pref_room_id: $room_fl.id,
        same_as_prev_year: true, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 60, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at531.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a531.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a531.id).first_or_create!(criteria: "Must have A level Physics",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a531.id).first_or_create!(assess_weight: 3.0, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a531.id).first_or_create!(cost_per_student: nil, equip_needed: "U-tube boards, water, funnels, 1m rule, stop watch, vernier calipers",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a531.id, programme_id: $prog_fy.id).first_or_create!


    a532 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode11").first_or_create!(name: "Velocity & Drag",
        name_abrv: "VEL_DRAG", archived: false, in_drive: false, user_id: 1)
    at532 = ActivityTimetable.where(activity_id: a532.id).first_or_create!(duration: 30, kit_prep_time: nil, min_week_num: 6, max_week_num: 7, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "Cannot be timetabled with another lab as the students need ear protectors",
        capacity: 16, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a532.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a532.id).first_or_create!(criteria: "Must have A level Physics",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a532.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a532.id).first_or_create!(cost_per_student: nil, equip_needed: "Armfield wind tunnels",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a532.id, programme_id: $prog_fy.id).first_or_create!


    a533 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode12").first_or_create!(name: "Waves",
        name_abrv: "WAVES", archived: false, in_drive: false, user_id: 5)
    at533 = ActivityTimetable.where(activity_id: a533.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 4, max_week_num: 5, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 120, notes: "",
        capacity: 60, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at533.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a533.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a533.id).first_or_create!(criteria: "Must have A level Physics",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: 4, staff_ratio: nil)
    ActivityAssess.where(activity_id: a533.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a533.id).first_or_create!(cost_per_student: nil, equip_needed: "water trays, water, jugs, dyes, stop watch, 1m rule, vernier calipers",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a533.id, programme_id: $prog_fy.id).first_or_create!


    a534 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode13").first_or_create!(name: "Motion & Energy",
        name_abrv: "MOTION", archived: false, in_drive: false, user_id: 3)
    at534 = ActivityTimetable.where(activity_id: a534.id).first_or_create!(duration: 105, kit_prep_time: nil, min_week_num: 6, max_week_num: 7, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 60, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at534.id, room_id: $room_fl.id).first_or_create!

    ActivityTeaching.where(activity_id: a534.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a534.id).first_or_create!(criteria: "Must have A level Physics",
        job_desc:"", jobshop_desc: "", marking_time: 2, staff_ratio: nil)
    ActivityAssess.where(activity_id: a534.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a534.id).first_or_create!(cost_per_student: nil, equip_needed: "Galileo track, 3 spheres, 1m rule, stop watches, pens",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a534.id, programme_id: $prog_fy.id).first_or_create!


    a535 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode14").first_or_create!(name: "Catapult Challenge",
        name_abrv: "CATAPULT", archived: false, in_drive: false, user_id: 2)
    at535 = ActivityTimetable.where(activity_id: a535.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 60, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at535.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a535.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a535.id).first_or_create!(criteria: "Safety of hand tools",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a535.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a535.id).first_or_create!(cost_per_student: nil, equip_needed: "PUPs, material",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a535.id, programme_id: $prog_fy.id).first_or_create!


    a536 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode15").first_or_create!(name: "Data Visualisation",
        name_abrv: "DATAVIS", archived: false, in_drive: false, user_id: 2)
    at536 = ActivityTimetable.where(activity_id: a536.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 1, max_week_num: 2, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 120, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a536.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a536.id).first_or_create!(criteria: "experience of Excel",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a536.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a536.id).first_or_create!(cost_per_student: nil, equip_needed: "n/a",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a536.id, programme_id: $prog_fy.id).first_or_create!


    a537 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode16").first_or_create!(name: "Matlab Visualisation",
        name_abrv: "MATVIS", archived: false, in_drive: false, user_id: 2)
    at537 = ActivityTimetable.where(activity_id: a537.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 2, max_week_num: 3, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 120, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a537.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a537.id).first_or_create!(criteria: "experience of Matlab Graphing",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a537.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a537.id).first_or_create!(cost_per_student: nil, equip_needed: "n/a",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a537.id, programme_id: $prog_fy.id).first_or_create!


    a538 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode17").first_or_create!(name: "Youngs Modulus",
        name_abrv: "FY-YM", archived: false, in_drive: false, user_id: 2)
    at538 = ActivityTimetable.where(activity_id: a538.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 4, max_week_num: 5, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a538.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a538.id).first_or_create!(criteria: "Must have A level Physics",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a538.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a538.id).first_or_create!(cost_per_student: nil, equip_needed: "Schimadzu + samples, micrometers, rules",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a538.id, programme_id: $prog_fy.id).first_or_create!


    a539 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode18").first_or_create!(name: "Balancing Forces",
        name_abrv: "FY-BALFORCE", archived: false, in_drive: false, user_id: 5)
    at539 = ActivityTimetable.where(activity_id: a539.id).first_or_create!(duration: 75, kit_prep_time: nil, min_week_num: 4, max_week_num: 5, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a539.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a539.id).first_or_create!(criteria: "Must have A level Physics",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: 2, staff_ratio: nil)
    ActivityAssess.where(activity_id: a539.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a539.id).first_or_create!(cost_per_student: nil, equip_needed: "Gunt frames, chains, spring gauges, 2kg mass, 1m rule",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a539.id, programme_id: $prog_fy.id).first_or_create!


    a540 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode19").first_or_create!(name: "EMF & Ohms",
        name_abrv: "EMF & OHM", archived: false, in_drive: false, user_id: 4)
    at540 = ActivityTimetable.where(activity_id: a540.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 9, max_week_num: 10, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 120, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a540.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a540.id).first_or_create!(criteria: "Must have A level Physics or equivalent
    Must be familiar with basic electronics workbench equipment (multimeter, power supply etc.)",
        job_desc:"Help students measure current and voltage for a simple DC circuit
    Help students to use power supplies and multimeters and record measurements
    Troubleshoot student circuit construction on breadboards", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: 4, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a540.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a540.id).first_or_create!(cost_per_student: nil, equip_needed: "AA battery, resistors, DVM",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a540.id, programme_id: $prog_fy.id).first_or_create!


    a541 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode20").first_or_create!(name: "Resistivity",
        name_abrv: "RESIST", archived: false, in_drive: false, user_id: 2)
    at541 = ActivityTimetable.where(activity_id: a541.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 9, max_week_num: 10, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 120, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a541.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a541.id).first_or_create!(criteria: "Must have A level Physics or equivalent
    Must be familiar with basic electronics workbench equipment (multimeter, power supply etc.)",
        job_desc:"Help students measure the resistivity of two different types of wire (constantan and nichrome)
    Troubleshoot student circuit construction and help record measurements", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a541.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a541.id).first_or_create!(cost_per_student: nil, equip_needed: "PSU, wound wire boards, DVM, rule, micrometers",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a541.id, programme_id: $prog_fy.id).first_or_create!


    a542 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode21").first_or_create!(name: "Capacitance",
        name_abrv: "CAPS", archived: false, in_drive: false, user_id: 5)
    at542 = ActivityTimetable.where(activity_id: a542.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 11, max_week_num: 11, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 120, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a542.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a542.id).first_or_create!(criteria: "Must have A level Physics or equivalent
    Must be familiar with basic electronics workbench equipment (multimeter, power supply etc.)",
        job_desc:"Help students measure the discharge characteristics of a capacitor
    Troubleshoot student circuit construction and advise on data colleciton and recording", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: 4, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a542.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a542.id).first_or_create!(cost_per_student: nil, equip_needed: "PSU, capacitor, breadboard, jump wires, DVM, stop watch",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a542.id, programme_id: $prog_fy.id).first_or_create!


    a543 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode22").first_or_create!(name: "Transformers",
        name_abrv: "TRANS_FY", archived: false, in_drive: false, user_id: 2)
    at543 = ActivityTimetable.where(activity_id: a543.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 12, max_week_num: 12, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a543.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a543.id).first_or_create!(criteria: "Must have A level Physics or equivalent
    Must be familiar with basic electronics workbench equipment (multimeter, power supply etc.)",
        job_desc:"Help students verify the turns ratio of a transformer through experimental measurement
    Assist students setting up simple transformer circuits and making voltage measurements", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: 4, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a543.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a543.id).first_or_create!(cost_per_student: nil, equip_needed: "DVM, MSO, Sig Gen, Transformer boards, cables",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a543.id, programme_id: $prog_fy.id).first_or_create!


    a544 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode23").first_or_create!(name: "Hookes Law",
        name_abrv: "FY-HOOKE", archived: false, in_drive: false, user_id: 1)
    at544 = ActivityTimetable.where(activity_id: a544.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 1, max_week_num: 1, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at544.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a544.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a544.id).first_or_create!(criteria: "Must have A level Physics",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: 2, staff_ratio: nil)
    ActivityAssess.where(activity_id: a544.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a544.id).first_or_create!(cost_per_student: nil, equip_needed: "Retort stands, springs, 1N mass, vernier calipers, weighing scales",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a544.id, programme_id: $prog_fy.id).first_or_create!


    a545 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode24").first_or_create!(name: "Specific Heat Capacity",
        name_abrv: "FY-SHC", archived: false, in_drive: false, user_id: 2)
    at545 = ActivityTimetable.where(activity_id: a545.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 2, max_week_num: 3, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at545.id, room_id: $room_ml.id).first_or_create!

    ActivityTeaching.where(activity_id: a545.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a545.id).first_or_create!(criteria: "Must have A level Physics",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: 2, staff_ratio: nil)
    ActivityAssess.where(activity_id: a545.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a545.id).first_or_create!(cost_per_student: nil, equip_needed: "metal blocks, beakers, water baths, vernier calipers, thermometers, stop watch, water jugs",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a545.id, programme_id: $prog_fy.id).first_or_create!


    a546 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode25").first_or_create!(name: "Charles Law",
        name_abrv: "FY-CHARLES", archived: false, in_drive: false, user_id: 3)
    at546 = ActivityTimetable.where(activity_id: a546.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 2, max_week_num: 3, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 40, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at546.id, room_id: $room_ml.id).first_or_create!

    ActivityTeaching.where(activity_id: a546.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a546.id).first_or_create!(criteria: "Must have A level Physics",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a546.id).first_or_create!(assess_weight: 3.0, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a546.id).first_or_create!(cost_per_student: nil, equip_needed: "Gas theremometers, boiling tubes, retort, theremocouple, water baths",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a546.id, programme_id: $prog_fy.id).first_or_create!


    a547 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode26").first_or_create!(name: "Functional Programming",
        name_abrv: "FPROG", archived: false, in_drive: false, user_id: 4)
    at547 = ActivityTimetable.where(activity_id: a547.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 4, max_week_num: 4, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a547.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a547.id).first_or_create!(criteria: "Must know Haskell",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a547.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a547.id).first_or_create!(cost_per_student: nil, equip_needed: "IT",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a547.id, programme_id: $prog_fy.id).first_or_create!


    a548 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode27").first_or_create!(name: "Boolean",
        name_abrv: "BOOL", archived: false, in_drive: false, user_id: 4)
    at548 = ActivityTimetable.where(activity_id: a548.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 5, max_week_num: 5, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a548.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a548.id).first_or_create!(criteria: "Must know Haskell",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a548.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a548.id).first_or_create!(cost_per_student: nil, equip_needed: "IT",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a548.id, programme_id: $prog_fy.id).first_or_create!


    a549 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode28").first_or_create!(name: "Complexity",
        name_abrv: "COMPLEX", archived: false, in_drive: false, user_id: 1)
    at549 = ActivityTimetable.where(activity_id: a549.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a549.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a549.id).first_or_create!(criteria: "Must know Haskell",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a549.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a549.id).first_or_create!(cost_per_student: nil, equip_needed: "IT",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a549.id, programme_id: $prog_fy.id).first_or_create!


    a550 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode29").first_or_create!(name: "Refraction",
        name_abrv: "REFRACT", archived: false, in_drive: false, user_id: 2)
    at550 = ActivityTimetable.where(activity_id: a550.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 7, max_week_num: 9, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 120, takedown_time: 120, notes: "",
        capacity: 70, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at550.id, room_id: $room_sd.id).first_or_create!

    ActivityTeaching.where(activity_id: a550.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a550.id).first_or_create!(criteria: "Must have A level Physics or equivalent
    Must be familiar with basic electronics workbench equipment (multimeter, power supply etc.)",
        job_desc:"Help students measure the refractive index of a material using diffraction
    Assist students with calculations considering wavelengths of diffracted light", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: 2, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a550.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a550.id).first_or_create!(cost_per_student: nil, equip_needed: "Refraction kit (stores)",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a550.id, programme_id: $prog_fy.id).first_or_create!


    a551 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode30").first_or_create!(name: "Photo Voltaic Cells",
        name_abrv: "PVCELLS", archived: false, in_drive: false, user_id: 2)
    at551 = ActivityTimetable.where(activity_id: a551.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 7, max_week_num: 9, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 60, checked_on_timetable: true)

    ActivityTeaching.where(activity_id: a551.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a551.id).first_or_create!(criteria: "Must have A level Physics or equivalent
    Must be familiar with basic electronics workbench equipment (multimeter, power supply etc.)",
        job_desc:"Help students to measure the current and voltage produced by a photo-voltaic cell
    Troubleshoot students' circuit construction
    Remind students how to perform calculations of electrical power and how to determine the maximum power operating point of the cell", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: 4, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a551.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a551.id).first_or_create!(cost_per_student: nil, equip_needed: "PV cells, DVM, lamp, PSU",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a551.id, programme_id: $prog_fy.id).first_or_create!


    a552 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode31").first_or_create!(name: "Matlab",
        name_abrv: "MATLAB", archived: false, in_drive: false, user_id: 1)
    at552 = ActivityTimetable.where(activity_id: a552.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 10, max_week_num: 11, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 100, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a552.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a552.id).first_or_create!(criteria: "Experience of Matlab Programming",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a552.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a552.id).first_or_create!(cost_per_student: nil, equip_needed: "IT",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a552.id, programme_id: $prog_fy.id).first_or_create!


    a553 = Activity.where(theme_id: $fndy.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode32").first_or_create!(name: "Galileo",
        name_abrv: "GALILEO", archived: true, in_drive: false, user_id: 4)
    at553 = ActivityTimetable.where(activity_id: a553.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 6, max_week_num: 7, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: true)
    RoomBooking.where(activity_timetable_id: at553.id, room_id: $room_tl.id).first_or_create!

    ActivityTeaching.where(activity_id: a553.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a553.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in Multidisciplinary Labs for Science & Engineering Foundation Year students", marking_time: 2, staff_ratio: nil)
    ActivityAssess.where(activity_id: a553.id).first_or_create!(assess_weight: 1.5, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: nil)
    ActivityTech.where(activity_id: a553.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a553.id, programme_id: $prog_fy.id).first_or_create!


    a554 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode33").first_or_create!(name: "LED Lab (blue)",
        name_abrv: "BLUELED", archived: false, in_drive: false, user_id: 1)
    at554 = ActivityTimetable.where(activity_id: a554.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 2, max_week_num: 2, pref_room_id: $room_cr.id,
        same_as_prev_year: true, series_setup_time: 15, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 16, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a554.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a554.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a554.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a554.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a554.id, programme_id: $prog_fy.id).first_or_create!


    a555 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "ELL.TEST").first_or_create!(name: "Torrell Test",
        name_abrv: "test", archived: false, in_drive: false, user_id: 5)
    at555 = ActivityTimetable.where(activity_id: a555.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a555.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a555.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a555.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a555.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)


    a556 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "ELL.TEST.").first_or_create!(name: "Torrell Test2",
        name_abrv: "FCE001", archived: false, in_drive: false, user_id: 1)
    at556 = ActivityTimetable.where(activity_id: a556.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a556.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a556.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a556.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a556.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)


    a557 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode34").first_or_create!(name: "Extracurricular Activity",
        name_abrv: "NTA", archived: false, in_drive: false, user_id: 2)
    at557 = ActivityTimetable.where(activity_id: a557.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a557.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a557.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a557.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a557.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)


    a558 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode35").first_or_create!(name: "Project Space Induction",
        name_abrv: "PSIDUCT", archived: true, in_drive: false, user_id: 4)
    at558 = ActivityTimetable.where(activity_id: a558.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a558.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a558.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a558.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a558.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)


    a559 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC1000").first.id, code: "unknowncode36").first_or_create!(name: "Engineering Applications",
        name_abrv: "EA SCREW", archived: true, in_drive: false, user_id: 4)
    at559 = ActivityTimetable.where(activity_id: a559.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a559.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a559.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a559.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a559.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a559.id, programme_id: $prog_mec.id).first_or_create!


    a560 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC1000").first.id, code: "unknowncode37").first_or_create!(name: "Engineering Applications",
        name_abrv: "EA STIRING", archived: true, in_drive: false, user_id: 1)
    at560 = ActivityTimetable.where(activity_id: a560.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a560.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a560.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a560.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a560.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a560.id, programme_id: $prog_mec.id).first_or_create!


    a561 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1730").first.id, code: "unknowncode38").first_or_create!(name: "Hole-in-plate",
        name_abrv: "HOLEPLATE", archived: true, in_drive: false, user_id: 1)
    at561 = ActivityTimetable.where(activity_id: a561.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_sd.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a561.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a561.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a561.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a561.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a561.id, programme_id: $prog_aero.id).first_or_create!


    a562 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC330").first.id, code: "unknowncode39").first_or_create!(name: "Diffusers",
        name_abrv: "DIFFUSERS", archived: true, in_drive: false, user_id: 3)
    at562 = ActivityTimetable.where(activity_id: a562.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a562.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a562.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a562.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_form.id, post_lab_type_id: $post_none.id, num_assess: 3)
    ActivityTech.where(activity_id: a562.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a562.id, programme_id: $prog_mec.id).first_or_create!


    a563 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC208").first.id, code: "unknowncode40").first_or_create!(name: "CFD Validation",
        name_abrv: "CFDVALID", archived: true, in_drive: false, user_id: 4)
    at563 = ActivityTimetable.where(activity_id: a563.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a563.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a563.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a563.id).first_or_create!(assess_weight: nil, notes: "NOT RUNNING",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a563.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a563.id, programme_id: $prog_mec.id).first_or_create!


    a564 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE104").first.id, code: "unknowncode41").first_or_create!(name: "Friction",
        name_abrv: "FRICTION", archived: true, in_drive: false, user_id: 4)
    at564 = ActivityTimetable.where(activity_id: a564.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_tl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 70, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a564.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a564.id).first_or_create!(criteria: "Enthusiasm for thermodynamics. Basic dynamics. Ability to read instructions. Ability to explain. Approachability.",
        job_desc:"Measuring the friction coefficient of band brakes using LabVIEW and motor apparatus - supervise and assist students.", jobshop_desc: "GTA in MEE, the Diamond: Thermodynamics Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a564.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a564.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a564.id, programme_id: $prog_gee.id).first_or_create!


    a565 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS334").first.id, code: "unknowncode42").first_or_create!(name: "Modelling and Control of a Hot Air Process Control System",
        name_abrv: "CBE-HVAC", archived: true, in_drive: false, user_id: 4)
    at565 = ActivityTimetable.where(activity_id: a565.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 40, takedown_time: 40, notes: "",
        capacity: 84, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a565.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a565.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a565.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a565.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a565.id, programme_id: $prog_cbe.id).first_or_create!


    a566 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS130").first.id, code: "unknowncode43").first_or_create!(name: "Design and Build Project",
        name_abrv: "ShaddowBots", archived: true, in_drive: false, user_id: 4)
    at566 = ActivityTimetable.where(activity_id: a566.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 15, takedown_time: 15, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a566.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a566.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a566.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a566.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a566.id, programme_id: $prog_aero.id).first_or_create!


    a567 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE123").first.id, code: "unknowncode44").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "WS", archived: true, in_drive: false, user_id: 1)
    at567 = ActivityTimetable.where(activity_id: a567.id).first_or_create!(duration: 180, kit_prep_time: 60, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 15, setup_time: 15, takedown_time: 25, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a567.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a567.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Help students construct a resistor potential divider on a breadboard, then take measurements on it using multimeters and oscilloscopes. 
    Ensure the students appreciate measurement device impedance and the importance of clear data recording.
    Help train the students to independently use an oscilloscope, signal generator and multimeter.
    Supervise students to safely solder a small PCB - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a567.id).first_or_create!(assess_weight: 4.0, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a567.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)


    a568 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS6101").first.id, code: "unknowncode45").first_or_create!(name: "Time and Frequency Domain Servo Analysis Laboratory",
        name_abrv: "Servo T+F", archived: true, in_drive: false, user_id: 4)
    at568 = ActivityTimetable.where(activity_id: a568.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: nil, notes: "",
        capacity: 144, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a568.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a568.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"The students are required to analyse a servo system in both the time and frequency domain. From the system model they have developed, a PI controller will be designed and its performance evaluated.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a568.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a568.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)


    a569 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS132").first.id, code: "unknowncode46").first_or_create!(name: "Time Domain Analysis of a Hot Air Process Control System",
        name_abrv: "HVAC 1", archived: true, in_drive: false, user_id: 3)
    at569 = ActivityTimetable.where(activity_id: a569.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 40, takedown_time: 40, notes: "",
        capacity: 90, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a569.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a569.id).first_or_create!(criteria: "Must have understanding of MATLAB programming, physical systems modelling and analysis of 1st and 2nd order systems",
        job_desc:"This laboratory is basic parameter identification of a 1st order system from step response characteristics: Gain, Time Constant and System Delay.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a569.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a569.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a569.id, programme_id: $prog_bio.id).first_or_create!


    a570 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS230").first.id, code: "unknowncode47").first_or_create!(name: "Discrete Control Design",
        name_abrv: "Servo-D", archived: true, in_drive: false, user_id: 5)
    at570 = ActivityTimetable.where(activity_id: a570.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a570.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a570.id).first_or_create!(criteria: "Understanding of physical systems modelling,  the analysis of 1st and 2nd order systems, and  z-domain control design",
        job_desc:"This laboratory involves designing control system compensators in the z-domain, and implementing them on the hardware system in the laboratory.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a570.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a570.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a570.id, programme_id: $prog_aero.id).first_or_create!


    a571 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "unknowncode48").first_or_create!(name: "Introduction to Arduino â Simple Digital I/O",
        name_abrv: "Ard I/O", archived: true, in_drive: false, user_id: 4)
    at571 = ActivityTimetable.where(activity_id: a571.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a571.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a571.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a571.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a571.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a571.id, programme_id: $prog_bio.id).first_or_create!


    a572 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "unknowncode49").first_or_create!(name: "Using an Arduino to Read Analogue Sensors",
        name_abrv: "Ard Anal", archived: true, in_drive: false, user_id: 1)
    at572 = ActivityTimetable.where(activity_id: a572.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 30, takedown_time: 30, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a572.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a572.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a572.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a572.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a572.id, programme_id: $prog_bio.id).first_or_create!


    a573 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "unknowncode50").first_or_create!(name: "PWM control of Actuators, using an Arduino",
        name_abrv: "Ard PWM", archived: true, in_drive: false, user_id: 1)
    at573 = ActivityTimetable.where(activity_id: a573.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 20, takedown_time: 20, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a573.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a573.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a573.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a573.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a573.id, programme_id: $prog_bio.id).first_or_create!


    a574 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "unknowncode51").first_or_create!(name: "NAME NOT GIVEN",
        name_abrv: "Mechatronics 1", archived: true, in_drive: true, user_id: 3)
    at574 = ActivityTimetable.where(activity_id: a574.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a574.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a574.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a574.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a574.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)


    a575 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS231").first.id, code: "unknowncode52").first_or_create!(name: "NAME NOT GIVEN",
        name_abrv: "Mechatronics 2", archived: true, in_drive: false, user_id: 4)
    at575 = ActivityTimetable.where(activity_id: a575.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a575.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a575.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a575.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a575.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)


    a576 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "MAT1820").first.id, code: "unknowncode53").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "WS+", archived: true, in_drive: false, user_id: 2)
    at576 = ActivityTimetable.where(activity_id: a576.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a576.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a576.id).first_or_create!(criteria: "Must be able to independently use an oscilloscope, digital multimeter and signal generator
    Must be able to solder and to demonstrate good soldering technique to students
    Must be able to build simple circuits on a breadboard and perform current and voltage measurements",
        job_desc:"Help students construct a resistor potential divider on a breadboard, then take measurements on it using multimeters and oscilloscopes. 
    Ensure the students appreciate measurement device impedance and the importance of clear data recording.
    Help train the students to independently use an oscilloscope, signal generator and multimeter.
    Supervise students to safely solder a small PCB - be prepared to provide demonstrations and advice on soldering.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a576.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a576.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a576.id, programme_id: $prog_mat.id).first_or_create!


    a577 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE123").first.id, code: "unknowncode54").first_or_create!(name: "Transformers",
        name_abrv: "TFM", archived: true, in_drive: false, user_id: 5)
    at577 = ActivityTimetable.where(activity_id: a577.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a577.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a577.id).first_or_create!(criteria: "Must be familiar with transformers and inductors
    Must be familiar with high voltage AC circuits
    Must be confident checking the safety of high voltage and high current experiments
    Ideally confident in theoretical transformer models and how to measure the deviation of experiment from ideality",
        job_desc:"Help students measure the efficiency and other characteristics of transformers
    Identify differences between ideal transformers and experimental characterisations of real transformers
    Ensure that students make high voltage and high current measurements safely, including checking risk assessments before commencing work.", jobshop_desc: "", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a577.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a577.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)


    a578 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AER223").first.id, code: "unknowncode55").first_or_create!(name: "Transformers",
        name_abrv: "TFM", archived: true, in_drive: false, user_id: 1)
    at578 = ActivityTimetable.where(activity_id: a578.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a578.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a578.id).first_or_create!(criteria: "Must be familiar with transformers and inductors
    Must be familiar with high voltage AC circuits
    Must be confident checking the safety of high voltage and high current experiments
    Ideally confident in theoretical transformer models and how to measure the deviation of experiment from ideality",
        job_desc:"Help students measure the efficiency and other characteristics of transformers
    Identify differences between ideal transformers and experimental characterisations of real transformers
    Ensure that students make high voltage and high current measurements safely, including checking risk assessments before commencing work.", jobshop_desc: "", marking_time: nil, staff_ratio: 12.0)
    ActivityAssess.where(activity_id: a578.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a578.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a578.id, programme_id: $prog_aero.id).first_or_create!


    a579 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE123").first.id, code: "unknowncode56").first_or_create!(name: "Spectral Analysis",
        name_abrv: "SA", archived: true, in_drive: false, user_id: 5)
    at579 = ActivityTimetable.where(activity_id: a579.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a579.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a579.id).first_or_create!(criteria: "No GTAs required",
        job_desc:"No GTAs required", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a579.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a579.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)


    a580 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE227").first.id, code: "unknowncode57").first_or_create!(name: "Spectral Analysis Extra",
        name_abrv: "SAX", archived: true, in_drive: false, user_id: 4)
    at580 = ActivityTimetable.where(activity_id: a580.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a580.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a580.id).first_or_create!(criteria: "No GTAs required",
        job_desc:"No GTAs required", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a580.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a580.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a580.id, programme_id: $prog_aero.id).first_or_create!


    a581 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "GEE202").first.id, code: "unknowncode58").first_or_create!(name: "INDUMACH",
        name_abrv: "INDUMACH", archived: true, in_drive: false, user_id: 3)
    at581 = ActivityTimetable.where(activity_id: a581.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: 1, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: 5, setup_time: 5, takedown_time: 5, notes: "",
        capacity: 14, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a581.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a581.id).first_or_create!(criteria: "You must be in a EEE motors & drives PhD field and be working in the machines and drives project group. You need to have an understanding of the basic load profile and control of AC motors, servo and stepper motors.",
        job_desc:"A series of five labs looking at aspects of motors and power electronics to support the teaching of the second year specialist course. You will need to supervise working on three phase machines and/or use of a MOSFET amplifier for high current rectification systems.", jobshop_desc: "GTA in MEE, the Diamond: EEE labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a581.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a581.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a581.id, programme_id: $prog_gee.id).first_or_create!


    a582 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE227").first.id, code: "unknowncode59").first_or_create!(name: "Spectral Analysis",
        name_abrv: "SA", archived: true, in_drive: false, user_id: 2)
    at582 = ActivityTimetable.where(activity_id: a582.id).first_or_create!(duration: 210, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a582.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a582.id).first_or_create!(criteria: "No GTAs required",
        job_desc:"No GTAs required", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a582.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a582.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a582.id, programme_id: $prog_eee.id).first_or_create!


    a583 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2600").first.id, code: "unknowncode60").first_or_create!(name: "Microstructure",
        name_abrv: "MICROSTRUCTURE", archived: true, in_drive: false, user_id: 3)
    at583 = ActivityTimetable.where(activity_id: a583.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a583.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a583.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a583.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a583.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a583.id, programme_id: $prog_mat.id).first_or_create!


    a584 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT408").first.id, code: "unknowncode61").first_or_create!(name: "SEM and FTIR",
        name_abrv: "SEM/FTIR", archived: true, in_drive: false, user_id: 4)
    at584 = ActivityTimetable.where(activity_id: a584.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a584.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a584.id).first_or_create!(criteria: "Knowledge of characterising biomaterials and experience using SEM and FTIR desirable, but training can be provided.",
        job_desc:"Analysing the surface of biomaterials using SEM and characterising the chemical composition of the materials using FTIR spectroscopy.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a584.id).first_or_create!(assess_weight: nil, notes: "Google SIte. Includes live cell imaging.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a584.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a584.id, programme_id: $prog_mat.id).first_or_create!


    a585 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1600").first.id, code: "unknowncode62").first_or_create!(name: "Materials Identification",
        name_abrv: "MATIDENT", archived: true, in_drive: false, user_id: 4)
    at585 = ActivityTimetable.where(activity_id: a585.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a585.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a585.id).first_or_create!(criteria: "General Maths and Physics Skills",
        job_desc:"To identify unknown materials using various materials analysis techniques.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a585.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a585.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a585.id, programme_id: $prog_ae.id).first_or_create!


    a586 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1600").first.id, code: "unknowncode63").first_or_create!(name: "Wood composite",
        name_abrv: "WOODCOMP", archived: true, in_drive: false, user_id: 3)
    at586 = ActivityTimetable.where(activity_id: a586.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a586.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a586.id).first_or_create!(criteria: "Hands-on experience in manufacturing composite panels using pre-preg and the mechanical testing of composite panels.",
        job_desc:"Practical construction of composite panels cut at various angles relative to the fibre direction and mechanical testing in order to understand the directionality of composite materials.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a586.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (short report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a586.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a586.id, programme_id: $prog_ae.id).first_or_create!


    a587 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2600").first.id, code: "unknowncode64").first_or_create!(name: "Impact testing",
        name_abrv: "IMPACTTESTING", archived: true, in_drive: false, user_id: 4)
    at587 = ActivityTimetable.where(activity_id: a587.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a587.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a587.id).first_or_create!(criteria: "",
        job_desc:"The students will compare the impact toughness for steels of two different composition and two different processing conditions, using impact testers.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a587.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a587.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a587.id, programme_id: $prog_ae.id).first_or_create!


    a588 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2600").first.id, code: "unknowncode65").first_or_create!(name: "Microstructure",
        name_abrv: "MICROSTRUCTURE", archived: true, in_drive: false, user_id: 5)
    at588 = ActivityTimetable.where(activity_id: a588.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a588.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a588.id).first_or_create!(criteria: "",
        job_desc:"The students will gain experience in using tensile test frames and extract mechanical properties from them such as Youngâs modulus, yield stress, and ultimate strength for steels of different composition.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a588.id).first_or_create!(assess_weight: nil, notes: "MOLE quizes. From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: 3)
    ActivityTech.where(activity_id: a588.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a588.id, programme_id: $prog_ae.id).first_or_create!


    a589 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2600").first.id, code: "unknowncode66").first_or_create!(name: "Concrete Making & Testing",
        name_abrv: "WOODCOMP", archived: true, in_drive: false, user_id: 3)
    at589 = ActivityTimetable.where(activity_id: a589.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a589.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a589.id).first_or_create!(criteria: "",
        job_desc:"To understand the basic processes involved in cement hydration.To develop an understanding of mix design parameters on mortar rheology and strength.To gain experience in how to deal with statistical variation associated with destructive testing of brittle materials. Techniques used compression testing.", jobshop_desc: "GTA in MEE, the Diamond: Materials Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a589.id).first_or_create!(assess_weight: nil, notes: "From 2019/20: total assesment 2: pre lab with H&S questions to pass and post lab (short report) 100%",
        pre_assess_type_id: $ass_sum.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_short.id, num_assess: 3)
    ActivityTech.where(activity_id: a589.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a589.id, programme_id: $prog_ae.id).first_or_create!


    a590 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1510").first.id, code: "unknowncode67").first_or_create!(name: "Histology/Microscopy",
        name_abrv: "HIST/MICRO", archived: true, in_drive: false, user_id: 4)
    at590 = ActivityTimetable.where(activity_id: a590.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 50, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a590.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a590.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a590.id).first_or_create!(assess_weight: nil, notes: "Claire is MEE lead. We don't do post-lab assessment for this lab practical.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a590.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a590.id, programme_id: $prog_bio.id).first_or_create!


    a591 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1520").first.id, code: "unknowncode68").first_or_create!(name: "Microscopy",
        name_abrv: "MICROSCOPY", archived: true, in_drive: false, user_id: 3)
    at591 = ActivityTimetable.where(activity_id: a591.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_ml.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 40, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a591.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a591.id).first_or_create!(criteria: "",
        job_desc:"Using digital camera and Motic software to take images of stained tissue sections", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a591.id).first_or_create!(assess_weight: nil, notes: "Includes histology staining",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a591.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a591.id, programme_id: $prog_bio.id).first_or_create!


    a592 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1520").first.id, code: "unknowncode69").first_or_create!(name: "Histology staining",
        name_abrv: "HISTSTAINING", archived: true, in_drive: false, user_id: 5)
    at592 = ActivityTimetable.where(activity_id: a592.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 25, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a592.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a592.id).first_or_create!(criteria: "",
        job_desc:"Staining animal tissue sections using H&E - paraffin embedded and frozen sections", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a592.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a592.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a592.id, programme_id: $prog_bio.id).first_or_create!


    a593 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2530").first.id, code: "unknowncode70").first_or_create!(name: "Cell culture 2: MTT Assay",
        name_abrv: "MTTASSAY", archived: true, in_drive: false, user_id: 4)
    at593 = ActivityTimetable.where(activity_id: a593.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a593.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a593.id).first_or_create!(criteria: "Cell culture and aseptic technique. Biological assays.",
        job_desc:"Using the MTT assay to measure metabolic activity of the cells seeded onto biomaterial disks", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a593.id).first_or_create!(assess_weight: nil, notes: "Includes aseptic techniques",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: nil)
    ActivityTech.where(activity_id: a593.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a593.id, programme_id: $prog_bio.id).first_or_create!


    a594 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2530").first.id, code: "unknowncode71").first_or_create!(name: "Cell culture 1: Aseptic techniques",
        name_abrv: "ASEPTICTECH", archived: true, in_drive: false, user_id: 1)
    at594 = ActivityTimetable.where(activity_id: a594.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a594.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a594.id).first_or_create!(criteria: "Cell culture and aseptic technique.",
        job_desc:"Seeding HaCaT cells onto 3 biomaterial disks to investigate biocompatibility", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a594.id).first_or_create!(assess_weight: nil, notes: "Post is MOLE test.",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a594.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a594.id, programme_id: $prog_bio.id).first_or_create!


    a595 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2410").first.id, code: "unknowncode72").first_or_create!(name: "Superhydrophobic surfaces",
        name_abrv: "SUPERSURF", archived: true, in_drive: false, user_id: 4)
    at595 = ActivityTimetable.where(activity_id: a595.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a595.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a595.id).first_or_create!(criteria: "",
        job_desc:"Making a superhydrophobic surface and investigating hydrophilicity and hydrophobicity of materials (water contact angle)", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a595.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a595.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a595.id, programme_id: $prog_bio.id).first_or_create!


    a596 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT2410").first.id, code: "unknowncode73").first_or_create!(name: "Polymers and hydrogels",
        name_abrv: "POLY&HYDROGELS", archived: true, in_drive: false, user_id: 4)
    at596 = ActivityTimetable.where(activity_id: a596.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a596.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a596.id).first_or_create!(criteria: "",
        job_desc:"Investigating the properties of polymers, including hydrogels, and immobilizing yeast in alginate beads.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a596.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a596.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a596.id, programme_id: $prog_bio.id).first_or_create!


    a597 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT209").first.id, code: "unknowncode74").first_or_create!(name: "Gel electrophoresis",
        name_abrv: "GELELEC", archived: true, in_drive: false, user_id: 2)
    at597 = ActivityTimetable.where(activity_id: a597.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a597.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a597.id).first_or_create!(criteria: "",
        job_desc:"Separating proteins by SDS-PAGE", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a597.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a597.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a597.id, programme_id: $prog_bio.id).first_or_create!


    a598 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT209").first.id, code: "unknowncode75").first_or_create!(name: "Western blotting",
        name_abrv: "WESTBLOT", archived: true, in_drive: false, user_id: 4)
    at598 = ActivityTimetable.where(activity_id: a598.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a598.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a598.id).first_or_create!(criteria: "",
        job_desc:"Western Blotting", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a598.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a598.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a598.id, programme_id: $prog_bio.id).first_or_create!


    a599 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT408").first.id, code: "unknowncode76").first_or_create!(name: "Live cell imaging 1",
        name_abrv: "CELL1", archived: true, in_drive: false, user_id: 2)
    at599 = ActivityTimetable.where(activity_id: a599.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a599.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a599.id).first_or_create!(criteria: "Cell culture and aseptic technique, microscopy.",
        job_desc:"Scratch assay using HaCaT cells and setting up live cell imaging system to capture cell migration; labelling cells with a fluorophore and capturing images. Analysing cell migration data using ImageJ.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a599.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a599.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a599.id, programme_id: $prog_bio.id).first_or_create!


    a600 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT408").first.id, code: "unknowncode77").first_or_create!(name: "Live cell imaging 2",
        name_abrv: "CELL2", archived: true, in_drive: false, user_id: 4)
    at600 = ActivityTimetable.where(activity_id: a600.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a600.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a600.id).first_or_create!(criteria: "Cell culture and aseptic technique, microscopy.",
        job_desc:"Scratch assay using HaCaT cells and setting up live cell imaging system to capture cell migration; labelling cells with a fluorophore and capturing images. Analysing cell migration data using ImageJ.", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a600.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a600.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a600.id, programme_id: $prog_bio.id).first_or_create!


    a601 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE280").first.id, code: "unknowncode78").first_or_create!(name: "Mammalian cell culture",
        name_abrv: "MAMMALIAN", archived: true, in_drive: false, user_id: 2)
    at601 = ActivityTimetable.where(activity_id: a601.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 20, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a601.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a601.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a601.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a601.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a601.id, programme_id: $prog_bio.id).first_or_create!


    a602 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE190").first.id, code: "unknowncode79").first_or_create!(name: "Enzyme activity",
        name_abrv: "ENZYME", archived: true, in_drive: false, user_id: 4)
    at602 = ActivityTimetable.where(activity_id: a602.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blt.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 30, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a602.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a602.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "GTA in MEE, the Diamond: Bioengineering Labs", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a602.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a602.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a602.id, programme_id: $prog_bio.id).first_or_create!


    a603 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "MAT1410").first.id, code: "unknowncode80").first_or_create!(name: "Protein detection",
        name_abrv: "PROTEIN", archived: true, in_drive: false, user_id: 1)
    at603 = ActivityTimetable.where(activity_id: a603.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: $room_blb.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 30, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a603.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a603.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a603.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_form.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a603.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a603.id, programme_id: $prog_mat.id).first_or_create!


    a604 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC604").first.id, code: "415").first_or_create!(name: "Measurement lab plus",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at604 = ActivityTimetable.where(activity_id: a604.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 3, max_week_num: 4, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a604.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a604.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a604.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a604.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)


    a605 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC604").first.id, code: "521").first_or_create!(name: "Rolling Spheres",
        name_abrv: "", archived: false, in_drive: false, user_id: 5)
    at605 = ActivityTimetable.where(activity_id: a605.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 5, max_week_num: 6, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a605.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a605.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a605.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a605.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)


    a606 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AMR199").first.id, code: "432").first_or_create!(name: "Stokes Law and Viscosity",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at606 = ActivityTimetable.where(activity_id: a606.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a606.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a606.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a606.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a606.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a606.id, programme_id: $prog_amrc.id).first_or_create!


    a607 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CPE340").first.id, code: "129").first_or_create!(name: "Continuous Manufacturing of pharmaceutical tablets",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at607 = ActivityTimetable.where(activity_id: a607.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 3, max_week_num: 8, pref_room_id: $room_pp.id,
        same_as_prev_year: false, series_setup_time: 30, setup_time: 60, takedown_time: 60, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a607.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a607.id).first_or_create!(criteria: "Interest/experience in powder science and technology. Preferably have a good understanding in different unit operations used for granulation and tableting. The equipment is an industrial scale has various unit operations linked together in one line.",
        job_desc:"In this lab, GTAs are required to supervise groups of students to work on the continuous tabletting line- Consigma in the Pilot plant and carry out an experimental investigation. Students will need to run the line and produce some granules and tablet as well as collect different types of data. As a GTA, training will be provided for the experiments, and you will be assisting students to carry out the experiment safely and help them to change some process parameters.", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a607.id).first_or_create!(assess_weight: 10.0, notes: "in post lab, students will be asked to answer few question and submit this as an assignment through Blackboard",
        pre_assess_type_id: $ass_form.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_full.id, num_assess: 1)
    ActivityTech.where(activity_id: a607.id).first_or_create!(cost_per_student: nil, equip_needed: "Consigma line, ModulP, MT50 Hardness Tester",
        last_risk_assess: Date.new(19, 1, 20), next_risk_assess: Date.new(20, 1, 20), tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a607.id, programme_id: $prog_cbe.id).first_or_create!


    a608 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "AMR332").first.id, code: "241").first_or_create!(name: "inspection of welds",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at608 = ActivityTimetable.where(activity_id: a608.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a608.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a608.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a608.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a608.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a608.id, programme_id: $prog_amrc.id).first_or_create!


    a609 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC455").first.id, code: "542").first_or_create!(name: "TBC",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at609 = ActivityTimetable.where(activity_id: a609.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 7, max_week_num: 7, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 24, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a609.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a609.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a609.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a609.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)


    a610 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "MEC455").first.id, code: "543").first_or_create!(name: "TBC",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at610 = ActivityTimetable.where(activity_id: a610.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 7, max_week_num: 7, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "ACME535MEC445 should be completed before attending this lab",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a610.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a610.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a610.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a610.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)


    a611 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "ACS230").first.id, code: "241").first_or_create!(name: "Control Systems Analysis",
        name_abrv: "", archived: false, in_drive: false, user_id: 5)
    at611 = ActivityTimetable.where(activity_id: a611.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 10, max_week_num: 12, pref_room_id: $room_ec.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 144, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a611.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_med.id)
    ActivityGta.where(activity_id: a611.id).first_or_create!(criteria: "Understanding of physical systems modeling, the analysis of 1st and 2nd order systems, bode diagrams and root locus plots",
        job_desc:"This laboratory involves analysis of s-domain control systems using bode diagrams and root locus plots, an understanding of stability margins and control system types.", jobshop_desc: "GTA in MEE, the Diamond: ACSE Labs in the Electronics & Control Lab", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a611.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_sum.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: 2)
    ActivityTech.where(activity_id: a611.id).first_or_create!(cost_per_student: nil, equip_needed: "Loads",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)


    a612 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "CIV6733").first.id, code: "429").first_or_create!(name: "Weirs",
        name_abrv: "WEIRS", archived: false, in_drive: false, user_id: 5)
    at612 = ActivityTimetable.where(activity_id: a612.id).first_or_create!(duration: 120, kit_prep_time: nil, min_week_num: 6, max_week_num: 6, pref_room_id: $room_fl.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 80, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a612.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/yxbxl4o9", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a612.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a612.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_mole.id, num_assess: nil)
    ActivityTech.where(activity_id: a612.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a612.id, programme_id: $prog_civ.id).first_or_create!


    a613 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "GEE204").first.id, code: "430").first_or_create!(name: "Fluidic Carousel",
        name_abrv: "FUNLAB", archived: false, in_drive: true, user_id: 3)
    at613 = ActivityTimetable.where(activity_id: a613.id).first_or_create!(duration: 90, kit_prep_time: nil, min_week_num: 12, max_week_num: 12, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 50, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a613.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "https://tinyurl.com/y3kowsbv", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a613.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a613.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a613.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a613.id, programme_id: $prog_gee.id).first_or_create!


    a614 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "AER192").first.id, code: "unknowncode81").first_or_create!(name: "Name that Gas",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at614 = ActivityTimetable.where(activity_id: a614.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 9, max_week_num: 10, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 60, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a614.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a614.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a614.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a614.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a614.id, programme_id: $prog_aero.id).first_or_create!


    a615 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "FCE6100").first.id, code: "1").first_or_create!(name: "FCE6100",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at615 = ActivityTimetable.where(activity_id: a615.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a615.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a615.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a615.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a615.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 3)


    a616 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "130").first_or_create!(name: "Consigma Front Training",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at616 = ActivityTimetable.where(activity_id: a616.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 1, max_week_num: 3, pref_room_id: $room_pp.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 10, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a616.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a616.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a616.id).first_or_create!(assess_weight: nil, notes: "only training to get them ready for the actual exp",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a616.id).first_or_create!(cost_per_student: nil, equip_needed: "ConsiGma25",
        last_risk_assess: Date.new(19, 1, 20), next_risk_assess: Date.new(20, 1, 20), tech_lead_id: 1, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a616.id, programme_id: $prog_cbe.id).first_or_create!


    a617 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "131").first_or_create!(name: "Consigma Back Training",
        name_abrv: "", archived: false, in_drive: false, user_id: 5)
    at617 = ActivityTimetable.where(activity_id: a617.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 1, max_week_num: 3, pref_room_id: $room_pp.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 10, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a617.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a617.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a617.id).first_or_create!(assess_weight: nil, notes: "only training to get them ready for the actual exp",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a617.id).first_or_create!(cost_per_student: nil, equip_needed: "ConsiGma25",
        last_risk_assess: Date.new(19, 1, 20), next_risk_assess: Date.new(20, 1, 20), tech_lead_id: 4, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a617.id, programme_id: $prog_cbe.id).first_or_create!


    a618 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "132").first_or_create!(name: "Cont Crystalliser Training",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at618 = ActivityTimetable.where(activity_id: a618.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 1, max_week_num: 3, pref_room_id: $room_al.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 10, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a618.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a618.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a618.id).first_or_create!(assess_weight: nil, notes: "only training to get them ready for the actual exp",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a618.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a618.id, programme_id: $prog_cbe.id).first_or_create!


    a619 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE260").first.id, code: "133").first_or_create!(name: "Carousel Filter Dryer Training",
        name_abrv: "", archived: false, in_drive: false, user_id: 5)
    at619 = ActivityTimetable.where(activity_id: a619.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 1, max_week_num: 3, pref_room_id: $room_al.id,
        same_as_prev_year: true, series_setup_time: 30, setup_time: 60, takedown_time: 60, notes: "",
        capacity: 10, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a619.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a619.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a619.id).first_or_create!(assess_weight: nil, notes: "only training to get them ready for the actual exp",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_other.id, num_assess: nil)
    ActivityTech.where(activity_id: a619.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a619.id, programme_id: $prog_cbe.id).first_or_create!


    a620 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "COM1005").first.id, code: "unknowncode82").first_or_create!(name: "Lab",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at620 = ActivityTimetable.where(activity_id: a620.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a620.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a620.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a620.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a620.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a620.id, programme_id: $prog_com.id).first_or_create!


    a621 = Activity.where(theme_id: $acme.id, uni_module_id: UniModule.where(code: "FCE001").first.id, code: "unknowncode83").first_or_create!(name: "Iforge",
        name_abrv: "IF", archived: false, in_drive: false, user_id: 4)
    at621 = ActivityTimetable.where(activity_id: a621.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a621.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a621.id).first_or_create!(criteria: "#N/A",
        job_desc:"#N/A", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a621.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a621.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a621.id, programme_id: $prog_com.id).first_or_create!


    a622 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE360").first.id, code: "134").first_or_create!(name: "Investigation of Residence Time Distribution in a CSTR",
        name_abrv: "", archived: false, in_drive: false, user_id: 5)
    at622 = ActivityTimetable.where(activity_id: a622.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 6, max_week_num: 12, pref_room_id: $room_al.id,
        same_as_prev_year: false, series_setup_time: nil, setup_time: 15, takedown_time: 15, notes: "",
        capacity: 6, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a622.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a622.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a622.id).first_or_create!(assess_weight: 10.0, notes: "",
        pre_assess_type_id: $ass_p2p.id, during_assess_type_id: $ass_p2p.id, post_assess_type_id: $ass_sum.id, post_lab_type_id: $post_mole.id, num_assess: 1)
    ActivityTech.where(activity_id: a622.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a622.id, programme_id: $prog_cbe.id).first_or_create!


    a623 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6602").first.id, code: "134").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "", archived: false, in_drive: false, user_id: 5)
    at623 = ActivityTimetable.where(activity_id: a623.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a623.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a623.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a623.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a623.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a623.id, programme_id: $prog_eee.id).first_or_create!


    a624 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6600").first.id, code: "134").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at624 = ActivityTimetable.where(activity_id: a624.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a624.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a624.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a624.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a624.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 3)
    ActivityProgramme.where(activity_id: a624.id, programme_id: $prog_eee.id).first_or_create!


    a625 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6222").first.id, code: "134").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at625 = ActivityTimetable.where(activity_id: a625.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a625.id).first_or_create!(user_id: 1, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a625.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a625.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a625.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 3, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a625.id, programme_id: $prog_eee.id).first_or_create!


    a626 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6225").first.id, code: "134").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at626 = ActivityTimetable.where(activity_id: a626.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a626.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a626.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a626.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a626.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 4, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a626.id, programme_id: $prog_eee.id).first_or_create!


    a627 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "COM6910").first.id, code: "134").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "", archived: false, in_drive: false, user_id: 4)
    at627 = ActivityTimetable.where(activity_id: a627.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a627.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a627.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a627.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a627.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a627.id, programme_id: $prog_eee.id).first_or_create!


    a628 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6602").first.id, code: "141").first_or_create!(name: "Lab View",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at628 = ActivityTimetable.where(activity_id: a628.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a628.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a628.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a628.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a628.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 1, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a628.id, programme_id: $prog_eee.id).first_or_create!


    a629 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6602").first.id, code: "402").first_or_create!(name: "FPGA",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at629 = ActivityTimetable.where(activity_id: a629.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a629.id).first_or_create!(user_id: 4, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a629.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a629.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a629.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a629.id, programme_id: $prog_eee.id).first_or_create!


    a630 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6600").first.id, code: "402").first_or_create!(name: "FPGA",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at630 = ActivityTimetable.where(activity_id: a630.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a630.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a630.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a630.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a630.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 2)
    ActivityProgramme.where(activity_id: a630.id, programme_id: $prog_eee.id).first_or_create!


    a631 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6602").first.id, code: "142").first_or_create!(name: "Power Electronics",
        name_abrv: "", archived: false, in_drive: false, user_id: 1)
    at631 = ActivityTimetable.where(activity_id: a631.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a631.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a631.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a631.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a631.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 4)
    ActivityProgramme.where(activity_id: a631.id, programme_id: $prog_eee.id).first_or_create!


    a632 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "EEE6602").first.id, code: "313").first_or_create!(name: "Clean Room",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at632 = ActivityTimetable.where(activity_id: a632.id).first_or_create!(duration: nil, kit_prep_time: nil, min_week_num: nil, max_week_num: nil, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: nil, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a632.id).first_or_create!(user_id: 5, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a632.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a632.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a632.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a632.id, programme_id: $prog_eee.id).first_or_create!


    a633 = Activity.where(theme_id: $mbce.id, uni_module_id: UniModule.where(code: "CPE360").first.id, code: "135").first_or_create!(name: "Bioreactor Engineering",
        name_abrv: "", archived: false, in_drive: false, user_id: 3)
    at633 = ActivityTimetable.where(activity_id: a633.id).first_or_create!(duration: 60, kit_prep_time: nil, min_week_num: 9, max_week_num: 12, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "",
        capacity: 6, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a633.id).first_or_create!(user_id: 3, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_low.id)
    ActivityGta.where(activity_id: a633.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a633.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a633.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 5, tech_ustudy_id: 1)
    ActivityProgramme.where(activity_id: a633.id, programme_id: $prog_cbe.id).first_or_create!


    a634 = Activity.where(theme_id: $ccee.id, uni_module_id: UniModule.where(code: "AMR131").first.id, code: "134").first_or_create!(name: "Workstation Familiarisation",
        name_abrv: "", archived: false, in_drive: false, user_id: 2)
    at634 = ActivityTimetable.where(activity_id: a634.id).first_or_create!(duration: 180, kit_prep_time: nil, min_week_num: 1, max_week_num: 6, pref_room_id: nil,
        same_as_prev_year: false, series_setup_time: nil, setup_time: nil, takedown_time: nil, notes: "To run before DC Circuits",
        capacity: 140, checked_on_timetable: false)

    ActivityTeaching.where(activity_id: a634.id).first_or_create!(user_id: 2, g_drive_link: "",
        mole_pub_link: "", resit_priority_id: $resit_high.id)
    ActivityGta.where(activity_id: a634.id).first_or_create!(criteria: "",
        job_desc:"", jobshop_desc: "", marking_time: nil, staff_ratio: nil)
    ActivityAssess.where(activity_id: a634.id).first_or_create!(assess_weight: nil, notes: "",
        pre_assess_type_id: $ass_none.id, during_assess_type_id: $ass_none.id, post_assess_type_id: $ass_none.id, post_lab_type_id: $post_none.id, num_assess: nil)
    ActivityTech.where(activity_id: a634.id).first_or_create!(cost_per_student: nil, equip_needed: "",
        last_risk_assess: nil, next_risk_assess: nil, tech_lead_id: 2, tech_ustudy_id: 5)
    ActivityProgramme.where(activity_id: a634.id, programme_id: $prog_amrc.id).first_or_create!
    
end

# Call this at end of seeds file to make all activities and modules, not just 10 of each
def make_all
    puts "Making all modules and activities - this will take a while"
    make_all_modules
    make_all_activities
end

# -------
# Uncomment the line below to seed all activities - will take a long time
# make_all

# Requests (test request only for now)
#

EditRequest.where(id: 1).first_or_create!(initiator_id: 4, target_id: 1, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 1)
EditRequest.where(id: 2).first_or_create!(initiator_id: 4, target_id: 1, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 1)
EditRequest.where(id: 3).first_or_create!(initiator_id: 4, target_id: 2, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 2)
EditRequest.where(id: 4).first_or_create!(initiator_id: 4, target_id: 2, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 2)
EditRequest.where(id: 5).first_or_create!(initiator_id: 4, target_id: 3, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 3)
EditRequest.where(id: 6).first_or_create!(initiator_id: 4, target_id: 3, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 3)
EditRequest.where(id: 7).first_or_create!(initiator_id: 4, target_id: 4, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 4)
EditRequest.where(id: 8).first_or_create!(initiator_id: 4, target_id: 4, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 4)
EditRequest.where(id: 9).first_or_create!(initiator_id: 4, target_id: 5, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 5)
EditRequest.where(id: 10).first_or_create!(initiator_id: 4, target_id: 5, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 5)
EditRequest.where(id: 11).first_or_create!(initiator_id: 4, target_id: 6, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 6)
EditRequest.where(id: 12).first_or_create!(initiator_id: 4, target_id: 6, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 6)
EditRequest.where(id: 13).first_or_create!(initiator_id: 4, target_id: 7, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 7)
EditRequest.where(id: 14).first_or_create!(initiator_id: 4, target_id: 7, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 7)
EditRequest.where(id: 15).first_or_create!(initiator_id: 4, target_id: 8, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 8)
EditRequest.where(id: 16).first_or_create!(initiator_id: 4, target_id: 8, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 8)
EditRequest.where(id: 17).first_or_create!(initiator_id: 4, target_id: 9, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 9)
EditRequest.where(id: 18).first_or_create!(initiator_id: 4, target_id: 9, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 9)
EditRequest.where(id: 19).first_or_create!(initiator_id: 4, target_id: 10, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 10)
EditRequest.where(id: 20).first_or_create!(initiator_id: 4, target_id: 10, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 10)
EditRequest.where(id: 21).first_or_create!(initiator_id: 4, target_id: 11, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 5, status: 0, bulk_id: 11)
EditRequest.where(id: 22).first_or_create!(initiator_id: 4, target_id: 11, message: "Test Request", title: "Test Request Title", activity_id: 1, column_id: 17, status: 0, bulk_id: 11)


# Enable audit
ActivityAssess.auditing_enabled = true
ActivityGta.auditing_enabled = true
ActivityObjective.auditing_enabled = true
ActivityProgramme.auditing_enabled = true
ActivityTeaching.auditing_enabled = true
ActivityTech.auditing_enabled = true
ActivityTimetable.auditing_enabled = true
Activity.auditing_enabled = true
Dropdown.auditing_enabled = true
GtaInvite.auditing_enabled = true
Objective.auditing_enabled = true
Programme.auditing_enabled = true
RoomBooking.auditing_enabled = true
Room.auditing_enabled = true
Theme.auditing_enabled = true
UniModule.auditing_enabled = true
User.auditing_enabled = true
