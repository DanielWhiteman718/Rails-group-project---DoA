:javascript
  $(document).ready(function() {
    $('#objective')
      .on('cocoon:after-insert', function() {
        $('.select2').select2();
      });

    $('#gta')
      .on('cocoon:after-insert', function() {
        $('.select2').select2();
      });
  });

%h1.tableheader Respond to request
.actbuttonwrapper
  = link_to "Back", edit_requests_path, class: 'btn btn-primary btn-lg tablebutton'

-# Bulk request details
%h3.tableheader Request Details
%table
  %thead
    %tr
      %th Requested by
      %th Request details
  %tbody
    %tr
      %td= @request_details.initiator.display_name 
      %td= @request_details.title

%br
%h3.tableheader Requests

%p.tableheader 
  Please respond to the edit requests below. You can either save changes individually or
  save all changes at once. If changes are not required, please click the "No Changes
  Required" button for each request. 

%p.tableheader
  For each request you will see the activity, the message, the field that requires editing
  and the current value of that field. Once you have responded to each of these requests,
  they will show as completed and you can see the new value you assigned.
#errors
  - if !@errors.blank?
    - @errors.each do |err|
      - if err.kind_of?(Array)
        - err.each do |e|
          - if e != true
            %p #{e}
      - else
        - if err != true
          %p #{err}

-# Form for bulk
= simple_form_for :bulk_request, url: bulk_edit_requests_path do |f|
  = f.hidden_field :bulk_id, value: @bulk_id
  - all_complete = true
  -# Nested form for each request
  - if @edit_requests.size != 0
    - @edit_requests.each_with_index do |edit_request, index|
      -# Completed
      - if edit_request.status == 2
        %hr
        %p.tableheader #{index + 1} of #{@edit_requests.size} - Completed
        %div.request
          .row
            .col-3
              %h6 Activity: 
              #{edit_request.activity.activity_code}
              %br 
              %br
              = link_to 'Full Details', activity_path(edit_request.activity), :class => "ajax-modal btn btn-primary btn-sm tablebutton"
            .col-3
              %h6 Message: 
              #{edit_request.message}
            .col-3
              %h6 Field that requires editing: 
              #{edit_request.column.display_name}

            .col-3
              %h6 New value assigned by you: 
              #{edit_request.field_new_val}

      -# Outstanding
      - if edit_request.status == 0 || edit_request.status == 1
        - all_complete = false
        %hr
        %p.tableheader #{index + 1} of #{@edit_requests.size} - Outstanding
        %div.request
          .row
            .col-3
              %h6 Activity: 
              #{edit_request.activity.activity_code}
              %br 
              %br
              = link_to 'Full Details', activity_path(edit_request.activity), :class => "ajax-modal btn btn-primary btn-sm tablebutton"
            .col-3
              %h6 Message: 
              #{edit_request.message}
            .col-3
              %h6 Field that requires editing: 
              #{edit_request.column.display_name}

            .col-3
              - val, collection = edit_request.field_current_val
              %h6 Current value of the field that requires editing: 
              #{val}
          -# Fields for each request
          = simple_fields_for 'edit_requests[]', edit_request do |ff| 
            %br
            %h6 New Value: 
            -# Input type
            - case edit_request.column.input_type
            - when "check"
              = ff.input :new_val, as: :boolean, :label => edit_request.column.display_name, checked_value: true, unchecked_value: false
            - when "radio"
              = ff.input :new_val, as: :select, collection: collection, label_method: :display_str, value_method: :id, :label => ""
            - when "drop down"
              -# Fills the dropdown with the correct values
              - case edit_request.column.db_name 
              - when "last_risk_assess", "next_risk_assess"
                = ff.input :new_val, as: :date, html5: true, :label => false
              - else 
                = ff.input :new_val, as: :select, collection: collection, label_method: :second, value_method: :first, :label => false, blank: false, input_html: {class: 'select2'}
            - when "text"
              = ff.input :new_val, as: :string, :label => false
            - when "gta"
              = ff.simple_fields_for edit_request.activity.activity_gta do |gta|
                #gta-test
                  = gta.simple_fields_for :gta_invites do |builder|
                    = render 'gta_invite_fields', f: builder   
                  .links
                    #gta
                      -# If editing gta invites is allowed, show the add link
                      = link_to_add_association "Add GTA Invite", gta, :gta_invites, class: "btn btn-primary btn-sm tablebutton"
            - when "objective"
              = ff.simple_fields_for edit_request.activity do |fff|
                #objective-test
                  = fff.simple_fields_for :objective_linkers do |obj|
                    = render 'objective_linker_fields', f: obj   
                  .links
                    #objective
                      -# If editing gta invites is allowed, show the add link
                      = link_to_add_association "Add Learning Outcome", fff, :objective_linkers, class: "btn btn-primary btn-sm tablebutton"
            - when "programmes"
              = ff.simple_fields_for edit_request.activity do |act|
                = act.association :programmes, as: :check_boxes, collection: Programme.order(:code), label_method: :code, value_method: :id, include_blank: false
            - when "other_rooms"
              = ff.simple_fields_for edit_request.activity.activity_timetable do |act|
                = act.association :rooms, as: :check_boxes, collection: Room.order(:code), label_method: :display_str, value_method: :id, include_blank: false

            -# Ignore button
            - submit_text = "Respond to " + (index + 1).to_s
            = f.submit "Save Changes", formaction: single_edit_request_path(edit_request), class: 'btn btn-primary btn-md tablebutton'
            = f.submit "No Changes Required", formaction: reject_edit_request_path(edit_request), class: 'btn btn-primary btn-md tablebutton'
    - if !all_complete
      = f.submit "Save All Changes", class: 'btn btn-primary btn-lg tablebutton' 
  - else
    %p.tableheader There are no outstanding changes for this request.
%br